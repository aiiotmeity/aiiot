{"version":3,"file":"static/js/323.6b7c1bc9.chunk.js","mappings":"oLAIAA,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAcC,EAAAA,GAAaC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,GAAQC,EAAAA,IAEhG,MAgCA,EAhCkBC,IAA0C,IAAzC,aAAEC,EAAY,kBAAEC,GAAmBF,EAClD,MAAMG,GAAYC,EAAAA,EAAAA,SAAQ,KACtB,IAAKH,GAAwC,IAAxBA,EAAaI,OAAc,MAAO,CAAEC,OAAQ,GAAIC,SAAU,IAC/E,MAAMD,EAASL,EAAaO,IAAIC,GAAK,IAAIC,KAAKD,EAAEE,KAAKC,mBAAmB,QAAS,CAAEC,MAAO,QAASF,IAAK,aAClGG,EAAab,EAAaO,IAAIC,GAAKA,EAAE,GAAGP,UAC9C,MAAO,CACHI,SACAC,SAAU,CAAC,CACPQ,MAAOb,EAAkBc,cACzBC,KAAMH,EACNI,YAAa,UACbC,gBAAiB,0BACjBC,MAAM,EACNC,QAAS,OAGlB,CAACpB,EAAcC,IASlB,OAAKD,GAAwC,IAAxBA,EAAaI,QAI3BiB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,QAXQ,CACjBC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CAAEC,OAAQ,CAAEC,SAAS,IAC9BC,OAAQ,CAAEC,EAAG,CAAEC,MAAO,CAAEC,MAAO,YAAeC,EAAG,CAAEF,MAAO,CAAEC,MAAO,cAOnChB,KAAMd,KAH/BmB,EAAAA,EAAAA,KAAA,OAAKa,UAAU,eAAcC,UAACd,EAAAA,EAAAA,KAAA,KAAAc,SAAG,kC","sources":["components/LazyChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst LazyChart = ({ forecastData, selectedParameter }) => {\r\n    const chartData = useMemo(() => {\r\n        if (!forecastData || forecastData.length === 0) return { labels: [], datasets: [] };\r\n        const labels = forecastData.map(d => new Date(d.day).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n        const dataPoints = forecastData.map(d => d[`${selectedParameter}_max`]);\r\n        return {\r\n            labels,\r\n            datasets: [{\r\n                label: selectedParameter.toUpperCase(),\r\n                data: dataPoints,\r\n                borderColor: '#3b82f6',\r\n                backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                fill: true,\r\n                tension: 0.4,\r\n            }]\r\n        };\r\n    }, [forecastData, selectedParameter]);\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: { legend: { display: false } },\r\n        scales: { x: { ticks: { color: '#6b7280' } }, y: { ticks: { color: '#6b7280' } } }\r\n    };\r\n\r\n    if (!forecastData || forecastData.length === 0) {\r\n        return <div className=\"panel-loader\"><p>No forecast data available.</p></div>;\r\n    }\r\n\r\n    return <Line options={chartOptions} data={chartData} />;\r\n};\r\n\r\nexport default LazyChart;"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","_ref","forecastData","selectedParameter","chartData","useMemo","length","labels","datasets","map","d","Date","day","toLocaleDateString","month","dataPoints","label","toUpperCase","data","borderColor","backgroundColor","fill","tension","_jsx","Line","options","responsive","maintainAspectRatio","plugins","legend","display","scales","x","ticks","color","y","className","children"],"sourceRoot":""}