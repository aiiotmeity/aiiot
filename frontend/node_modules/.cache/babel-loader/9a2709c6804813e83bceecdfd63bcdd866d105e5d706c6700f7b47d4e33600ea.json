{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst MapPage = () => {\n  _s();\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n\n  // --- State for Forecast Section ---\n  const [forecastData, setForecastData] = useState([]);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [selectedParameter, setSelectedParameter] = useState('pm25_max');\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapInstance) {\n      const L = window.L;\n      map = L.map(mapRef.current).setView([10.176, 76.430], 14);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) map.remove();\n    };\n  }, []);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n\n  // --- Effect to fetch forecast data when a station is selected ---\n  useEffect(() => {\n    if (!selectedStationId) return;\n    const fetchForecast = async () => {\n      setIsForecastLoading(true);\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\n        if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\n        const data = await response.json();\n        setForecastData(data.forecast_data || []);\n      } catch (err) {\n        console.error(\"Forecast fetch error:\", err);\n        setForecastData([]);\n      } finally {\n        setIsForecastLoading(false);\n      }\n    };\n    fetchForecast();\n  }, [selectedStationId, API_BASE_URL]);\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    const L = window.L;\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const markerOptions = {\n        radius: selectedStationId === id ? 12 : 8,\n        fillColor: getAQIColor(aqi),\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\n        weight: selectedStationId === id ? 3 : 1.5,\n        opacity: 1,\n        fillOpacity: 0.85\n      };\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\n      } else {\n        const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\n        marker.on('click', () => {\n          setSelectedStationId(id);\n          setIsPanelOpen(true);\n          mapInstance.setView([lat, lng], 16);\n        });\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n\n  // --- Logic to prepare data for the forecast chart ---\n  const forecastChartData = useMemo(() => {\n    if (!forecastData || forecastData.length === 0) {\n      return {\n        labels: [],\n        datasets: []\n      };\n    }\n    const labels = forecastData.map(d => d.day);\n    const dataPoints = forecastData.map(d => d[selectedParameter]);\n    return {\n      labels,\n      datasets: [{\n        label: selectedParameter.replace('_max', '').toUpperCase(),\n        data: dataPoints,\n        borderColor: '#3b82f6',\n        backgroundColor: 'rgba(59, 130, 246, 0.2)',\n        fill: true,\n        tension: 0.4\n      }]\n    };\n  }, [forecastData, selectedParameter]);\n  const forecastChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#94a3b8'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#94a3b8'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen),\n          title: isPanelOpen ? \"Hide Panel\" : \"Show Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-satellite-dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 53\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.entries(stations).map(([id, station]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === id ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"station-btn-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-name\",\n                  children: station.station_info.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-aqi\",\n                  style: {\n                    color: getAQIColor(station.highest_sub_index)\n                  },\n                  children: Math.round(station.highest_sub_index) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 39\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 35\n          }, this), selectedStationData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"forecast-title\",\n                  children: \"4-Day Forecast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"parameter-selector\",\n                  value: selectedParameter,\n                  onChange: e => setSelectedParameter(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pm25_max\",\n                    children: \"PM2.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pm10_max\",\n                    children: \"PM10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"so2_max\",\n                    children: \"SO\\u2082\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"no2_max\",\n                    children: \"NO\\u2082\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"co_max\",\n                    children: \"CO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"o3_max\",\n                    children: \"O\\u2083\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nh3_max\",\n                    children: \"NH\\u2083\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), isForecastLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-loader\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 71\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading forecast...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 110\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  options: forecastChartOptions,\n                  data: forecastChartData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"8osu3KiQWi6LEdqB+oV4c0KwhRU=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","MapPage","_s","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","forecastData","setForecastData","isForecastLoading","setIsForecastLoading","selectedParameter","setSelectedParameter","mapRef","markersRef","navigate","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","L","window","setView","tileLayer","addTo","remove","fetchRealtimeData","response","fetch","ok","Error","status","data","json","Object","keys","length","err","message","interval","setInterval","clearInterval","fetchForecast","forecast_data","console","entries","forEach","id","station","lat","lng","station_info","highest_sub_index","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","setLatLng","setStyle","marker","circleMarker","on","selectedStationData","forecastChartData","labels","datasets","d","day","dataPoints","label","replace","toUpperCase","borderColor","backgroundColor","fill","tension","forecastChartOptions","responsive","maintainAspectRatio","plugins","legend","display","scales","x","ticks","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","style","Math","round","value","onChange","e","target","options","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler\r\n);\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280';\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 200) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\n\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n\r\n    // --- State for Forecast Section ---\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapInstance) {\r\n            const L = window.L;\r\n            map = L.map(mapRef.current).setView([10.176, 76.430], 14);\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 30000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    // --- Effect to fetch forecast data when a station is selected ---\r\n    useEffect(() => {\r\n        if (!selectedStationId) return;\r\n        const fetchForecast = async () => {\r\n            setIsForecastLoading(true);\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\r\n                if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\r\n                const data = await response.json();\r\n                setForecastData(data.forecast_data || []);\r\n            } catch (err) {\r\n                console.error(\"Forecast fetch error:\", err);\r\n                setForecastData([]);\r\n            } finally {\r\n                setIsForecastLoading(false);\r\n            }\r\n        };\r\n        fetchForecast();\r\n    }, [selectedStationId, API_BASE_URL]);\r\n\r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        const L = window.L;\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const { lat, lng } = station.station_info;\r\n            const aqi = station.highest_sub_index;\r\n            const markerOptions = { radius: selectedStationId === id ? 12 : 8, fillColor: getAQIColor(aqi), color: selectedStationId === id ? '#ffffff' : '#1e293b', weight: selectedStationId === id ? 3 : 1.5, opacity: 1, fillOpacity: 0.85 };\r\n            if (markersRef.current[id]) {\r\n                markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\r\n            } else {\r\n                const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\r\n                marker.on('click', () => {\r\n                    setSelectedStationId(id);\r\n                    setIsPanelOpen(true);\r\n                    mapInstance.setView([lat, lng], 16);\r\n                });\r\n                markersRef.current[id] = marker;\r\n            }\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n\r\n    // --- Logic to prepare data for the forecast chart ---\r\n    const forecastChartData = useMemo(() => {\r\n        if (!forecastData || forecastData.length === 0) {\r\n            return { labels: [], datasets: [] };\r\n        }\r\n        const labels = forecastData.map(d => d.day);\r\n        const dataPoints = forecastData.map(d => d[selectedParameter]);\r\n        return {\r\n            labels,\r\n            datasets: [{\r\n                label: selectedParameter.replace('_max', '').toUpperCase(),\r\n                data: dataPoints,\r\n                borderColor: '#3b82f6',\r\n                backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                fill: true,\r\n                tension: 0.4,\r\n            }]\r\n        };\r\n    }, [forecastData, selectedParameter]);\r\n\r\n    const forecastChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: { legend: { display: false } },\r\n        scales: { x: { ticks: { color: '#94a3b8' } }, y: { ticks: { color: '#94a3b8' } } }\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)} title={isPanelOpen ? \"Hide Panel\" : \"Show Panel\"}>\r\n                        <i className={`fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n                    </button>\r\n                    <div className=\"panel-header\">\r\n                        <h2 className=\"panel-title\"><i className=\"fas fa-satellite-dish\"></i> Monitoring Stations</h2>\r\n                        <div className=\"station-selector\">\r\n                            {Object.entries(stations).map(([id, station]) => (\r\n                                <button key={id} className={`station-btn ${selectedStationId === id ? 'active' : ''}`} onClick={() => setSelectedStationId(id)}>\r\n                                    <div className=\"station-btn-content\">\r\n                                        <span className=\"station-name\">{station.station_info.name}</span>\r\n                                        <span className=\"station-aqi\" style={{ color: getAQIColor(station.highest_sub_index) }}>\r\n                                            {Math.round(station.highest_sub_index) || 'N/A'}\r\n                                        </span>\r\n                                    </div>\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"panel-content\">\r\n                        {isLoading && <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div>}\r\n                        {error && <div>Error: {error}</div>}\r\n                        {selectedStationData && (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                <p>Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})</p>\r\n                                <div className=\"pollutant-metrics\">{/* ... pollutant grid from previous step ... */}</div>\r\n\r\n                                {/* --- FORECAST SECTION ADDED HERE --- */}\r\n                                <div className=\"forecast-section\">\r\n                                    <div className=\"forecast-header\">\r\n                                        <h4 className=\"forecast-title\">4-Day Forecast</h4>\r\n                                        <select className=\"parameter-selector\" value={selectedParameter} onChange={(e) => setSelectedParameter(e.target.value)}>\r\n                                            <option value=\"pm25_max\">PM2.5</option>\r\n                                            <option value=\"pm10_max\">PM10</option>\r\n                                            <option value=\"so2_max\">SO₂</option>\r\n                                            <option value=\"no2_max\">NO₂</option>\r\n                                            <option value=\"co_max\">CO</option>\r\n                                            <option value=\"o3_max\">O₃</option>\r\n                                            <option value=\"nh3_max\">NH₃</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    {isForecastLoading ? (\r\n                                        <div className=\"panel-loader\"><div className=\"loading-spinner\"></div><p>Loading forecast...</p></div>\r\n                                    ) : (\r\n                                        <div className=\"chart-container\">\r\n                                            <Line options={forecastChartOptions} data={forecastChartData} />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAChF,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,UAAU;AACjB,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAX,OAAO,CAACY,QAAQ,CACdX,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MACjF,CAAC;AAED,MAAMK,WAAW,GAAIC,GAAG,IAAK;EACzB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE,OAAO,SAAS;EACvD,IAAID,GAAG,IAAI,EAAE,EAAE,OAAO,SAAS;EAC/B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,SAAS;EAChC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,SAAS;EAChC,OAAO,SAAS;AACpB,CAAC;AAED,MAAME,YAAY,GAAIF,GAAG,IAAK;EAC1B,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE,OAAO,SAAS;EACvD,IAAID,GAAG,IAAI,EAAE,EAAE,OAAO,MAAM;EAC5B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,UAAU;EACjC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,WAAW;EAClC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,QAAQ;EAC/B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,aAAa;EACpC,OAAO,WAAW;AACtB,CAAC;AAGD,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACgC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC4C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7C,QAAQ,CAAC,UAAU,CAAC;EAEtE,MAAM8C,MAAM,GAAG5C,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM6C,UAAU,GAAG7C,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAM8C,QAAQ,GAAG1C,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAE2C;EAAK,CAAC,GAAG/B,OAAO,CAAC,CAAC;EAC1B,MAAMgC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EAE7EpD,SAAS,CAAC,MAAM;IACZ,IAAIqD,GAAG;IACP,IAAIR,MAAM,CAACS,OAAO,IAAI,CAAC3B,WAAW,EAAE;MAChC,MAAM4B,CAAC,GAAGC,MAAM,CAACD,CAAC;MAClBF,GAAG,GAAGE,CAAC,CAACF,GAAG,CAACR,MAAM,CAACS,OAAO,CAAC,CAACG,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC;MACzDF,CAAC,CAACG,SAAS,CAAC,oDAAoD,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;MAC5EzB,cAAc,CAACyB,GAAG,CAAC;IACvB;IACA,OAAO,MAAM;MAAE,IAAIA,GAAG,EAAEA,GAAG,CAACO,MAAM,CAAC,CAAC;IAAE,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG3D,WAAW,CAAC,YAAY;IAC9CgC,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,oBAAoB,CAAC;MACjE,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCtC,WAAW,CAACqC,IAAI,CAACtC,QAAQ,CAAC;MAC1B,IAAI,CAACE,iBAAiB,IAAIsC,MAAM,CAACC,IAAI,CAACH,IAAI,CAACtC,QAAQ,CAAC,CAAC0C,MAAM,GAAG,CAAC,EAAE;QAC7DvC,oBAAoB,CAACqC,MAAM,CAACC,IAAI,CAACH,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACvD;IACJ,CAAC,CAAC,OAAO2C,GAAG,EAAE;MACVpC,QAAQ,CAACoC,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACNvC,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACe,YAAY,EAAElB,iBAAiB,CAAC,CAAC;EAErC/B,SAAS,CAAC,MAAM;IACZ6D,iBAAiB,CAAC,CAAC;IACnB,MAAMa,QAAQ,GAAGC,WAAW,CAACd,iBAAiB,EAAE,KAAK,CAAC;IACtD,OAAO,MAAMe,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACb,iBAAiB,CAAC,CAAC;;EAEvB;EACA7D,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC+B,iBAAiB,EAAE;IACxB,MAAM8C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9BnC,oBAAoB,CAAC,IAAI,CAAC;MAC1B,IAAI;QACA,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,gBAAgBlB,iBAAiB,YAAY,CAAC;QAC1F,IAAI,CAAC+B,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QACvE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC5B,eAAe,CAAC2B,IAAI,CAACW,aAAa,IAAI,EAAE,CAAC;MAC7C,CAAC,CAAC,OAAON,GAAG,EAAE;QACVO,OAAO,CAAC5C,KAAK,CAAC,uBAAuB,EAAEqC,GAAG,CAAC;QAC3ChC,eAAe,CAAC,EAAE,CAAC;MACvB,CAAC,SAAS;QACNE,oBAAoB,CAAC,KAAK,CAAC;MAC/B;IACJ,CAAC;IACDmC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAAC9C,iBAAiB,EAAEkB,YAAY,CAAC,CAAC;EAErCjD,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC2B,WAAW,IAAI0C,MAAM,CAACC,IAAI,CAACzC,QAAQ,CAAC,CAAC0C,MAAM,KAAK,CAAC,EAAE;IACxD,MAAMhB,CAAC,GAAGC,MAAM,CAACD,CAAC;IAClBc,MAAM,CAACW,OAAO,CAACnD,QAAQ,CAAC,CAACoD,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,OAAO,CAAC,KAAK;MAChD,MAAM;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGF,OAAO,CAACG,YAAY;MACzC,MAAMhE,GAAG,GAAG6D,OAAO,CAACI,iBAAiB;MACrC,MAAMC,aAAa,GAAG;QAAEC,MAAM,EAAE1D,iBAAiB,KAAKmD,EAAE,GAAG,EAAE,GAAG,CAAC;QAAEQ,SAAS,EAAErE,WAAW,CAACC,GAAG,CAAC;QAAEqE,KAAK,EAAE5D,iBAAiB,KAAKmD,EAAE,GAAG,SAAS,GAAG,SAAS;QAAEU,MAAM,EAAE7D,iBAAiB,KAAKmD,EAAE,GAAG,CAAC,GAAG,GAAG;QAAEW,OAAO,EAAE,CAAC;QAAEC,WAAW,EAAE;MAAK,CAAC;MACpO,IAAIhD,UAAU,CAACQ,OAAO,CAAC4B,EAAE,CAAC,EAAE;QACxBpC,UAAU,CAACQ,OAAO,CAAC4B,EAAE,CAAC,CAACa,SAAS,CAAC,CAACX,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACW,QAAQ,CAACR,aAAa,CAAC;MACxE,CAAC,MAAM;QACH,MAAMS,MAAM,GAAG1C,CAAC,CAAC2C,YAAY,CAAC,CAACd,GAAG,EAAEC,GAAG,CAAC,EAAEG,aAAa,CAAC,CAAC7B,KAAK,CAAChC,WAAW,CAAC;QAC3EsE,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,MAAM;UACrBnE,oBAAoB,CAACkD,EAAE,CAAC;UACxB5C,cAAc,CAAC,IAAI,CAAC;UACpBX,WAAW,CAAC8B,OAAO,CAAC,CAAC2B,GAAG,EAAEC,GAAG,CAAC,EAAE,EAAE,CAAC;QACvC,CAAC,CAAC;QACFvC,UAAU,CAACQ,OAAO,CAAC4B,EAAE,CAAC,GAAGe,MAAM;MACnC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACtE,WAAW,EAAEE,QAAQ,EAAEE,iBAAiB,CAAC,CAAC;EAE9C,MAAMqE,mBAAmB,GAAGvE,QAAQ,CAACE,iBAAiB,CAAC;;EAEvD;EACA,MAAMsE,iBAAiB,GAAGlG,OAAO,CAAC,MAAM;IACpC,IAAI,CAACoC,YAAY,IAAIA,YAAY,CAACgC,MAAM,KAAK,CAAC,EAAE;MAC5C,OAAO;QAAE+B,MAAM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;IACvC;IACA,MAAMD,MAAM,GAAG/D,YAAY,CAACc,GAAG,CAACmD,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC;IAC3C,MAAMC,UAAU,GAAGnE,YAAY,CAACc,GAAG,CAACmD,CAAC,IAAIA,CAAC,CAAC7D,iBAAiB,CAAC,CAAC;IAC9D,OAAO;MACH2D,MAAM;MACNC,QAAQ,EAAE,CAAC;QACPI,KAAK,EAAEhE,iBAAiB,CAACiE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;QAC1D1C,IAAI,EAAEuC,UAAU;QAChBI,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE,yBAAyB;QAC1CC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE;MACb,CAAC;IACL,CAAC;EACL,CAAC,EAAE,CAAC1E,YAAY,EAAEI,iBAAiB,CAAC,CAAC;EAErC,MAAMuE,oBAAoB,GAAG;IACzBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MAAEC,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAM;IAAE,CAAC;IACvCC,MAAM,EAAE;MAAEC,CAAC,EAAE;QAAEC,KAAK,EAAE;UAAE/B,KAAK,EAAE;QAAU;MAAE,CAAC;MAAEgC,CAAC,EAAE;QAAED,KAAK,EAAE;UAAE/B,KAAK,EAAE;QAAU;MAAE;IAAE;EACrF,CAAC;EAED,oBACIxE,OAAA;IAAKyG,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB1G,OAAA;MAAKyG,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CAAC,eAC7D9G,OAAA;MAAKyG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB1G,OAAA;QAAKyG,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1B1G,OAAA;UAAK+D,EAAE,EAAC,KAAK;UAACgD,GAAG,EAAErF,MAAO;UAAC+E,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACN9G,OAAA;QAAKyG,SAAS,EAAE,iBAAiBvF,WAAW,GAAG,MAAM,GAAG,EAAE,EAAG;QAAAwF,QAAA,gBACzD1G,OAAA;UAAQyG,SAAS,EAAC,cAAc;UAACO,OAAO,EAAEA,CAAA,KAAM7F,cAAc,CAAC,CAACD,WAAW,CAAE;UAAC+F,KAAK,EAAE/F,WAAW,GAAG,YAAY,GAAG,YAAa;UAAAwF,QAAA,eAC3H1G,OAAA;YAAGyG,SAAS,EAAE,OAAOvF,WAAW,GAAG,kBAAkB,GAAG,iBAAiB;UAAG;YAAAyF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACT9G,OAAA;UAAKyG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzB1G,OAAA;YAAIyG,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAAC1G,OAAA;cAAGyG,SAAS,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,wBAAoB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9F9G,OAAA;YAAKyG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC5BxD,MAAM,CAACW,OAAO,CAACnD,QAAQ,CAAC,CAACwB,GAAG,CAAC,CAAC,CAAC6B,EAAE,EAAEC,OAAO,CAAC,kBACxChE,OAAA;cAAiByG,SAAS,EAAE,eAAe7F,iBAAiB,KAAKmD,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;cAACiD,OAAO,EAAEA,CAAA,KAAMnG,oBAAoB,CAACkD,EAAE,CAAE;cAAA2C,QAAA,eAC3H1G,OAAA;gBAAKyG,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,gBAChC1G,OAAA;kBAAMyG,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE1C,OAAO,CAACG,YAAY,CAAC+C;gBAAI;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACjE9G,OAAA;kBAAMyG,SAAS,EAAC,aAAa;kBAACU,KAAK,EAAE;oBAAE3C,KAAK,EAAEtE,WAAW,CAAC8D,OAAO,CAACI,iBAAiB;kBAAE,CAAE;kBAAAsC,QAAA,EAClFU,IAAI,CAACC,KAAK,CAACrD,OAAO,CAACI,iBAAiB,CAAC,IAAI;gBAAK;kBAAAuC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC,GANG/C,EAAE;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOP,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN9G,OAAA;UAAKyG,SAAS,EAAC,eAAe;UAAAC,QAAA,GACzB5F,SAAS,iBAAId,OAAA;YAAKyG,SAAS,EAAC,cAAc;YAAAC,QAAA,eAAC1G,OAAA;cAAKyG,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACxF9F,KAAK,iBAAIhB,OAAA;YAAA0G,QAAA,GAAK,SAAO,EAAC1F,KAAK;UAAA;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAClC7B,mBAAmB,iBAChBjF,OAAA;YAAA0G,QAAA,gBACI1G,OAAA;cAAA0G,QAAA,EAAKzB,mBAAmB,CAACd,YAAY,CAAC+C;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChD9G,OAAA;cAAA0G,QAAA,GAAG,eAAa,EAACU,IAAI,CAACC,KAAK,CAACpC,mBAAmB,CAACb,iBAAiB,CAAC,EAAC,IAAE,EAAC/D,YAAY,CAAC4E,mBAAmB,CAACb,iBAAiB,CAAC,EAAC,GAAC;YAAA;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC/H9G,OAAA;cAAKyG,SAAS,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuD,CAAC,eAG1F9G,OAAA;cAAKyG,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC7B1G,OAAA;gBAAKyG,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC5B1G,OAAA;kBAAIyG,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClD9G,OAAA;kBAAQyG,SAAS,EAAC,oBAAoB;kBAACa,KAAK,EAAE9F,iBAAkB;kBAAC+F,QAAQ,EAAGC,CAAC,IAAK/F,oBAAoB,CAAC+F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;kBAAAZ,QAAA,gBACnH1G,OAAA;oBAAQsH,KAAK,EAAC,UAAU;oBAAAZ,QAAA,EAAC;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACvC9G,OAAA;oBAAQsH,KAAK,EAAC,UAAU;oBAAAZ,QAAA,EAAC;kBAAI;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtC9G,OAAA;oBAAQsH,KAAK,EAAC,SAAS;oBAAAZ,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACpC9G,OAAA;oBAAQsH,KAAK,EAAC,SAAS;oBAAAZ,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACpC9G,OAAA;oBAAQsH,KAAK,EAAC,QAAQ;oBAAAZ,QAAA,EAAC;kBAAE;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClC9G,OAAA;oBAAQsH,KAAK,EAAC,QAAQ;oBAAAZ,QAAA,EAAC;kBAAE;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClC9G,OAAA;oBAAQsH,KAAK,EAAC,SAAS;oBAAAZ,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,EACLxF,iBAAiB,gBACdtB,OAAA;gBAAKyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAAC1G,OAAA;kBAAKyG,SAAS,EAAC;gBAAiB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAAA9G,OAAA;kBAAA0G,QAAA,EAAG;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,gBAErG9G,OAAA;gBAAKyG,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,eAC5B1G,OAAA,CAACb,IAAI;kBAACuI,OAAO,EAAE3B,oBAAqB;kBAAC/C,IAAI,EAAEkC;gBAAkB;kBAAAyB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvG,EAAA,CA3LID,OAAO;EAAA,QAeQpB,WAAW,EACXY,OAAO;AAAA;AAAA6H,EAAA,GAhBtBrH,OAAO;AA6Lb,eAAeA,OAAO;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}