{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport { Line } from 'react-chartjs-2';\nimport './css/MapPage.css';\n\n// Helper function to get AQI color\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 150) return '#ef4444';\n  if (aqi <= 200) return '#dc2626';\n  if (aqi <= 300) return '#7c2d12';\n  return '#4c1d95';\n};\n\n// Main Component\nconst MapPage = () => {\n  _s();\n  // Simplified state: map object, stations data, selected station, loading, and error\n  const [map, setMap] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState('lora-v1');\n  const [loadingData, setLoadingData] = useState(true);\n  const [error, setError] = useState(null);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Effect 1: Load Leaflet library and initialize the map. This runs only once.\n  useEffect(() => {\n    let isMounted = true;\n    console.log(\"MapPage: Component mounted. Starting map initialization.\");\n\n    // Function to load the Leaflet script and CSS\n    const loadLeaflet = () => {\n      return new Promise((resolve, reject) => {\n        if (window.L) {\n          console.log(\"MapPage: Leaflet already loaded.\");\n          resolve(window.L);\n          return;\n        }\n        console.log(\"MapPage: Loading Leaflet library...\");\n        const link = document.createElement('link');\n        link.rel = \"stylesheet\";\n        link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\n        document.head.appendChild(link);\n        const script = document.createElement('script');\n        script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\n        script.async = true;\n        document.head.appendChild(script);\n        script.onload = () => {\n          if (isMounted) {\n            console.log(\"MapPage: Leaflet library loaded successfully.\");\n            resolve(window.L);\n          }\n        };\n        script.onerror = () => {\n          if (isMounted) {\n            console.error(\"MapPage: Failed to load Leaflet script.\");\n            reject(new Error(\"Failed to load map library. Check internet connection.\"));\n          }\n        };\n      });\n    };\n\n    // Main initialization sequence\n    const initialize = async () => {\n      try {\n        const L = await loadLeaflet();\n        if (isMounted && mapRef.current && !mapRef.current._leaflet_id) {\n          console.log(\"MapPage: Initializing map instance...\");\n          const mapInstance = L.map(mapRef.current).setView([10.176, 76.430], 15);\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\n          setMap(mapInstance); // This state update will trigger the data fetch\n          console.log(\"MapPage: Map instance created and ready.\");\n        }\n      } catch (err) {\n        if (isMounted) setError(err.message);\n      }\n    };\n    initialize();\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Empty dependency array ensures this runs only once\n\n  // Effect 2: Fetch data once the map object is available\n  useEffect(() => {\n    if (!map) return; // Don't run if map isn't ready\n\n    let isMounted = true;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      console.error(\"Fetch request timed out after 15 seconds.\");\n      if (isMounted) controller.abort();\n    }, 15000);\n    const fetchData = async () => {\n      setLoadingData(true);\n      setError(null);\n      console.log(\"MapPage: Fetching station data...\");\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/map/`, {\n          signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Server responded with ${response.status}: ${errorText}`);\n        }\n        const data = await response.json();\n        if (data && data.stations) {\n          console.log(\"MapPage: Station data fetched successfully.\");\n          if (isMounted) setStations(data.stations);\n        } else {\n          throw new Error('Received invalid data structure from server.');\n        }\n      } catch (err) {\n        if (isMounted) {\n          if (err.name === 'AbortError') {\n            setError('Request timed out. The server might be slow or offline.');\n          } else {\n            setError(err.message);\n          }\n        }\n        console.error(\"Fetch data error:\", err);\n      } finally {\n        if (isMounted) setLoadingData(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 300000); // Refresh every 5 minutes\n\n    return () => {\n      isMounted = false;\n      clearTimeout(timeoutId);\n      clearInterval(interval);\n    };\n  }, [map, API_BASE_URL]);\n\n  // Effect 3: Update map markers when station data is updated\n  useEffect(() => {\n    if (!map || Object.keys(stations).length === 0) return;\n    Object.entries(stations).forEach(([id, station]) => {\n      var _station$station_info, _station$station_info2;\n      if (!(station !== null && station !== void 0 && (_station$station_info = station.station_info) !== null && _station$station_info !== void 0 && _station$station_info.lat) || !(station !== null && station !== void 0 && (_station$station_info2 = station.station_info) !== null && _station$station_info2 !== void 0 && _station$station_info2.lng)) return;\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\n        markersRef.current[id].setStyle({\n          fillColor: getAQIColor(aqi)\n        });\n      } else {\n        const marker = window.L.circleMarker([lat, lng], {\n          radius: 15,\n          fillColor: getAQIColor(aqi),\n          color: '#ffffff',\n          weight: 3,\n          opacity: 1,\n          fillOpacity: 0.8\n        }).addTo(map);\n        marker.bindPopup(popupContent);\n        marker.on('click', () => setSelectedStationId(id));\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [map, stations]);\n  const selectedStationData = stations[selectedStationId];\n\n  // Simplified rendering logic\n  if (!map) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Map Library...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        ref: mapRef,\n        className: \"map-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel open\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-selector\",\n          children: Object.keys(stations).length > 0 ? Object.keys(stations).map(stationId => {\n            var _stations$stationId, _stations$stationId$s;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === stationId ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(stationId),\n              children: ((_stations$stationId = stations[stationId]) === null || _stations$stationId === void 0 ? void 0 : (_stations$stationId$s = _stations$stationId.station_info) === null || _stations$stationId$s === void 0 ? void 0 : _stations$stationId$s.name) || stationId\n            }, stationId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fetching stations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: loadingData && !selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          style: {\n            margin: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 14\n        }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-value\",\n              style: {\n                color: getAQIColor(selectedStationData.highest_sub_index)\n              },\n              children: Math.round(selectedStationData.highest_sub_index) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-status-text\",\n              children: [\"Air Quality Index (\", selectedStationData.aqi_status || 'Unknown', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metrics-grid\",\n            children: ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => {\n              var _selectedStationData$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-label\",\n                  children: key.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-value\",\n                  children: (_selectedStationData$ = selectedStationData.averages) !== null && _selectedStationData$ !== void 0 && _selectedStationData$[key] ? Math.round(selectedStationData.averages[key]) : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-title\",\n              children: \"5-Day Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: selectedStationData.forecast_data.map(d => d.day),\n                  datasets: [{\n                    label: 'PM2.5 Forecast',\n                    data: selectedStationData.forecast_data.map(d => d.pm25_max),\n                    borderColor: '#3b82f6',\n                    backgroundColor: 'rgba(59, 130, 246, 0.2)',\n                    tension: 0.1\n                  }]\n                },\n                options: {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  legend: {\n                    display: false\n                  },\n                  scales: {\n                    yAxes: [{\n                      ticks: {\n                        fontColor: '#94a3b8',\n                        beginAtZero: true\n                      }\n                    }],\n                    xAxes: [{\n                      ticks: {\n                        fontColor: '#94a3b8'\n                      }\n                    }]\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Forecast data is not available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a station to view details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"kx5Otwgni38nw5E/j9njcCwyPZo=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["Line","jsxDEV","_jsxDEV","Fragment","_Fragment","getAQIColor","aqi","undefined","MapPage","_s","map","setMap","useState","stations","setStations","selectedStationId","setSelectedStationId","loadingData","setLoadingData","error","setError","mapRef","useRef","markersRef","API_BASE_URL","process","env","REACT_APP_API_URL","useEffect","isMounted","console","log","loadLeaflet","Promise","resolve","reject","window","L","link","document","createElement","rel","href","head","appendChild","script","src","async","onload","onerror","Error","initialize","current","_leaflet_id","mapInstance","setView","tileLayer","addTo","err","message","controller","AbortController","timeoutId","setTimeout","abort","fetchData","response","fetch","signal","clearTimeout","ok","errorText","text","status","data","json","name","interval","setInterval","clearInterval","Object","keys","length","entries","forEach","id","station","_station$station_info","_station$station_info2","station_info","lat","lng","highest_sub_index","popupContent","Math","round","setLatLng","setPopupContent","setStyle","fillColor","marker","circleMarker","radius","color","weight","opacity","fillOpacity","bindPopup","on","selectedStationData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","stationId","_stations$stationId","_stations$stationId$s","onClick","style","margin","aqi_status","key","_selectedStationData$","toUpperCase","averages","forecast_data","height","labels","d","day","datasets","label","pm25_max","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","legend","display","scales","yAxes","ticks","fontColor","beginAtZero","xAxes","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport './css/MapPage.css';\r\n\r\n// Helper function to get AQI color\r\nconst getAQIColor = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return '#6b7280';\r\n  if (aqi <= 50) return '#10b981';\r\n  if (aqi <= 100) return '#f59e0b';\r\n  if (aqi <= 150) return '#ef4444';\r\n  if (aqi <= 200) return '#dc2626';\r\n  if (aqi <= 300) return '#7c2d12';\r\n  return '#4c1d95';\r\n};\r\n\r\n// Main Component\r\nconst MapPage = () => {\r\n  // Simplified state: map object, stations data, selected station, loading, and error\r\n  const [map, setMap] = useState(null);\r\n  const [stations, setStations] = useState({});\r\n  const [selectedStationId, setSelectedStationId] = useState('lora-v1');\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // Effect 1: Load Leaflet library and initialize the map. This runs only once.\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    console.log(\"MapPage: Component mounted. Starting map initialization.\");\r\n\r\n    // Function to load the Leaflet script and CSS\r\n    const loadLeaflet = () => {\r\n      return new Promise((resolve, reject) => {\r\n        if (window.L) {\r\n          console.log(\"MapPage: Leaflet already loaded.\");\r\n          resolve(window.L);\r\n          return;\r\n        }\r\n        console.log(\"MapPage: Loading Leaflet library...\");\r\n\r\n        const link = document.createElement('link');\r\n        link.rel = \"stylesheet\";\r\n        link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\r\n        document.head.appendChild(link);\r\n\r\n        const script = document.createElement('script');\r\n        script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\r\n        script.async = true;\r\n        document.head.appendChild(script);\r\n\r\n        script.onload = () => {\r\n          if (isMounted) {\r\n            console.log(\"MapPage: Leaflet library loaded successfully.\");\r\n            resolve(window.L);\r\n          }\r\n        };\r\n        script.onerror = () => {\r\n          if (isMounted) {\r\n            console.error(\"MapPage: Failed to load Leaflet script.\");\r\n            reject(new Error(\"Failed to load map library. Check internet connection.\"));\r\n          }\r\n        };\r\n      });\r\n    };\r\n\r\n    // Main initialization sequence\r\n    const initialize = async () => {\r\n      try {\r\n        const L = await loadLeaflet();\r\n        if (isMounted && mapRef.current && !mapRef.current._leaflet_id) {\r\n          console.log(\"MapPage: Initializing map instance...\");\r\n          const mapInstance = L.map(mapRef.current).setView([10.176, 76.430], 15);\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\r\n          setMap(mapInstance); // This state update will trigger the data fetch\r\n          console.log(\"MapPage: Map instance created and ready.\");\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) setError(err.message);\r\n      }\r\n    };\r\n\r\n    initialize();\r\n\r\n    return () => { isMounted = false; };\r\n  }, []); // Empty dependency array ensures this runs only once\r\n\r\n  // Effect 2: Fetch data once the map object is available\r\n  useEffect(() => {\r\n    if (!map) return; // Don't run if map isn't ready\r\n\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => {\r\n      console.error(\"Fetch request timed out after 15 seconds.\");\r\n      if (isMounted) controller.abort();\r\n    }, 15000);\r\n\r\n    const fetchData = async () => {\r\n      setLoadingData(true);\r\n      setError(null);\r\n      console.log(\"MapPage: Fetching station data...\");\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/map/`, { signal: controller.signal });\r\n        clearTimeout(timeoutId);\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`Server responded with ${response.status}: ${errorText}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data && data.stations) {\r\n          console.log(\"MapPage: Station data fetched successfully.\");\r\n          if (isMounted) setStations(data.stations);\r\n        } else {\r\n          throw new Error('Received invalid data structure from server.');\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          if (err.name === 'AbortError') {\r\n            setError('Request timed out. The server might be slow or offline.');\r\n          } else {\r\n            setError(err.message);\r\n          }\r\n        }\r\n        console.error(\"Fetch data error:\", err);\r\n      } finally {\r\n        if (isMounted) setLoadingData(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 300000); // Refresh every 5 minutes\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      clearTimeout(timeoutId);\r\n      clearInterval(interval);\r\n    };\r\n  }, [map, API_BASE_URL]);\r\n\r\n  // Effect 3: Update map markers when station data is updated\r\n  useEffect(() => {\r\n    if (!map || Object.keys(stations).length === 0) return;\r\n\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      if (!station?.station_info?.lat || !station?.station_info?.lng) return;\r\n\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\r\n\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\r\n        markersRef.current[id].setStyle({ fillColor: getAQIColor(aqi) });\r\n      } else {\r\n        const marker = window.L.circleMarker([lat, lng], {\r\n          radius: 15,\r\n          fillColor: getAQIColor(aqi),\r\n          color: '#ffffff',\r\n          weight: 3,\r\n          opacity: 1,\r\n          fillOpacity: 0.8\r\n        }).addTo(map);\r\n\r\n        marker.bindPopup(popupContent);\r\n        marker.on('click', () => setSelectedStationId(id));\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [map, stations]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n\r\n  // Simplified rendering logic\r\n  if (!map) {\r\n    return <div className=\"map-loading\"><div className=\"loading-spinner\"></div><p>Loading Map Library...</p></div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"map-loading\"><p className=\"error-message\">Error: {error}</p></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <div className=\"map-container\">\r\n        <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n      </div>\r\n      <div className=\"details-panel open\">\r\n        <div className=\"panel-header\">\r\n          <div className=\"station-selector\">\r\n            {Object.keys(stations).length > 0 ? (\r\n              Object.keys(stations).map(stationId => (\r\n                <button\r\n                  key={stationId}\r\n                  className={`station-btn ${selectedStationId === stationId ? 'active' : ''}`}\r\n                  onClick={() => setSelectedStationId(stationId)}\r\n                >\r\n                  {stations[stationId]?.station_info?.name || stationId}\r\n                </button>\r\n              ))\r\n            ) : (\r\n                <p>Fetching stations...</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"panel-content\">\r\n          {loadingData && !selectedStationData ? (\r\n             <div className=\"loading-spinner\" style={{ margin: 'auto' }}></div>\r\n          ) : selectedStationData ? (\r\n            <>\r\n              <div className=\"aqi-overview\">\r\n                <div className=\"aqi-value\" style={{ color: getAQIColor(selectedStationData.highest_sub_index) }}>\r\n                  {Math.round(selectedStationData.highest_sub_index) || 'N/A'}\r\n                </div>\r\n                <div className=\"aqi-status-text\">Air Quality Index ({selectedStationData.aqi_status || 'Unknown'})</div>\r\n              </div>\r\n              <div className=\"metrics-grid\">\r\n                {['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => (\r\n                  <div key={key} className=\"metric-card\">\r\n                    <div className=\"metric-label\">{key.toUpperCase()}</div>\r\n                    <div className=\"metric-value\">{selectedStationData.averages?.[key] ? Math.round(selectedStationData.averages[key]) : '--'}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"forecast-section\">\r\n                <div className=\"forecast-title\">5-Day Forecast</div>\r\n                {selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? (\r\n                  <div style={{ height: '200px' }}>\r\n                    <Line\r\n                      data={{\r\n                        labels: selectedStationData.forecast_data.map(d => d.day),\r\n                        datasets: [{\r\n                          label: 'PM2.5 Forecast',\r\n                          data: selectedStationData.forecast_data.map(d => d.pm25_max),\r\n                          borderColor: '#3b82f6',\r\n                          backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                          tension: 0.1\r\n                        }]\r\n                      }}\r\n                      options={{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        legend: { display: false },\r\n                        scales: {\r\n                          yAxes: [{ ticks: { fontColor: '#94a3b8', beginAtZero: true } }],\r\n                          xAxes: [{ ticks: { fontColor: '#94a3b8' } }]\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <p>Forecast data is not available.</p>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Select a station to view details.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}