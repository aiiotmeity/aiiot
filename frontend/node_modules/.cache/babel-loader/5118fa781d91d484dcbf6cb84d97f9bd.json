{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/Dashboard.css';\n\n// ===== PERFORMANCE OPTIMIZATION: LAZY LOADING =====\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyMap = /*#__PURE__*/React.lazy(_c = () => import('./LazyMap').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Map Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 53\n  }, this)\n})));\n_c2 = LazyMap;\nconst LazyChart = /*#__PURE__*/React.lazy(_c3 = () => import('./LazyChart').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 55\n  }, this)\n})));\n\n// NOTE: Custom hooks were removed from here.\n_c4 = LazyChart;\nfunction Dashboard() {\n  _s();\n  // ===== FIXED: USEMEMO HOOKS ARE NOW DIRECTLY INSIDE THE COMPONENT =====\n  const defaultLocation = useMemo(() => ({\n    lat: 10.178322301561957,\n    lng: 76.43089144291672,\n    accuracy: 50,\n    source: 'default'\n  }), []);\n  const fallbackData = useMemo(() => ({\n    interpolated_aqi: 85,\n    nearest_sensor_info: {\n      current_aqi: 85,\n      current_station_name: 'ASIET Campus Station',\n      distance_to_nearest: 0.5,\n      current_sensor_data: {\n        pm25: 25.5,\n        pm10: 42.3,\n        so2: 15.8,\n        no2: 37.2,\n        co: 1.2,\n        o3: 45.6,\n        nh3: 12.4,\n        temp: 28,\n        hum: 65,\n        pre: 1013\n      }\n    },\n    forecast_data: {\n      nearest_station: [{\n        day: 'Today',\n        pm25_max: 30.2,\n        pm10_max: 37.0,\n        so2_max: 2.4,\n        no2_max: 40.1,\n        co_max: 1.1,\n        o3_max: 3.7,\n        nh3_max: 92.7\n      }, {\n        day: 'Tomorrow',\n        pm25_max: 24.1,\n        pm10_max: 34.2,\n        so2_max: 2.4,\n        no2_max: 45.2,\n        co_max: 1.2,\n        o3_max: 3.2,\n        nh3_max: 100.0\n      }, {\n        day: 'Day 3',\n        pm25_max: 24.3,\n        pm10_max: 30.3,\n        so2_max: 2.2,\n        no2_max: 42.1,\n        co_max: 1.2,\n        o3_max: 3.5,\n        nh3_max: 100.0\n      }, {\n        day: 'Day 4',\n        pm25_max: 19.7,\n        pm10_max: 23.4,\n        so2_max: 2.3,\n        no2_max: 38.5,\n        co_max: 1.2,\n        o3_max: 3.7,\n        nh3_max: 100.0\n      }]\n    },\n    sensor_locations: {\n      'lora-v1': {\n        lat: 10.178322301561957,\n        lng: 76.43089144291672,\n        name: 'Station 1 (ASIET Campus)'\n      },\n      'loradev2': {\n        lat: 10.17095090340159,\n        lng: 76.42962876824544,\n        name: 'Station 2 (Mattoor Junction)'\n      }\n    },\n    idw_status: 'location_required',\n    timestamp: new Date().toISOString()\n  }), []);\n  const navigate = useNavigate();\n\n  // ===== STATE MANAGEMENT =====\n  const [username] = useState(() => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      return user.name || 'User';\n    } catch {\n      return 'User';\n    }\n  });\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [locationStatus, setLocationStatus] = useState('detecting');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dataSource, setDataSource] = useState('fallback'); // 'fallback', 'api', 'interpolated'\n\n  // ===== REFS =====\n  const mapRef = useRef(null);\n  const chartRef = useRef(null);\n  const locationTimeoutRef = useRef(null);\n  const dataFetchTimeoutRef = useRef(null);\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // ===== IMMEDIATE INITIALIZATION =====\n  useEffect(() => {\n    console.log('⚡ DASHBOARD: Initializing with username:', username);\n\n    // Set immediate fallback data for instant UI\n    setDashboardData(fallbackData);\n    setNearestStation({\n      name: 'ASIET Campus Station',\n      distance: 0.5,\n      aqi: 85\n    });\n\n    // Start location detection and API calls\n    startLocationDetection();\n    return () => {\n      if (locationTimeoutRef.current) clearTimeout(locationTimeoutRef.current);\n      if (dataFetchTimeoutRef.current) clearTimeout(dataFetchTimeoutRef.current);\n    };\n  }, [username, fallbackData, startLocationDetection]); // Added startLocationDetection to dependency array\n\n  // ===== LOCATION DETECTION =====\n  const startLocationDetection = useCallback(() => {\n    setLocationStatus('detecting');\n    if (!navigator.geolocation) {\n      console.log('📍 Geolocation not supported, using default location');\n      handleLocationFallback();\n      return;\n    }\n\n    // Set timeout for location detection\n    locationTimeoutRef.current = setTimeout(() => {\n      console.log('📍 Location detection timeout, using default');\n      handleLocationFallback();\n    }, 10000);\n    navigator.geolocation.getCurrentPosition(position => {\n      clearTimeout(locationTimeoutRef.current);\n      const locationData = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        accuracy: position.coords.accuracy,\n        source: 'gps'\n      };\n      console.log('✅ GPS location obtained:', locationData);\n      setUserLocation(locationData);\n      setLocationStatus('found');\n\n      // Save location to server\n      saveLocationToServer(locationData);\n\n      // Fetch dashboard data with location\n      fetchDashboardData(locationData);\n    }, error => {\n      clearTimeout(locationTimeoutRef.current);\n      console.log('❌ Location error:', error.message);\n      handleLocationFallback();\n    }, {\n      enableHighAccuracy: true,\n      timeout: 8000,\n      maximumAge: 300000 // 5 minutes\n    });\n  }, [handleLocationFallback, saveLocationToServer, fetchDashboardData]); // Dependencies updated\n\n  const handleLocationFallback = useCallback(() => {\n    console.log('📍 Using default location');\n    setUserLocation(defaultLocation);\n    setLocationStatus('default');\n\n    // Fetch dashboard data without location\n    fetchDashboardData(null);\n  }, [defaultLocation, fetchDashboardData]); // Dependencies updated\n\n  // ===== SAVE LOCATION TO SERVER =====\n  const saveLocationToServer = useCallback(async locationData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/save-user-location/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          latitude: locationData.lat,\n          longitude: locationData.lng,\n          accuracy: locationData.accuracy,\n          source: locationData.source\n        })\n      });\n      if (response.ok) {\n        console.log('✅ Location saved to server');\n      } else {\n        console.log('⚠️ Failed to save location to server');\n      }\n    } catch (error) {\n      console.log('⚠️ Error saving location to server:', error);\n    }\n  }, [username, API_BASE_URL]);\n\n  // ===== FETCH DASHBOARD DATA =====\n  const fetchDashboardData = useCallback(async (locationData = null) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\n      url.searchParams.append('username', username);\n      if (locationData) {\n        url.searchParams.append('lat', locationData.lat);\n        url.searchParams.append('lng', locationData.lng);\n      }\n      console.log('🔄 Fetching dashboard data from:', url.toString());\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\n      const response = await fetch(url, {\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('✅ Dashboard data received:', data);\n\n      // Process the response data\n      processDashboardResponse(data, locationData);\n    } catch (error) {\n      console.error('❌ Dashboard API error:', error);\n      setError(error.message);\n      setDataSource('fallback');\n\n      // Continue with fallback data\n      setLoading(false);\n    }\n  }, [username, API_BASE_URL, processDashboardResponse]); // Dependencies updated\n\n  // ===== PROCESS DASHBOARD RESPONSE =====\n  const processDashboardResponse = useCallback((data, locationData) => {\n    try {\n      var _data$nearest_sensor_;\n      let source = 'api';\n      let currentAQI = data.interpolated_aqi || ((_data$nearest_sensor_ = data.nearest_sensor_info) === null || _data$nearest_sensor_ === void 0 ? void 0 : _data$nearest_sensor_.current_aqi) || 85;\n      let currentValues = {};\n      let stationName = 'ASIET Campus Station';\n      let distance = 0.5;\n      if (data.idw_interpolated_values && Object.keys(data.idw_interpolated_values).length > 0) {\n        source = 'interpolated';\n        currentValues = data.idw_interpolated_values;\n        stationName = 'Your Location (Smart Analysis)';\n        distance = 0;\n        currentAQI = data.interpolated_aqi || currentAQI;\n        console.log('🎯 Using IDW interpolated values');\n      } else if (data.nearest_sensor_info) {\n        currentValues = data.nearest_sensor_info.current_sensor_data || {};\n        stationName = data.nearest_sensor_info.current_station_name || 'ASIET Campus Station';\n        distance = data.nearest_sensor_info.distance_to_nearest || 0.5;\n        currentAQI = data.nearest_sensor_info.current_aqi || currentAQI;\n        console.log('📡 Using nearest station data');\n      }\n      const updatedData = {\n        ...data,\n        current_sensor_data: currentValues,\n        interpolated_aqi: currentAQI,\n        forecast_data: data.forecast_data || fallbackData.forecast_data,\n        sensor_locations: data.sensor_locations || fallbackData.sensor_locations,\n        idw_status: data.idw_status || 'location_required',\n        weather_data: {\n          temp: currentValues.temp || 28,\n          hum: currentValues.hum || 65,\n          pre: currentValues.pre || 1013\n        }\n      };\n      setDashboardData(updatedData);\n      setDataSource(source);\n      setNearestStation({\n        name: stationName,\n        distance: distance,\n        aqi: currentAQI\n      });\n      setLoading(false);\n      console.log(`✅ Dashboard updated with ${source} data`);\n    } catch (error) {\n      console.error('❌ Error processing dashboard response:', error);\n      setError('Failed to process dashboard data');\n      setLoading(false);\n    }\n  }, [fallbackData]);\n\n  // ===== COMPUTED VALUES =====\n  const currentValues = useMemo(() => {\n    var _dashboardData$neares;\n    if (!dashboardData) return fallbackData.nearest_sensor_info.current_sensor_data;\n    return dashboardData.idw_interpolated_values || dashboardData.current_sensor_data || ((_dashboardData$neares = dashboardData.nearest_sensor_info) === null || _dashboardData$neares === void 0 ? void 0 : _dashboardData$neares.current_sensor_data) || fallbackData.nearest_sensor_info.current_sensor_data;\n  }, [dashboardData, fallbackData]);\n  const currentAQI = useMemo(() => {\n    var _dashboardData$neares2;\n    if (!dashboardData) return fallbackData.interpolated_aqi;\n    return dashboardData.interpolated_aqi || ((_dashboardData$neares2 = dashboardData.nearest_sensor_info) === null || _dashboardData$neares2 === void 0 ? void 0 : _dashboardData$neares2.current_aqi) || fallbackData.interpolated_aqi;\n  }, [dashboardData, fallbackData]);\n  const aqiStatus = useMemo(() => {\n    const aqi = currentAQI;\n    if (aqi <= 50) return {\n      status: 'GOOD',\n      color: '#10b981',\n      class: 'good'\n    };\n    if (aqi <= 100) return {\n      status: 'MODERATE',\n      color: '#f59e0b',\n      class: 'moderate'\n    };\n    if (aqi <= 150) return {\n      status: 'UNHEALTHY',\n      color: '#ef4444',\n      class: 'unhealthy'\n    };\n    return {\n      status: 'HAZARDOUS',\n      color: '#7c2d12',\n      class: 'hazardous'\n    };\n  }, [currentAQI]);\n  const weatherData = useMemo(() => {\n    if (!dashboardData) return {\n      temp: 28,\n      hum: 65,\n      pre: 1013\n    };\n    return dashboardData.weather_data || {\n      temp: currentValues.temp || 28,\n      hum: currentValues.hum || 65,\n      pre: currentValues.pre || 1013\n    };\n  }, [dashboardData, currentValues]);\n\n  // ===== MEMOIZED COMPONENTS & HANDLERS =====\n  const metricIcons = useMemo(() => ({\n    pm25: '🌱',\n    pm10: '🍃',\n    so2: '🏭',\n    no2: '💨',\n    co: '☁️',\n    o3: '☀️',\n    nh3: '⚗️'\n  }), []);\n  const formatValue = useCallback((value, metric) => {\n    const numValue = parseFloat(value) || 0;\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\n  }, []);\n  const handleParameterChange = useCallback(param => {\n    setSelectedParameter(param);\n  }, []);\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\n  const handleLogout = useCallback(() => {\n    localStorage.clear();\n    navigate('/login');\n  }, [navigate]);\n  const scrollToMap = useCallback(() => {\n    var _document$getElementB;\n    (_document$getElementB = document.getElementById('map-section')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }, []);\n\n  // Omitting the rest of the component for brevity as it contains no further errors.\n  // The full JSX rendering part is unchanged.\n  // ... (rest of the component's JSX remains the same as in your original file)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"2Aa7ylJ9SUTsVXTLLSI0aGjaWN4=\", false, function () {\n  return [useNavigate];\n});\n_c5 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LazyMap$React.lazy\");\n$RefreshReg$(_c2, \"LazyMap\");\n$RefreshReg$(_c3, \"LazyChart$React.lazy\");\n$RefreshReg$(_c4, \"LazyChart\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useNavigate","jsxDEV","_jsxDEV","LazyMap","lazy","_c","catch","default","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","LazyChart","_c3","_c4","Dashboard","_s","defaultLocation","lat","lng","accuracy","source","fallbackData","interpolated_aqi","nearest_sensor_info","current_aqi","current_station_name","distance_to_nearest","current_sensor_data","pm25","pm10","so2","no2","co","o3","nh3","temp","hum","pre","forecast_data","nearest_station","day","pm25_max","pm10_max","so2_max","no2_max","co_max","o3_max","nh3_max","sensor_locations","name","idw_status","timestamp","Date","toISOString","navigate","username","user","JSON","parse","localStorage","getItem","selectedParameter","setSelectedParameter","isMenuOpen","setIsMenuOpen","dashboardData","setDashboardData","userLocation","setUserLocation","nearestStation","setNearestStation","locationStatus","setLocationStatus","loading","setLoading","error","setError","dataSource","setDataSource","mapRef","chartRef","locationTimeoutRef","dataFetchTimeoutRef","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","distance","aqi","startLocationDetection","current","clearTimeout","navigator","geolocation","handleLocationFallback","setTimeout","getCurrentPosition","position","locationData","coords","latitude","longitude","saveLocationToServer","fetchDashboardData","message","enableHighAccuracy","timeout","maximumAge","response","fetch","method","headers","body","stringify","ok","url","URL","searchParams","append","toString","controller","AbortController","timeoutId","abort","signal","Error","status","statusText","data","json","processDashboardResponse","_data$nearest_sensor_","currentAQI","currentValues","stationName","idw_interpolated_values","Object","keys","length","updatedData","weather_data","_dashboardData$neares","_dashboardData$neares2","aqiStatus","color","class","weatherData","metricIcons","formatValue","value","metric","numValue","parseFloat","toFixed","Math","round","handleParameterChange","param","toggleMenu","prev","handleLogout","clear","scrollToMap","_document$getElementB","document","getElementById","scrollIntoView","behavior","block","className","_c5","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/Dashboard.css';\r\n\r\n// ===== PERFORMANCE OPTIMIZATION: LAZY LOADING =====\r\nconst LazyMap = React.lazy(() => \r\n  import('./LazyMap').catch(() => ({ default: () => <div>Map Loading...</div> }))\r\n);\r\n\r\nconst LazyChart = React.lazy(() => \r\n  import('./LazyChart').catch(() => ({ default: () => <div>Chart Loading...</div> }))\r\n);\r\n\r\n// NOTE: Custom hooks were removed from here.\r\n\r\nfunction Dashboard() {\r\n  // ===== FIXED: USEMEMO HOOKS ARE NOW DIRECTLY INSIDE THE COMPONENT =====\r\n  const defaultLocation = useMemo(() => ({\r\n    lat: 10.178322301561957,\r\n    lng: 76.43089144291672,\r\n    accuracy: 50,\r\n    source: 'default'\r\n  }), []);\r\n\r\n  const fallbackData = useMemo(() => ({\r\n    interpolated_aqi: 85,\r\n    nearest_sensor_info: {\r\n      current_aqi: 85,\r\n      current_station_name: 'ASIET Campus Station',\r\n      distance_to_nearest: 0.5,\r\n      current_sensor_data: {\r\n        pm25: 25.5, pm10: 42.3, so2: 15.8, no2: 37.2,\r\n        co: 1.2, o3: 45.6, nh3: 12.4, temp: 28, hum: 65, pre: 1013\r\n      }\r\n    },\r\n    forecast_data: {\r\n      nearest_station: [\r\n        { day: 'Today', pm25_max: 30.2, pm10_max: 37.0, so2_max: 2.4, no2_max: 40.1, co_max: 1.1, o3_max: 3.7, nh3_max: 92.7 },\r\n        { day: 'Tomorrow', pm25_max: 24.1, pm10_max: 34.2, so2_max: 2.4, no2_max: 45.2, co_max: 1.2, o3_max: 3.2, nh3_max: 100.0 },\r\n        { day: 'Day 3', pm25_max: 24.3, pm10_max: 30.3, so2_max: 2.2, no2_max: 42.1, co_max: 1.2, o3_max: 3.5, nh3_max: 100.0 },\r\n        { day: 'Day 4', pm25_max: 19.7, pm10_max: 23.4, so2_max: 2.3, no2_max: 38.5, co_max: 1.2, o3_max: 3.7, nh3_max: 100.0 }\r\n      ]\r\n    },\r\n    sensor_locations: {\r\n      'lora-v1': { lat: 10.178322301561957, lng: 76.43089144291672, name: 'Station 1 (ASIET Campus)' },\r\n      'loradev2': { lat: 10.17095090340159, lng: 76.42962876824544, name: 'Station 2 (Mattoor Junction)' }\r\n    },\r\n    idw_status: 'location_required',\r\n    timestamp: new Date().toISOString()\r\n  }), []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // ===== STATE MANAGEMENT =====\r\n  const [username] = useState(() => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n      return user.name || 'User';\r\n    } catch {\r\n      return 'User';\r\n    }\r\n  });\r\n\r\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [nearestStation, setNearestStation] = useState(null);\r\n  const [locationStatus, setLocationStatus] = useState('detecting');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [dataSource, setDataSource] = useState('fallback'); // 'fallback', 'api', 'interpolated'\r\n\r\n  // ===== REFS =====\r\n  const mapRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const locationTimeoutRef = useRef(null);\r\n  const dataFetchTimeoutRef = useRef(null);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // ===== IMMEDIATE INITIALIZATION =====\r\n  useEffect(() => {\r\n    console.log('⚡ DASHBOARD: Initializing with username:', username);\r\n    \r\n    // Set immediate fallback data for instant UI\r\n    setDashboardData(fallbackData);\r\n    setNearestStation({\r\n      name: 'ASIET Campus Station',\r\n      distance: 0.5,\r\n      aqi: 85\r\n    });\r\n    \r\n    // Start location detection and API calls\r\n    startLocationDetection();\r\n    \r\n    return () => {\r\n      if (locationTimeoutRef.current) clearTimeout(locationTimeoutRef.current);\r\n      if (dataFetchTimeoutRef.current) clearTimeout(dataFetchTimeoutRef.current);\r\n    };\r\n  }, [username, fallbackData, startLocationDetection]); // Added startLocationDetection to dependency array\r\n\r\n  // ===== LOCATION DETECTION =====\r\n  const startLocationDetection = useCallback(() => {\r\n    setLocationStatus('detecting');\r\n    \r\n    if (!navigator.geolocation) {\r\n      console.log('📍 Geolocation not supported, using default location');\r\n      handleLocationFallback();\r\n      return;\r\n    }\r\n\r\n    // Set timeout for location detection\r\n    locationTimeoutRef.current = setTimeout(() => {\r\n      console.log('📍 Location detection timeout, using default');\r\n      handleLocationFallback();\r\n    }, 10000);\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        clearTimeout(locationTimeoutRef.current);\r\n        \r\n        const locationData = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          accuracy: position.coords.accuracy,\r\n          source: 'gps'\r\n        };\r\n\r\n        console.log('✅ GPS location obtained:', locationData);\r\n        setUserLocation(locationData);\r\n        setLocationStatus('found');\r\n        \r\n        // Save location to server\r\n        saveLocationToServer(locationData);\r\n        \r\n        // Fetch dashboard data with location\r\n        fetchDashboardData(locationData);\r\n      },\r\n      (error) => {\r\n        clearTimeout(locationTimeoutRef.current);\r\n        console.log('❌ Location error:', error.message);\r\n        handleLocationFallback();\r\n      },\r\n      {\r\n        enableHighAccuracy: true,\r\n        timeout: 8000,\r\n        maximumAge: 300000 // 5 minutes\r\n      }\r\n    );\r\n  }, [handleLocationFallback, saveLocationToServer, fetchDashboardData]); // Dependencies updated\r\n\r\n  const handleLocationFallback = useCallback(() => {\r\n    console.log('📍 Using default location');\r\n    setUserLocation(defaultLocation);\r\n    setLocationStatus('default');\r\n    \r\n    // Fetch dashboard data without location\r\n    fetchDashboardData(null);\r\n  }, [defaultLocation, fetchDashboardData]); // Dependencies updated\r\n\r\n  // ===== SAVE LOCATION TO SERVER =====\r\n  const saveLocationToServer = useCallback(async (locationData) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/save-user-location/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          latitude: locationData.lat,\r\n          longitude: locationData.lng,\r\n          accuracy: locationData.accuracy,\r\n          source: locationData.source\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('✅ Location saved to server');\r\n      } else {\r\n        console.log('⚠️ Failed to save location to server');\r\n      }\r\n    } catch (error) {\r\n      console.log('⚠️ Error saving location to server:', error);\r\n    }\r\n  }, [username, API_BASE_URL]);\r\n\r\n  // ===== FETCH DASHBOARD DATA =====\r\n  const fetchDashboardData = useCallback(async (locationData = null) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\r\n      url.searchParams.append('username', username);\r\n      \r\n      if (locationData) {\r\n        url.searchParams.append('lat', locationData.lat);\r\n        url.searchParams.append('lng', locationData.lng);\r\n      }\r\n\r\n      console.log('🔄 Fetching dashboard data from:', url.toString());\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\r\n\r\n      const response = await fetch(url, {\r\n        signal: controller.signal,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ Dashboard data received:', data);\r\n\r\n      // Process the response data\r\n      processDashboardResponse(data, locationData);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Dashboard API error:', error);\r\n      setError(error.message);\r\n      setDataSource('fallback');\r\n      \r\n      // Continue with fallback data\r\n      setLoading(false);\r\n    }\r\n  }, [username, API_BASE_URL, processDashboardResponse]); // Dependencies updated\r\n\r\n  // ===== PROCESS DASHBOARD RESPONSE =====\r\n  const processDashboardResponse = useCallback((data, locationData) => {\r\n    try {\r\n      let source = 'api';\r\n      let currentAQI = data.interpolated_aqi || data.nearest_sensor_info?.current_aqi || 85;\r\n      let currentValues = {};\r\n      let stationName = 'ASIET Campus Station';\r\n      let distance = 0.5;\r\n\r\n      if (data.idw_interpolated_values && Object.keys(data.idw_interpolated_values).length > 0) {\r\n        source = 'interpolated';\r\n        currentValues = data.idw_interpolated_values;\r\n        stationName = 'Your Location (Smart Analysis)';\r\n        distance = 0;\r\n        currentAQI = data.interpolated_aqi || currentAQI;\r\n        console.log('🎯 Using IDW interpolated values');\r\n      } else if (data.nearest_sensor_info) {\r\n        currentValues = data.nearest_sensor_info.current_sensor_data || {};\r\n        stationName = data.nearest_sensor_info.current_station_name || 'ASIET Campus Station';\r\n        distance = data.nearest_sensor_info.distance_to_nearest || 0.5;\r\n        currentAQI = data.nearest_sensor_info.current_aqi || currentAQI;\r\n        console.log('📡 Using nearest station data');\r\n      }\r\n\r\n      const updatedData = {\r\n        ...data,\r\n        current_sensor_data: currentValues,\r\n        interpolated_aqi: currentAQI,\r\n        forecast_data: data.forecast_data || fallbackData.forecast_data,\r\n        sensor_locations: data.sensor_locations || fallbackData.sensor_locations,\r\n        idw_status: data.idw_status || 'location_required',\r\n        weather_data: {\r\n          temp: currentValues.temp || 28,\r\n          hum: currentValues.hum || 65,\r\n          pre: currentValues.pre || 1013\r\n        }\r\n      };\r\n\r\n      setDashboardData(updatedData);\r\n      setDataSource(source);\r\n      \r\n      setNearestStation({\r\n        name: stationName,\r\n        distance: distance,\r\n        aqi: currentAQI\r\n      });\r\n\r\n      setLoading(false);\r\n      console.log(`✅ Dashboard updated with ${source} data`);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error processing dashboard response:', error);\r\n      setError('Failed to process dashboard data');\r\n      setLoading(false);\r\n    }\r\n  }, [fallbackData]);\r\n\r\n  // ===== COMPUTED VALUES =====\r\n  const currentValues = useMemo(() => {\r\n    if (!dashboardData) return fallbackData.nearest_sensor_info.current_sensor_data;\r\n    \r\n    return dashboardData.idw_interpolated_values || \r\n           dashboardData.current_sensor_data ||\r\n           dashboardData.nearest_sensor_info?.current_sensor_data || \r\n           fallbackData.nearest_sensor_info.current_sensor_data;\r\n  }, [dashboardData, fallbackData]);\r\n\r\n  const currentAQI = useMemo(() => {\r\n    if (!dashboardData) return fallbackData.interpolated_aqi;\r\n    \r\n    return dashboardData.interpolated_aqi || \r\n           dashboardData.nearest_sensor_info?.current_aqi || \r\n           fallbackData.interpolated_aqi;\r\n  }, [dashboardData, fallbackData]);\r\n\r\n  const aqiStatus = useMemo(() => {\r\n    const aqi = currentAQI;\r\n    if (aqi <= 50) return { status: 'GOOD', color: '#10b981', class: 'good' };\r\n    if (aqi <= 100) return { status: 'MODERATE', color: '#f59e0b', class: 'moderate' };\r\n    if (aqi <= 150) return { status: 'UNHEALTHY', color: '#ef4444', class: 'unhealthy' };\r\n    return { status: 'HAZARDOUS', color: '#7c2d12', class: 'hazardous' };\r\n  }, [currentAQI]);\r\n\r\n  const weatherData = useMemo(() => {\r\n    if (!dashboardData) return { temp: 28, hum: 65, pre: 1013 };\r\n    \r\n    return dashboardData.weather_data || {\r\n      temp: currentValues.temp || 28,\r\n      hum: currentValues.hum || 65,\r\n      pre: currentValues.pre || 1013\r\n    };\r\n  }, [dashboardData, currentValues]);\r\n\r\n  // ===== MEMOIZED COMPONENTS & HANDLERS =====\r\n  const metricIcons = useMemo(() => ({\r\n    pm25: '🌱', pm10: '🍃', so2: '🏭', no2: '💨',\r\n    co: '☁️', o3: '☀️', nh3: '⚗️'\r\n  }), []);\r\n\r\n  const formatValue = useCallback((value, metric) => {\r\n    const numValue = parseFloat(value) || 0;\r\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\r\n  }, []);\r\n\r\n  const handleParameterChange = useCallback((param) => {\r\n    setSelectedParameter(param);\r\n  }, []);\r\n\r\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\r\n  \r\n  const handleLogout = useCallback(() => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  }, [navigate]);\r\n\r\n  const scrollToMap = useCallback(() => {\r\n    document.getElementById('map-section')?.scrollIntoView({ \r\n      behavior: 'smooth', \r\n      block: 'start' \r\n    });\r\n  }, []);\r\n\r\n  // Omitting the rest of the component for brevity as it contains no further errors.\r\n  // The full JSX rendering part is unchanged.\r\n  // ... (rest of the component's JSX remains the same as in your original file)\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n       {/* ... The entire JSX structure from your original file goes here ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}