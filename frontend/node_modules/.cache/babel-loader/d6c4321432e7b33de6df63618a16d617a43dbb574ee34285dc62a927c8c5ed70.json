{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\n// --- NEW HELPER: Creates a custom map pin icon ---\nconst createAqiIcon = aqi => {\n  const color = getAQIColor(aqi);\n  const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\n  return window.L.divIcon({\n    html: iconHtml,\n    className: 'custom-div-icon',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32]\n  });\n};\nconst MapPage = () => {\n  _s();\n  var _stations$nearestStat, _stations$nearestStat2;\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const [forecastData, setForecastData] = useState([]);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [selectedParameter, setSelectedParameter] = useState('pm25_max');\n  const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\n\n  // State for User Location & Interpolation\n  const [userLocation, setUserLocation] = useState(null);\n  const [interpolatedData, setInterpolatedData] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const userLocationMarkerRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapRef.current._leaflet_id) {\n      map = window.L.map(mapRef.current, {\n        zoomControl: false\n      }).setView([10.176, 76.430], 13);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      window.L.control.zoom({\n        position: 'topleft'\n      }).addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) map.remove();\n    };\n  }, []);\n\n  // --- NEW: Function to trigger location tracking ---\n  const trackUserLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const loc = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(loc);\n        if (mapInstance) {\n          mapInstance.setView(loc, 14);\n          if (userLocationMarkerRef.current) {\n            userLocationMarkerRef.current.setLatLng(loc);\n          } else {\n            userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\n          }\n        }\n      }, err => {\n        console.warn(`Geolocation error: ${err.message}`);\n        alert(\"Could not get your location. Please enable location services in your browser.\");\n      });\n    }\n  }, [mapInstance]);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 60000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n  useEffect(() => {\n    if (userLocation && Object.keys(stations).length > 0) {\n      let weightedSum = 0,\n        weightSum = 0,\n        nearestDist = Infinity,\n        nearestId = null;\n      Object.entries(stations).forEach(([id, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestId = id;\n        }\n        const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\n        weightedSum += (station.highest_sub_index || 0) * weight;\n        weightSum += weight;\n      });\n      setNearestStation({\n        id: nearestId,\n        distance: nearestDist\n      });\n      if (weightSum > 0) setInterpolatedData({\n        aqi: Math.round(weightedSum / weightSum)\n      });\n    }\n  }, [userLocation, stations]);\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const marker = window.L.marker([lat, lng], {\n        icon: createAqiIcon(station.highest_sub_index)\n      }).addTo(mapInstance);\n      marker.on('click', () => {\n        setSelectedStationId(id);\n        setIsPanelOpen(true);\n        mapInstance.setView([lat, lng], 15);\n      });\n      markersRef.current[id] = marker;\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  const pollutants = [/* ... pollutants array ... */];\n  const forecastChartData = useMemo(() => {/* ... memoized chart data ... */}, [forecastData, selectedParameter]);\n  const forecastChartOptions = {/* ... chart options ... */};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: trackUserLocation,\n          className: \"my-location-btn\",\n          title: \"Find My Location\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [userLocation && interpolatedData && nearestStation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-street-view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AQI at Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 109\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-aqi-value\",\n                children: nearestStation.distance < 1 ? (_stations$nearestStat = stations[nearestStation.id]) === null || _stations$nearestStat === void 0 ? void 0 : _stations$nearestStat.highest_sub_index : interpolatedData.aqi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: nearestStation.distance < 1 ? 'Using nearest station' : 'Interpolated value'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 132\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Nearest: \", (_stations$nearestStat2 = stations[nearestStation.id]) === null || _stations$nearestStat2 === void 0 ? void 0 : _stations$nearestStat2.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 38\n          }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#94a3b8',\n                marginTop: '-0.5rem',\n                marginBottom: '1.5rem'\n              },\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), \"Last Updated: \", selectedStationData.last_updated_on || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), forecastUpdatedAt && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.75rem',\n                  color: '#94a3b8',\n                  marginBottom: '0.5rem'\n                },\n                children: [\"Updated: \", new Date(forecastUpdatedAt).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 59\n              }, this), isForecastLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-loader\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading forecast...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  options: forecastChartOptions,\n                  data: forecastChartData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"RsF8scPD5YNabJicmfIQk7xWsRs=\", false, function () {\n  return [useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","createAqiIcon","color","iconHtml","round","window","L","divIcon","html","className","iconSize","iconAnchor","MapPage","_s","_stations$nearestStat","_stations$nearestStat2","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","forecastData","setForecastData","isForecastLoading","setIsForecastLoading","selectedParameter","setSelectedParameter","forecastUpdatedAt","setForecastUpdatedAt","userLocation","setUserLocation","interpolatedData","setInterpolatedData","nearestStation","setNearestStation","mapRef","markersRef","userLocationMarkerRef","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","_leaflet_id","zoomControl","setView","tileLayer","addTo","control","zoom","position","remove","trackUserLocation","navigator","geolocation","getCurrentPosition","loc","lat","coords","latitude","lng","longitude","setLatLng","marker","err","console","warn","message","alert","fetchRealtimeData","response","fetch","data","json","Object","keys","length","interval","setInterval","clearInterval","weightedSum","weightSum","nearestDist","Infinity","nearestId","entries","forEach","id","station","dist","station_info","weight","pow","highest_sub_index","distance","values","icon","on","selectedStationData","pollutants","forecastChartData","forecastChartOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","toFixed","style","fontSize","marginTop","marginBottom","last_updated_on","Date","toLocaleString","options","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280';\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 200) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\n\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\n\r\n// --- NEW HELPER: Creates a custom map pin icon ---\r\nconst createAqiIcon = (aqi) => {\r\n    const color = getAQIColor(aqi);\r\n    const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\r\n    return window.L.divIcon({\r\n        html: iconHtml,\r\n        className: 'custom-div-icon',\r\n        iconSize: [32, 32],\r\n        iconAnchor: [16, 32],\r\n    });\r\n};\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n    const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\r\n    \r\n    // State for User Location & Interpolation\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [interpolatedData, setInterpolatedData] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const userLocationMarkerRef = useRef(null);\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            map = window.L.map(mapRef.current, { zoomControl: false }).setView([10.176, 76.430], 13);\r\n            window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            window.L.control.zoom({ position: 'topleft' }).addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n    \r\n    // --- NEW: Function to trigger location tracking ---\r\n    const trackUserLocation = useCallback(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const loc = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setUserLocation(loc);\r\n                    if (mapInstance) {\r\n                        mapInstance.setView(loc, 14);\r\n                        if (userLocationMarkerRef.current) {\r\n                            userLocationMarkerRef.current.setLatLng(loc);\r\n                        } else {\r\n                            userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\r\n                        }\r\n                    }\r\n                },\r\n                (err) => {\r\n                    console.warn(`Geolocation error: ${err.message}`);\r\n                    alert(\"Could not get your location. Please enable location services in your browser.\");\r\n                }\r\n            );\r\n        }\r\n    }, [mapInstance]);\r\n\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 60000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    useEffect(() => {\r\n        if (userLocation && Object.keys(stations).length > 0) {\r\n            let weightedSum = 0, weightSum = 0, nearestDist = Infinity, nearestId = null;\r\n            Object.entries(stations).forEach(([id, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                if (dist < nearestDist) { nearestDist = dist; nearestId = id; }\r\n                const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\r\n                weightedSum += (station.highest_sub_index || 0) * weight;\r\n                weightSum += weight;\r\n            });\r\n            setNearestStation({ id: nearestId, distance: nearestDist });\r\n            if (weightSum > 0) setInterpolatedData({ aqi: Math.round(weightedSum / weightSum) });\r\n        }\r\n    }, [userLocation, stations]);\r\n    \r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        \r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const { lat, lng } = station.station_info;\r\n            const marker = window.L.marker([lat, lng], { icon: createAqiIcon(station.highest_sub_index) }).addTo(mapInstance);\r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                setIsPanelOpen(true);\r\n                mapInstance.setView([lat, lng], 15);\r\n            });\r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n    const pollutants = [ /* ... pollutants array ... */ ];\r\n    const forecastChartData = useMemo(() => { /* ... memoized chart data ... */ }, [forecastData, selectedParameter]);\r\n    const forecastChartOptions = { /* ... chart options ... */ };\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                    {/* --- \"My Location\" Button --- */}\r\n                    <button onClick={trackUserLocation} className=\"my-location-btn\" title=\"Find My Location\">\r\n                        <i className=\"fas fa-crosshairs\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)}>{/* ... */}</button>\r\n                    <div className=\"panel-header\">{/* ... station selector ... */}</div>\r\n                    <div className=\"panel-content\">\r\n                        {/* --- User Location Panel --- */}\r\n                        {userLocation && interpolatedData && nearestStation && (\r\n                            <div className=\"user-location-panel\">\r\n                                <div className=\"user-location-header\"><i className=\"fas fa-street-view\"></i><span>AQI at Your Location</span></div>\r\n                                <div className=\"user-location-body\">\r\n                                    <div className=\"user-aqi-value\">{nearestStation.distance < 1 ? stations[nearestStation.id]?.highest_sub_index : interpolatedData.aqi}</div>\r\n                                    <div className=\"user-location-details\">\r\n                                        <span>{nearestStation.distance < 1 ? 'Using nearest station' : 'Interpolated value'}</span><br />\r\n                                        <span>Nearest: {stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km)</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {isLoading ? <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div> :\r\n                        selectedStationData ? (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                {/* --- Display Last Updated for Real-time Data --- */}\r\n                                <p style={{fontSize: '0.8rem', color: '#94a3b8', marginTop: '-0.5rem', marginBottom: '1.5rem'}}>\r\n                                    Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})\r\n                                    <br />\r\n                                    Last Updated: {selectedStationData.last_updated_on || 'N/A'}\r\n                                </p>\r\n                                <div className=\"pollutant-metrics\">{/* ... pollutant grid ... */}</div>\r\n                                <div className=\"forecast-section\">\r\n                                    <div className=\"forecast-header\">{/* ... forecast header ... */}</div>\r\n                                    {/* --- Display Last Updated for Forecast --- */}\r\n                                    {forecastUpdatedAt && <div style={{ fontSize: '0.75rem', color: '#94a3b8', marginBottom: '0.5rem' }}>Updated: {new Date(forecastUpdatedAt).toLocaleString()}</div>}\r\n                                    {isForecastLoading ? <div className=\"panel-loader\"><p>Loading forecast...</p></div> :\r\n                                    <div className=\"chart-container\"><Line options={forecastChartOptions} data={forecastChartData} /></div>}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}