{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Progressive Loading Dashboard.js - Loads instantly, updates with GPS\n\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/Dashboard.css';\n\n// Lazy loading components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyMap = /*#__PURE__*/React.lazy(_c = () => import('./LazyMap').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Map Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 53\n  }, this)\n})));\n_c2 = LazyMap;\nconst LazyChart = /*#__PURE__*/React.lazy(_c3 = () => import('./LazyChart').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 55\n  }, this)\n})));\n_c4 = LazyChart;\nfunction Dashboard() {\n  _s();\n  // ===== STATE MANAGEMENT =====\n  const [username] = useState(() => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      return user.name || 'User';\n    } catch {\n      return 'User';\n    }\n  });\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [userLocationName, setUserLocationName] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [locationStatus, setLocationStatus] = useState('not_started');\n  const [dataType, setDataType] = useState('station');\n  const [loading, setLoading] = useState(true);\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isUpdatingWithLocation, setIsUpdatingWithLocation] = useState(false);\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // ===== PHASE 1: IMMEDIATE DASHBOARD LOAD =====\n  const loadDashboardDefault = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🚀 PHASE 1: Loading dashboard without location...');\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\n      url.searchParams.append('username', username);\n      // NO lat/lng parameters - backend will use default data\n\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000);\n      const response = await fetch(url, {\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('✅ PHASE 1: Default dashboard data received');\n\n      // Process default data\n      processDashboardData(data);\n\n      // Set default location status\n      setLocationStatus('not_started');\n    } catch (error) {\n      console.error('❌ PHASE 1: Error loading default dashboard:', error);\n      setError(error.message);\n\n      // Set minimal fallback data\n      setDashboardData({\n        nearest_sensor_info: {\n          current_device_id: 'lora-v1',\n          current_aqi: 50,\n          current_station_name: 'Station 1 (ASIET Campus)',\n          current_sensor_data: {\n            pm25: 25,\n            pm10: 42,\n            so2: 8,\n            no2: 40,\n            co: 1.1,\n            o3: 46,\n            nh3: 93,\n            temp: 28,\n            hum: 65,\n            pre: 1013\n          },\n          distance_to_nearest: null,\n          is_within_1km: false,\n          current_forecast_data: [{\n            day: 'Today',\n            pm25_max: 30,\n            pm10_max: 37,\n            so2_max: 8,\n            no2_max: 40,\n            co_max: 1.1,\n            o3_max: 46,\n            nh3_max: 93\n          }, {\n            day: 'Tomorrow',\n            pm25_max: 24,\n            pm10_max: 34,\n            so2_max: 8,\n            no2_max: 45,\n            co_max: 1.2,\n            o3_max: 43,\n            nh3_max: 100\n          }]\n        },\n        sensor_locations: {\n          'lora-v1': {\n            lat: 10.178322301561957,\n            lng: 76.43089144291672,\n            name: 'Station 1 (ASIET Campus)'\n          },\n          'loradev2': {\n            lat: 10.17095090340159,\n            lng: 76.42962876824544,\n            name: 'Station 2 (Mattoor Junction)'\n          }\n        },\n        idw_status: 'location_required',\n        status: 'fallback'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [username, API_BASE_URL]);\n\n  // ===== PHASE 2: BACKGROUND GPS DETECTION =====\n  const startLocationDetection = useCallback(async () => {\n    if (!navigator.geolocation) {\n      console.log('📍 PHASE 2: Geolocation not supported');\n      setLocationStatus('not_supported');\n      return;\n    }\n    try {\n      setLocationLoading(true);\n      setLocationStatus('detecting');\n      console.log('📍 PHASE 2: Starting background GPS detection...');\n      const position = await new Promise((resolve, reject) => {\n        const timeout = setTimeout(() => reject(new Error('GPS timeout')), 10000);\n        navigator.geolocation.getCurrentPosition(pos => {\n          clearTimeout(timeout);\n          resolve(pos);\n        }, error => {\n          clearTimeout(timeout);\n          reject(error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 8000,\n          maximumAge: 600000\n        });\n      });\n      const locationData = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        accuracy: position.coords.accuracy,\n        timestamp: Date.now(),\n        source: 'gps'\n      };\n      setUserLocation(locationData);\n      setLocationStatus('found');\n      console.log('✅ PHASE 2: GPS location obtained:', locationData);\n\n      // Get location name\n      await getLocationName(locationData.lat, locationData.lng);\n\n      // PHASE 3: Update dashboard with location\n      await updateDashboardWithLocation(locationData);\n    } catch (error) {\n      console.log('📍 PHASE 2: GPS detection failed:', error.message);\n      setLocationStatus('denied');\n      setLocationLoading(false);\n    }\n  }, []);\n\n  // ===== PHASE 3: UPDATE WITH LOCATION DATA =====\n  const updateDashboardWithLocation = useCallback(async locationData => {\n    try {\n      setIsUpdatingWithLocation(true);\n      console.log('🎯 PHASE 3: Updating dashboard with location data...');\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\n      url.searchParams.append('username', username);\n      url.searchParams.append('lat', locationData.lat.toString());\n      url.searchParams.append('lng', locationData.lng.toString());\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\n      const response = await fetch(url, {\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('✅ PHASE 3: Location-specific data received');\n\n      // Process location-specific data\n      processDashboardData(data);\n    } catch (error) {\n      console.error('❌ PHASE 3: Error updating with location:', error);\n      // Don't show error - keep default data\n    } finally {\n      setIsUpdatingWithLocation(false);\n      setLocationLoading(false);\n    }\n  }, [username, API_BASE_URL]);\n\n  // ===== REVERSE GEOCODING =====\n  const getLocationName = useCallback(async (lat, lng) => {\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);\n      if (response.ok) {\n        var _data$address, _data$address2, _data$address3, _data$address4, _data$address5;\n        const data = await response.json();\n        const locationName = {\n          display_name: data.display_name || `${lat.toFixed(4)}, ${lng.toFixed(4)}`,\n          city: ((_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.city) || ((_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.town) || ((_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : _data$address3.village),\n          state: (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : _data$address4.state,\n          country: (_data$address5 = data.address) === null || _data$address5 === void 0 ? void 0 : _data$address5.country\n        };\n        setUserLocationName(locationName);\n        console.log('📍 Location name resolved:', locationName.display_name);\n      }\n    } catch (error) {\n      console.log('❌ Reverse geocoding failed:', error);\n    }\n  }, []);\n\n  // ===== PROCESS DASHBOARD DATA =====\n  const processDashboardData = useCallback(data => {\n    var _data$nearest_sensor_;\n    setDashboardData(data);\n\n    // Extract nearest station info\n    if (data.nearest_sensor_info) {\n      setNearestStation({\n        name: data.nearest_sensor_info.current_station_name || 'Station 1 (ASIET Campus)',\n        distance: data.nearest_sensor_info.distance_to_nearest,\n        aqi: data.nearest_sensor_info.current_aqi || 50\n      });\n    }\n\n    // Set data type based on IDW status and location proximity\n    if (data.idw_status === 'active' && data.idw_interpolated_values && Object.keys(data.idw_interpolated_values).length > 0) {\n      setDataType('interpolated');\n    } else {\n      setDataType('station');\n    }\n    console.log('📊 Dashboard data processed:', {\n      dataType: data.idw_status === 'active' ? 'interpolated' : 'station',\n      nearestStation: (_data$nearest_sensor_ = data.nearest_sensor_info) === null || _data$nearest_sensor_ === void 0 ? void 0 : _data$nearest_sensor_.current_station_name,\n      hasLocation: !!data.user_location\n    });\n  }, []);\n\n  // ===== INITIALIZATION =====\n  useEffect(() => {\n    const initializeDashboard = async () => {\n      console.log('⚡ Initializing progressive dashboard...');\n\n      // PHASE 1: Load dashboard immediately without location\n      await loadDashboardDefault();\n\n      // PHASE 2: Start GPS detection in background (non-blocking)\n      setTimeout(() => {\n        startLocationDetection();\n      }, 1000); // Small delay to ensure dashboard loads first\n    };\n    initializeDashboard();\n  }, [loadDashboardDefault, startLocationDetection]);\n\n  // ===== MEMOIZED CALCULATIONS =====\n  const currentValues = useMemo(() => {\n    if (!dashboardData) return {};\n\n    // Use IDW interpolated values if available\n    if (dataType === 'interpolated' && dashboardData.idw_interpolated_values) {\n      return dashboardData.idw_interpolated_values;\n    }\n\n    // Use nearest station data\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_sensor_data) {\n      return dashboardData.nearest_sensor_info.current_sensor_data;\n    }\n    return {};\n  }, [dashboardData, dataType]);\n  const currentAQI = useMemo(() => {\n    if (!dashboardData) return 50;\n\n    // Use interpolated AQI if available\n    if (dataType === 'interpolated' && dashboardData.interpolated_aqi) {\n      return dashboardData.interpolated_aqi;\n    }\n\n    // Use nearest station AQI\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_aqi) {\n      return dashboardData.nearest_sensor_info.current_aqi;\n    }\n    return 50;\n  }, [dashboardData, dataType]);\n  const aqiStatus = useMemo(() => {\n    const aqi = currentAQI;\n    if (aqi <= 50) return {\n      status: 'GOOD',\n      color: '#10b981',\n      class: 'good'\n    };\n    if (aqi <= 100) return {\n      status: 'MODERATE',\n      color: '#f59e0b',\n      class: 'moderate'\n    };\n    if (aqi <= 150) return {\n      status: 'UNHEALTHY',\n      color: '#ef4444',\n      class: 'unhealthy'\n    };\n    return {\n      status: 'HAZARDOUS',\n      color: '#7c2d12',\n      class: 'hazardous'\n    };\n  }, [currentAQI]);\n\n  // ===== LOCATION STATUS DISPLAY =====\n  const LocationStatus = useMemo(() => {\n    const getLocationDisplay = () => {\n      switch (locationStatus) {\n        case 'not_started':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b7280'\n            },\n            children: \"\\uD83D\\uDCCD Starting location detection...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 18\n          }, this);\n        case 'detecting':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#f59e0b'\n            },\n            children: [\"\\uD83D\\uDCCD Detecting location...\", locationLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"location-spinner\",\n              children: \"\\u27F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this);\n        case 'found':\n          const locationName = (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'Your Location';\n          const accuracy = userLocation !== null && userLocation !== void 0 && userLocation.accuracy ? `±${Math.round(userLocation.accuracy)}m` : '';\n          const distance = nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `${nearestStation.distance.toFixed(1)}km` : '';\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981'\n            },\n            children: [\"\\uD83D\\uDCCD \", locationName, \" \", accuracy && `(${accuracy})`, nearestStation && distance && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#6b7280',\n                fontSize: '0.9em'\n              },\n              children: [' ', \" \\u2192 \", nearestStation.name, \" (\", distance, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"update-spinner\",\n              children: \"\\u27F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this);\n        case 'denied':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ef4444'\n            },\n            children: \"\\uD83D\\uDCCD Location access denied - Using default area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 18\n          }, this);\n        case 'not_supported':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b7280'\n            },\n            children: \"\\uD83D\\uDCCD Location not supported - Using default area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 18\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b7280'\n            },\n            children: [\"\\uD83D\\uDCCD \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Default Area']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 18\n          }, this);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-info\",\n      children: getLocationDisplay()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 12\n    }, this);\n  }, [locationStatus, userLocationName, userLocation, nearestStation, locationLoading, isUpdatingWithLocation]);\n\n  // ===== DATA TYPE INDICATOR =====\n  const DataTypeIndicator = useMemo(() => {\n    if (dataType === 'interpolated') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-type-indicator interpolated\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-icon\",\n          children: \"\\uD83C\\uDFAF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Smart Interpolated Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-subtitle\",\n          children: \"Based on your precise location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-badge\",\n          children: \"Updating...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-type-indicator station\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-icon\",\n          children: \"\\uD83D\\uDCE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Nearest Station Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-subtitle\",\n          children: nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `${nearestStation.distance.toFixed(1)}km from ${nearestStation.name}` : 'From closest monitoring station'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-badge\",\n          children: \"Updating...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this);\n    }\n  }, [dataType, nearestStation, isUpdatingWithLocation]);\n\n  // ===== SENSOR NOTIFICATION =====\n  const SensorNotification = useMemo(() => {\n    if (dataType === 'interpolated') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-notification interpolated\",\n        children: [\"\\uD83C\\uDFAF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Smart Interpolated Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 14\n        }, this), \" - You are within 1km of monitoring stations. We're showing personalized air quality values calculated specifically for your location at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'your current position'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-notification station\",\n        children: [\"\\uD83D\\uDCE1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Nearest Sensor: \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Station 1 (ASIET Campus)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 14\n        }, this), \" -\", locationStatus === 'found' && nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `You are ${nearestStation.distance.toFixed(1)}km from the monitoring station at ${(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'your location'}.` : 'You are viewing data from our closest monitoring station.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this);\n    }\n  }, [dataType, nearestStation, userLocationName, locationStatus]);\n\n  // ===== METRIC CARDS =====\n  const metricIcons = useMemo(() => ({\n    pm25: '🌱',\n    pm10: '🍃',\n    so2: '🏭',\n    no2: '💨',\n    co: '☁️',\n    o3: '☀️',\n    nh3: '⚗️'\n  }), []);\n  const formatValue = useCallback((value, metric) => {\n    const numValue = parseFloat(value) || 0;\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\n  }, []);\n  const MetricCards = useMemo(() => {\n    const parameters = ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'];\n    return parameters.map(key => {\n      const value = currentValues[key] || 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: metricIcons[key] || '📊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(value, key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-label\",\n          children: key.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-unit\",\n          children: key === 'co' ? 'mg/m³' : 'µg/m³'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), dataType === 'interpolated' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-badge interpolated-badge\",\n          children: \"\\uD83C\\uDFAF Smart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), dataType === 'station' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-badge station-badge\",\n          children: \"\\uD83D\\uDCE1 Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-updating\",\n          children: \"\\u27F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this);\n    });\n  }, [currentValues, metricIcons, formatValue, dataType, isUpdatingWithLocation]);\n\n  // ===== FORECAST TABLE =====\n  const ForecastTable = useMemo(() => {\n    var _dashboardData$foreca, _dashboardData$neares;\n    const forecastData = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$foreca = dashboardData.forecast_data) === null || _dashboardData$foreca === void 0 ? void 0 : _dashboardData$foreca.nearest_station) || (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$neares = dashboardData.nearest_sensor_info) === null || _dashboardData$neares === void 0 ? void 0 : _dashboardData$neares.current_forecast_data) || [];\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"forecast-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC5 Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC8 Max Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecastData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatValue(item[`${selectedParameter}_max`] || 0, selectedParameter)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this);\n  }, [dashboardData, selectedParameter, formatValue]);\n\n  // ===== EVENT HANDLERS =====\n  const handleParameterChange = useCallback(param => {\n    setSelectedParameter(param);\n  }, []);\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\n  const handleLogout = useCallback(() => {\n    localStorage.clear();\n    navigate('/login');\n  }, [navigate]);\n  const handleRetryLocation = useCallback(() => {\n    setLocationStatus('not_started');\n    setLocationLoading(false);\n    setIsUpdatingWithLocation(false);\n    setTimeout(() => {\n      startLocationDetection();\n    }, 500);\n  }, [startLocationDetection]);\n\n  // ===== LOADING STATE =====\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Getting air quality data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ===== ERROR STATE =====\n  if (error && !dashboardData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u26A0\\uFE0F Connection Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We're having trouble connecting to our servers. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: () => window.location.reload(),\n            children: \"\\uD83D\\uDD04 Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ===== MAIN RENDER =====\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-status\",\n      children: [\"\\uD83D\\uDD34 LIVE \\u2022 Updates every 30s \\u2022 \", locationStatus === 'found' ? 'GPS Active' : 'Default Data', dataType === 'interpolated' && ' • Smart Analysis', isUpdatingWithLocation && ' • Updating...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"navbar-brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/aqi.webp\",\n            alt: \"AQM Logo\",\n            width: \"40\",\n            height: \"40\",\n            style: {\n              marginRight: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), \"AirAware\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-toggle\",\n          onClick: toggleMenu,\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `nav-links ${isMenuOpen ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              className: \"nav-link\",\n              children: \"\\uD83C\\uDFE0 Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forecast\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCC8 Forecasting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/health-assessment\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCCB Health Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/health-report\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCC4 Health Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/add-family\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDC65 Add Family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"user-info\",\n            children: [\"\\uD83D\\uDC64 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"nav-link login-btn\",\n              children: \"\\uD83D\\uDEAA Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert-banner ${aqiStatus.class}`,\n      children: [\"\\u2139\\uFE0F \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Your Location', \" AQI: \", Math.round(currentAQI), \" - \", aqiStatus.status, nearestStation && nearestStation.distance && ` • Distance to station: ${nearestStation.distance.toFixed(1)}km`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"Welcome, \", username, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this), LocationStatus, locationStatus === 'denied' && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRetryLocation,\n                className: \"retry-location-btn\",\n                children: \"\\uD83D\\uDD04 Retry Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-value\",\n              style: {\n                color: aqiStatus.color\n              },\n              children: [Math.round(currentAQI), isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"updating-indicator\",\n                children: \"\\u27F3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-status\",\n              children: dataType === 'interpolated' ? 'Smart Analysis AQI' : 'Nearest Station AQI'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-badge\",\n              children: (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Your Location'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"last-updated\",\n              children: [\"Last updated: \", new Date().toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), DataTypeIndicator, SensorNotification, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [\"\\uD83C\\uDF2C\\uFE0F Current Air Quality \", userLocationName !== null && userLocationName !== void 0 && userLocationName.display_name ? `at ${userLocationName.display_name}` : 'in Your Area', dataType === 'interpolated' && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" (Smart Analysis)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 45\n          }, this), dataType === 'station' && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" (Nearest Station)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-grid\",\n          children: MetricCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map-section\",\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDDFA\\uFE0F Interactive Sensor Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), userLocationName && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-display\",\n              children: [\"\\uD83D\\uDCCD \", userLocationName.display_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(React.Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '300px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  background: '#f8fafc'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uD83D\\uDDFA\\uFE0F Loading map...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 17\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(LazyMap, {\n                userLocation: userLocation,\n                dashboardData: dashboardData,\n                currentAQI: currentAQI,\n                dataType: dataType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '12px',\n              textAlign: 'center',\n              fontSize: '0.875rem',\n              color: '#6b7280'\n            },\n            children: [\"\\uD83D\\uDCCD Blue marker: Your location \\u2022 Tower markers: Monitoring stations\", dataType === 'interpolated' && ' • 🎯 Smart analysis active']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDCCA 4-Day Air Quality Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-source\",\n              children: [\"Data source: \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Station 1 (ASIET Campus)']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-controls\",\n            children: ['pm25', 'pm10', 'no2', 'o3', 'so2', 'co', 'nh3'].map(param => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `param-btn ${selectedParameter === param ? 'active' : ''}`,\n              onClick: () => handleParameterChange(param),\n              children: param.toUpperCase()\n            }, param, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-content\",\n            children: [/*#__PURE__*/_jsxDEV(React.Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '200px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  background: '#f8fafc'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uD83D\\uDCCA Loading chart...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 17\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(LazyChart, {\n                dashboardData: dashboardData,\n                selectedParameter: selectedParameter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-table-container\",\n              children: ForecastTable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83C\\uDF24\\uFE0F Weather Conditions (Live Data)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83C\\uDF21\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.temp || '28', \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.hum || '65', \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83D\\uDCCF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.pre || '1013', \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Atmospheric Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u26A1 System Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDE80 Progressive Loading:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this), \" Dashboard loads instantly with default data, then updates with your location for personalized air quality information.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDD04 System Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981',\n              fontWeight: 600\n            },\n            children: \" LIVE & OPTIMIZED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), \" | Location: \", locationStatus === 'found' ? `GPS Active (${(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'Located'})` : locationStatus === 'detecting' ? 'Detecting...' : 'Default Area', \" | Data Type: \", dataType === 'interpolated' ? 'Smart Analysis' : 'Nearest Station', \" |\", isUpdatingWithLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#f59e0b'\n            },\n            children: \" Updating with location...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xA9 2025 AirAware Kerala - Smart Air Quality Monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 534,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ZYRFMIWNEF5EAG015/D3ojlunB4=\", false, function () {\n  return [useNavigate];\n});\n_c5 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LazyMap$React.lazy\");\n$RefreshReg$(_c2, \"LazyMap\");\n$RefreshReg$(_c3, \"LazyChart$React.lazy\");\n$RefreshReg$(_c4, \"LazyChart\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useNavigate","jsxDEV","_jsxDEV","LazyMap","lazy","_c","catch","default","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","LazyChart","_c3","_c4","Dashboard","_s","username","user","JSON","parse","localStorage","getItem","name","selectedParameter","setSelectedParameter","isMenuOpen","setIsMenuOpen","dashboardData","setDashboardData","userLocation","setUserLocation","userLocationName","setUserLocationName","nearestStation","setNearestStation","locationStatus","setLocationStatus","dataType","setDataType","loading","setLoading","locationLoading","setLocationLoading","error","setError","isUpdatingWithLocation","setIsUpdatingWithLocation","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","loadDashboardDefault","console","log","url","URL","searchParams","append","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","headers","clearTimeout","ok","Error","status","statusText","data","json","processDashboardData","message","nearest_sensor_info","current_device_id","current_aqi","current_station_name","current_sensor_data","pm25","pm10","so2","no2","co","o3","nh3","temp","hum","pre","distance_to_nearest","is_within_1km","current_forecast_data","day","pm25_max","pm10_max","so2_max","no2_max","co_max","o3_max","nh3_max","sensor_locations","lat","lng","idw_status","startLocationDetection","navigator","geolocation","position","Promise","resolve","reject","timeout","getCurrentPosition","pos","enableHighAccuracy","maximumAge","locationData","coords","latitude","longitude","accuracy","timestamp","Date","now","source","getLocationName","updateDashboardWithLocation","toString","_data$address","_data$address2","_data$address3","_data$address4","_data$address5","locationName","display_name","toFixed","city","address","town","village","state","country","_data$nearest_sensor_","distance","aqi","idw_interpolated_values","Object","keys","length","hasLocation","user_location","initializeDashboard","currentValues","currentAQI","interpolated_aqi","aqiStatus","color","class","LocationStatus","getLocationDisplay","style","className","Math","round","fontSize","DataTypeIndicator","SensorNotification","metricIcons","formatValue","value","metric","numValue","parseFloat","MetricCards","parameters","map","key","toUpperCase","ForecastTable","_dashboardData$foreca","_dashboardData$neares","forecastData","forecast_data","nearest_station","item","index","handleParameterChange","param","toggleMenu","prev","handleLogout","clear","handleRetryLocation","onClick","window","location","reload","href","src","alt","width","height","marginRight","toLocaleTimeString","id","Suspense","fallback","display","alignItems","justifyContent","background","marginTop","textAlign","fontWeight","_c5","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/Dashboard.js"],"sourcesContent":["// Progressive Loading Dashboard.js - Loads instantly, updates with GPS\r\n\r\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/Dashboard.css';\r\n\r\n// Lazy loading components\r\nconst LazyMap = React.lazy(() => \r\n  import('./LazyMap').catch(() => ({ default: () => <div>Map Loading...</div> }))\r\n);\r\n\r\nconst LazyChart = React.lazy(() => \r\n  import('./LazyChart').catch(() => ({ default: () => <div>Chart Loading...</div> }))\r\n);\r\n\r\nfunction Dashboard() {\r\n  // ===== STATE MANAGEMENT =====\r\n  const [username] = useState(() => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n      return user.name || 'User';\r\n    } catch {\r\n      return 'User';\r\n    }\r\n  });\r\n\r\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [userLocationName, setUserLocationName] = useState(null);\r\n  const [nearestStation, setNearestStation] = useState(null);\r\n  const [locationStatus, setLocationStatus] = useState('not_started');\r\n  const [dataType, setDataType] = useState('station');\r\n  const [loading, setLoading] = useState(true);\r\n  const [locationLoading, setLocationLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isUpdatingWithLocation, setIsUpdatingWithLocation] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // ===== PHASE 1: IMMEDIATE DASHBOARD LOAD =====\r\n  const loadDashboardDefault = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log('🚀 PHASE 1: Loading dashboard without location...');\r\n\r\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\r\n      url.searchParams.append('username', username);\r\n      // NO lat/lng parameters - backend will use default data\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 10000);\r\n\r\n      const response = await fetch(url, {\r\n        signal: controller.signal,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ PHASE 1: Default dashboard data received');\r\n      \r\n      // Process default data\r\n      processDashboardData(data);\r\n      \r\n      // Set default location status\r\n      setLocationStatus('not_started');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ PHASE 1: Error loading default dashboard:', error);\r\n      setError(error.message);\r\n      \r\n      // Set minimal fallback data\r\n      setDashboardData({\r\n        nearest_sensor_info: {\r\n          current_device_id: 'lora-v1',\r\n          current_aqi: 50,\r\n          current_station_name: 'Station 1 (ASIET Campus)',\r\n          current_sensor_data: {\r\n            pm25: 25, pm10: 42, so2: 8, no2: 40,\r\n            co: 1.1, o3: 46, nh3: 93, temp: 28, hum: 65, pre: 1013\r\n          },\r\n          distance_to_nearest: null,\r\n          is_within_1km: false,\r\n          current_forecast_data: [\r\n            { day: 'Today', pm25_max: 30, pm10_max: 37, so2_max: 8, no2_max: 40, co_max: 1.1, o3_max: 46, nh3_max: 93 },\r\n            { day: 'Tomorrow', pm25_max: 24, pm10_max: 34, so2_max: 8, no2_max: 45, co_max: 1.2, o3_max: 43, nh3_max: 100 }\r\n          ]\r\n        },\r\n        sensor_locations: {\r\n          'lora-v1': { lat: 10.178322301561957, lng: 76.43089144291672, name: 'Station 1 (ASIET Campus)' },\r\n          'loradev2': { lat: 10.17095090340159, lng: 76.42962876824544, name: 'Station 2 (Mattoor Junction)' }\r\n        },\r\n        idw_status: 'location_required',\r\n        status: 'fallback'\r\n      });\r\n      \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [username, API_BASE_URL]);\r\n\r\n  // ===== PHASE 2: BACKGROUND GPS DETECTION =====\r\n  const startLocationDetection = useCallback(async () => {\r\n    if (!navigator.geolocation) {\r\n      console.log('📍 PHASE 2: Geolocation not supported');\r\n      setLocationStatus('not_supported');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLocationLoading(true);\r\n      setLocationStatus('detecting');\r\n      console.log('📍 PHASE 2: Starting background GPS detection...');\r\n      \r\n      const position = await new Promise((resolve, reject) => {\r\n        const timeout = setTimeout(() => reject(new Error('GPS timeout')), 10000);\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos) => {\r\n            clearTimeout(timeout);\r\n            resolve(pos);\r\n          },\r\n          (error) => {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n          },\r\n          { enableHighAccuracy: true, timeout: 8000, maximumAge: 600000 }\r\n        );\r\n      });\r\n\r\n      const locationData = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n        accuracy: position.coords.accuracy,\r\n        timestamp: Date.now(),\r\n        source: 'gps'\r\n      };\r\n\r\n      setUserLocation(locationData);\r\n      setLocationStatus('found');\r\n      console.log('✅ PHASE 2: GPS location obtained:', locationData);\r\n\r\n      // Get location name\r\n      await getLocationName(locationData.lat, locationData.lng);\r\n      \r\n      // PHASE 3: Update dashboard with location\r\n      await updateDashboardWithLocation(locationData);\r\n\r\n    } catch (error) {\r\n      console.log('📍 PHASE 2: GPS detection failed:', error.message);\r\n      setLocationStatus('denied');\r\n      setLocationLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // ===== PHASE 3: UPDATE WITH LOCATION DATA =====\r\n  const updateDashboardWithLocation = useCallback(async (locationData) => {\r\n    try {\r\n      setIsUpdatingWithLocation(true);\r\n      console.log('🎯 PHASE 3: Updating dashboard with location data...');\r\n\r\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\r\n      url.searchParams.append('username', username);\r\n      url.searchParams.append('lat', locationData.lat.toString());\r\n      url.searchParams.append('lng', locationData.lng.toString());\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\r\n\r\n      const response = await fetch(url, {\r\n        signal: controller.signal,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ PHASE 3: Location-specific data received');\r\n      \r\n      // Process location-specific data\r\n      processDashboardData(data);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ PHASE 3: Error updating with location:', error);\r\n      // Don't show error - keep default data\r\n    } finally {\r\n      setIsUpdatingWithLocation(false);\r\n      setLocationLoading(false);\r\n    }\r\n  }, [username, API_BASE_URL]);\r\n\r\n  // ===== REVERSE GEOCODING =====\r\n  const getLocationName = useCallback(async (lat, lng) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`\r\n      );\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const locationName = {\r\n          display_name: data.display_name || `${lat.toFixed(4)}, ${lng.toFixed(4)}`,\r\n          city: data.address?.city || data.address?.town || data.address?.village,\r\n          state: data.address?.state,\r\n          country: data.address?.country\r\n        };\r\n        \r\n        setUserLocationName(locationName);\r\n        console.log('📍 Location name resolved:', locationName.display_name);\r\n      }\r\n    } catch (error) {\r\n      console.log('❌ Reverse geocoding failed:', error);\r\n    }\r\n  }, []);\r\n\r\n  // ===== PROCESS DASHBOARD DATA =====\r\n  const processDashboardData = useCallback((data) => {\r\n    setDashboardData(data);\r\n    \r\n    // Extract nearest station info\r\n    if (data.nearest_sensor_info) {\r\n      setNearestStation({\r\n        name: data.nearest_sensor_info.current_station_name || 'Station 1 (ASIET Campus)',\r\n        distance: data.nearest_sensor_info.distance_to_nearest,\r\n        aqi: data.nearest_sensor_info.current_aqi || 50\r\n      });\r\n    }\r\n\r\n    // Set data type based on IDW status and location proximity\r\n    if (data.idw_status === 'active' && data.idw_interpolated_values && \r\n        Object.keys(data.idw_interpolated_values).length > 0) {\r\n      setDataType('interpolated');\r\n    } else {\r\n      setDataType('station');\r\n    }\r\n\r\n    console.log('📊 Dashboard data processed:', {\r\n      dataType: data.idw_status === 'active' ? 'interpolated' : 'station',\r\n      nearestStation: data.nearest_sensor_info?.current_station_name,\r\n      hasLocation: !!data.user_location\r\n    });\r\n  }, []);\r\n\r\n  // ===== INITIALIZATION =====\r\n  useEffect(() => {\r\n    const initializeDashboard = async () => {\r\n      console.log('⚡ Initializing progressive dashboard...');\r\n      \r\n      // PHASE 1: Load dashboard immediately without location\r\n      await loadDashboardDefault();\r\n      \r\n      // PHASE 2: Start GPS detection in background (non-blocking)\r\n      setTimeout(() => {\r\n        startLocationDetection();\r\n      }, 1000); // Small delay to ensure dashboard loads first\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [loadDashboardDefault, startLocationDetection]);\r\n\r\n  // ===== MEMOIZED CALCULATIONS =====\r\n  const currentValues = useMemo(() => {\r\n    if (!dashboardData) return {};\r\n    \r\n    // Use IDW interpolated values if available\r\n    if (dataType === 'interpolated' && dashboardData.idw_interpolated_values) {\r\n      return dashboardData.idw_interpolated_values;\r\n    }\r\n    \r\n    // Use nearest station data\r\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_sensor_data) {\r\n      return dashboardData.nearest_sensor_info.current_sensor_data;\r\n    }\r\n    \r\n    return {};\r\n  }, [dashboardData, dataType]);\r\n\r\n  const currentAQI = useMemo(() => {\r\n    if (!dashboardData) return 50;\r\n    \r\n    // Use interpolated AQI if available\r\n    if (dataType === 'interpolated' && dashboardData.interpolated_aqi) {\r\n      return dashboardData.interpolated_aqi;\r\n    }\r\n    \r\n    // Use nearest station AQI\r\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_aqi) {\r\n      return dashboardData.nearest_sensor_info.current_aqi;\r\n    }\r\n    \r\n    return 50;\r\n  }, [dashboardData, dataType]);\r\n\r\n  const aqiStatus = useMemo(() => {\r\n    const aqi = currentAQI;\r\n    if (aqi <= 50) return { status: 'GOOD', color: '#10b981', class: 'good' };\r\n    if (aqi <= 100) return { status: 'MODERATE', color: '#f59e0b', class: 'moderate' };\r\n    if (aqi <= 150) return { status: 'UNHEALTHY', color: '#ef4444', class: 'unhealthy' };\r\n    return { status: 'HAZARDOUS', color: '#7c2d12', class: 'hazardous' };\r\n  }, [currentAQI]);\r\n\r\n  // ===== LOCATION STATUS DISPLAY =====\r\n  const LocationStatus = useMemo(() => {\r\n    const getLocationDisplay = () => {\r\n      switch (locationStatus) {\r\n        case 'not_started':\r\n          return <span style={{ color: '#6b7280' }}>📍 Starting location detection...</span>;\r\n          \r\n        case 'detecting':\r\n          return (\r\n            <span style={{ color: '#f59e0b' }}>\r\n              📍 Detecting location...\r\n              {locationLoading && <span className=\"location-spinner\">⟳</span>}\r\n            </span>\r\n          );\r\n          \r\n        case 'found':\r\n          const locationName = userLocationName?.display_name || 'Your Location';\r\n          const accuracy = userLocation?.accuracy ? `±${Math.round(userLocation.accuracy)}m` : '';\r\n          const distance = nearestStation?.distance ? `${nearestStation.distance.toFixed(1)}km` : '';\r\n          \r\n          return (\r\n            <span style={{ color: '#10b981' }}>\r\n              📍 {locationName} {accuracy && `(${accuracy})`}\r\n              {nearestStation && distance && (\r\n                <span style={{ color: '#6b7280', fontSize: '0.9em' }}>\r\n                  {' '} → {nearestStation.name} ({distance})\r\n                </span>\r\n              )}\r\n              {isUpdatingWithLocation && <span className=\"update-spinner\">⟳</span>}\r\n            </span>\r\n          );\r\n          \r\n        case 'denied':\r\n          return <span style={{ color: '#ef4444' }}>📍 Location access denied - Using default area</span>;\r\n          \r\n        case 'not_supported':\r\n          return <span style={{ color: '#6b7280' }}>📍 Location not supported - Using default area</span>;\r\n          \r\n        default:\r\n          return <span style={{ color: '#6b7280' }}>📍 {nearestStation?.name || 'Default Area'}</span>;\r\n      }\r\n    };\r\n\r\n    return <div className=\"location-info\">{getLocationDisplay()}</div>;\r\n  }, [locationStatus, userLocationName, userLocation, nearestStation, locationLoading, isUpdatingWithLocation]);\r\n\r\n  // ===== DATA TYPE INDICATOR =====\r\n  const DataTypeIndicator = useMemo(() => {\r\n    if (dataType === 'interpolated') {\r\n      return (\r\n        <div className=\"data-type-indicator interpolated\">\r\n          <span className=\"indicator-icon\">🎯</span>\r\n          <span className=\"indicator-text\">Smart Interpolated Values</span>\r\n          <span className=\"indicator-subtitle\">Based on your precise location</span>\r\n          {isUpdatingWithLocation && <span className=\"update-badge\">Updating...</span>}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"data-type-indicator station\">\r\n          <span className=\"indicator-icon\">📡</span>\r\n          <span className=\"indicator-text\">Nearest Station Data</span>\r\n          <span className=\"indicator-subtitle\">\r\n            {nearestStation?.distance ? \r\n              `${nearestStation.distance.toFixed(1)}km from ${nearestStation.name}` : \r\n              'From closest monitoring station'\r\n            }\r\n          </span>\r\n          {isUpdatingWithLocation && <span className=\"update-badge\">Updating...</span>}\r\n        </div>\r\n      );\r\n    }\r\n  }, [dataType, nearestStation, isUpdatingWithLocation]);\r\n\r\n  // ===== SENSOR NOTIFICATION =====\r\n  const SensorNotification = useMemo(() => {\r\n    if (dataType === 'interpolated') {\r\n      return (\r\n        <div className=\"sensor-notification interpolated\">\r\n          🎯 <strong>Smart Interpolated Data</strong> - \r\n          You are within 1km of monitoring stations. \r\n          We're showing personalized air quality values calculated specifically for your location at{' '}\r\n          <strong>{userLocationName?.display_name || 'your current position'}</strong>.\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"sensor-notification station\">\r\n          📡 <strong>Nearest Sensor: {nearestStation?.name || 'Station 1 (ASIET Campus)'}</strong> - \r\n          {locationStatus === 'found' && nearestStation?.distance ? \r\n            `You are ${nearestStation.distance.toFixed(1)}km from the monitoring station at ${userLocationName?.display_name || 'your location'}.` :\r\n            'You are viewing data from our closest monitoring station.'\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }, [dataType, nearestStation, userLocationName, locationStatus]);\r\n\r\n  // ===== METRIC CARDS =====\r\n  const metricIcons = useMemo(() => ({\r\n    pm25: '🌱', pm10: '🍃', so2: '🏭', no2: '💨',\r\n    co: '☁️', o3: '☀️', nh3: '⚗️'\r\n  }), []);\r\n\r\n  const formatValue = useCallback((value, metric) => {\r\n    const numValue = parseFloat(value) || 0;\r\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\r\n  }, []);\r\n\r\n  const MetricCards = useMemo(() => {\r\n    const parameters = ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'];\r\n    \r\n    return parameters.map((key) => {\r\n      const value = currentValues[key] || 0;\r\n      \r\n      return (\r\n        <div key={key} className=\"metric-card\">\r\n          <div className=\"metric-icon\">{metricIcons[key] || '📊'}</div>\r\n          <div className=\"metric-value\">{formatValue(value, key)}</div>\r\n          <div className=\"metric-label\">{key.toUpperCase()}</div>\r\n          <div className=\"metric-unit\">{key === 'co' ? 'mg/m³' : 'µg/m³'}</div>\r\n          {dataType === 'interpolated' && (\r\n            <div className=\"metric-badge interpolated-badge\">\r\n              🎯 Smart\r\n            </div>\r\n          )}\r\n          {dataType === 'station' && (\r\n            <div className=\"metric-badge station-badge\">\r\n              📡 Station\r\n            </div>\r\n          )}\r\n          {isUpdatingWithLocation && (\r\n            <div className=\"metric-updating\">⟳</div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  }, [currentValues, metricIcons, formatValue, dataType, isUpdatingWithLocation]);\r\n\r\n  // ===== FORECAST TABLE =====\r\n  const ForecastTable = useMemo(() => {\r\n    const forecastData = dashboardData?.forecast_data?.nearest_station || \r\n                        dashboardData?.nearest_sensor_info?.current_forecast_data || [];\r\n    \r\n    return (\r\n      <table className=\"forecast-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>📅 Day</th>\r\n            <th>📈 Max Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecastData.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{item.day}</td>\r\n              <td>{formatValue(item[`${selectedParameter}_max`] || 0, selectedParameter)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }, [dashboardData, selectedParameter, formatValue]);\r\n\r\n  // ===== EVENT HANDLERS =====\r\n  const handleParameterChange = useCallback((param) => {\r\n    setSelectedParameter(param);\r\n  }, []);\r\n\r\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\r\n  \r\n  const handleLogout = useCallback(() => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  }, [navigate]);\r\n\r\n  const handleRetryLocation = useCallback(() => {\r\n    setLocationStatus('not_started');\r\n    setLocationLoading(false);\r\n    setIsUpdatingWithLocation(false);\r\n    setTimeout(() => {\r\n      startLocationDetection();\r\n    }, 500);\r\n  }, [startLocationDetection]);\r\n\r\n  // ===== LOADING STATE =====\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading dashboard...</p>\r\n          <small>Getting air quality data</small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ===== ERROR STATE =====\r\n  if (error && !dashboardData) {\r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-message\">\r\n            <h2>⚠️ Connection Issue</h2>\r\n            <p>We're having trouble connecting to our servers. Please try again.</p>\r\n            <button \r\n              className=\"retry-button\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              🔄 Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ===== MAIN RENDER =====\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      {/* Real-time Status */}\r\n      <div className=\"realtime-status\">\r\n        🔴 LIVE • Updates every 30s • {locationStatus === 'found' ? 'GPS Active' : 'Default Data'}\r\n        {dataType === 'interpolated' && ' • Smart Analysis'}\r\n        {isUpdatingWithLocation && ' • Updating...'}\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-content\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            <img src=\"/aqi.webp\" alt=\"AQM Logo\" width=\"40\" height=\"40\" style={{ marginRight: '12px' }} />\r\n            AirAware\r\n          </a>\r\n\r\n          <div className=\"menu-toggle\" onClick={toggleMenu}>☰</div>\r\n\r\n          <ul className={`nav-links ${isMenuOpen ? 'active' : ''}`}>\r\n            <li><a href=\"/\" className=\"nav-link\">🏠 Home</a></li>\r\n            <li><a href=\"/forecast\" className=\"nav-link\">📈 Forecasting</a></li>\r\n            <li><a href=\"/health-assessment\" className=\"nav-link\">📋 Health Update</a></li>\r\n            <li><a href=\"/health-report\" className=\"nav-link\">📄 Health Report</a></li>\r\n            <li><a href=\"/add-family\" className=\"nav-link\">👥 Add Family</a></li>\r\n            <li className=\"user-info\">👤 <span>{username}</span></li>\r\n            <li>\r\n              <button onClick={handleLogout} className=\"nav-link login-btn\">🚪 Logout</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Alert Banner */}\r\n      <div className={`alert-banner ${aqiStatus.class}`}>\r\n        ℹ️ <span>\r\n          {userLocationName?.display_name || nearestStation?.name || 'Your Location'} AQI: {Math.round(currentAQI)} - {aqiStatus.status}\r\n          {nearestStation && nearestStation.distance && (\r\n            ` • Distance to station: ${nearestStation.distance.toFixed(1)}km`\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Main Container */}\r\n      <div className=\"main-container\">\r\n        {/* Welcome Header */}\r\n        <div className=\"welcome-header\">\r\n          <div className=\"welcome-content\">\r\n            <div className=\"welcome-info\">\r\n              <div className=\"user-avatar\">👤</div>\r\n              <div className=\"welcome-text\">\r\n                <h1>Welcome, {username}!</h1>\r\n                {LocationStatus}\r\n                {locationStatus === 'denied' && (\r\n                  <button onClick={handleRetryLocation} className=\"retry-location-btn\">\r\n                    🔄 Retry Location\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"aqi-overview\">\r\n              <div className=\"aqi-value\" style={{ color: aqiStatus.color }}>\r\n                {Math.round(currentAQI)}\r\n                {isUpdatingWithLocation && <span className=\"updating-indicator\">⟳</span>}\r\n              </div>\r\n              <div className=\"aqi-status\">\r\n                {dataType === 'interpolated' ? 'Smart Analysis AQI' : 'Nearest Station AQI'}\r\n              </div>\r\n              <div className=\"aqi-badge\">\r\n                {userLocationName?.display_name || nearestStation?.name || 'Your Location'}\r\n              </div>\r\n              <div className=\"last-updated\">\r\n                Last updated: {new Date().toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Data Type Indicator */}\r\n        {DataTypeIndicator}\r\n\r\n        {/* Sensor Notification */}\r\n        {SensorNotification}\r\n\r\n        {/* Air Quality Metrics */}\r\n        <div className=\"metrics-section\">\r\n          <h2 className=\"section-title\">\r\n            🌬️ Current Air Quality {userLocationName?.display_name ? `at ${userLocationName.display_name}` : 'in Your Area'}\r\n            {dataType === 'interpolated' && <small> (Smart Analysis)</small>}\r\n            {dataType === 'station' && <small> (Nearest Station)</small>}\r\n          </h2>\r\n          <div className=\"metrics-grid\">\r\n            {MetricCards}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Dashboard Grid */}\r\n        <div className=\"dashboard-grid\">\r\n          {/* Interactive Map */}\r\n          <div id=\"map-section\" className=\"dashboard-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">🗺️ Interactive Sensor Map</h3>\r\n              {userLocationName && (\r\n                <div className=\"location-display\">\r\n                  📍 {userLocationName.display_name}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"map-container\">\r\n              <React.Suspense fallback={\r\n                <div style={{ height: '300px', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#f8fafc' }}>\r\n                  <div>🗺️ Loading map...</div>\r\n                </div>\r\n              }>\r\n                <LazyMap \r\n                  userLocation={userLocation} \r\n                  dashboardData={dashboardData}\r\n                  currentAQI={currentAQI}\r\n                  dataType={dataType}\r\n                />\r\n              </React.Suspense>\r\n            </div>\r\n            <div style={{ marginTop: '12px', textAlign: 'center', fontSize: '0.875rem', color: '#6b7280' }}>\r\n              📍 Blue marker: Your location • Tower markers: Monitoring stations\r\n              {dataType === 'interpolated' && ' • 🎯 Smart analysis active'}\r\n            </div>\r\n          </div>\r\n\r\n          {/* AQI Forecast */}\r\n          <div className=\"dashboard-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">📊 4-Day Air Quality Forecast</h3>\r\n              <div className=\"forecast-source\">\r\n                Data source: {nearestStation?.name || 'Station 1 (ASIET Campus)'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"forecast-controls\">\r\n              {['pm25', 'pm10', 'no2', 'o3', 'so2', 'co', 'nh3'].map(param => (\r\n                <button \r\n                  key={param}\r\n                  className={`param-btn ${selectedParameter === param ? 'active' : ''}`}\r\n                  onClick={() => handleParameterChange(param)}\r\n                >\r\n                  {param.toUpperCase()}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"forecast-content\">\r\n              <React.Suspense fallback={\r\n                <div style={{ height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#f8fafc' }}>\r\n                  <div>📊 Loading chart...</div>\r\n                </div>\r\n              }>\r\n                <LazyChart \r\n                  dashboardData={dashboardData}\r\n                  selectedParameter={selectedParameter}\r\n                />\r\n              </React.Suspense>\r\n              \r\n              <div className=\"forecast-table-container\">\r\n                {ForecastTable}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Weather Information */}\r\n        <div className=\"weather-section\">\r\n          <h2 className=\"section-title\">🌤️ Weather Conditions (Live Data)</h2>\r\n          <div className=\"weather-grid\">\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">🌡️</div>\r\n              <div className=\"weather-value\">{currentValues.temp || '28'}°C</div>\r\n              <div className=\"weather-label\">Temperature</div>\r\n            </div>\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">💧</div>\r\n              <div className=\"weather-value\">{currentValues.hum || '65'}%</div>\r\n              <div className=\"weather-label\">Humidity</div>\r\n            </div>\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">📏</div>\r\n              <div className=\"weather-value\">{currentValues.pre || '1013'} hPa</div>\r\n              <div className=\"weather-label\">Atmospheric Pressure</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* System Status */}\r\n        <div className=\"disclaimer\">\r\n          <h3>⚡ System Status</h3>\r\n          <p>\r\n            <strong>🚀 Progressive Loading:</strong> Dashboard loads instantly with default data, then updates with your location for personalized air quality information.\r\n          </p>\r\n          <p>\r\n            <strong>🔄 System Status:</strong> \r\n            <span style={{ color: '#10b981', fontWeight: 600 }}> LIVE & OPTIMIZED</span> | \r\n            Location: {locationStatus === 'found' ? \r\n              `GPS Active (${userLocationName?.display_name || 'Located'})` : \r\n              locationStatus === 'detecting' ? 'Detecting...' : 'Default Area'\r\n            } | \r\n            Data Type: {dataType === 'interpolated' ? 'Smart Analysis' : 'Nearest Station'} |\r\n            {isUpdatingWithLocation && <span style={{ color: '#f59e0b' }}> Updating with location...</span>}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          <div className=\"footer-bottom\">\r\n            <p>&copy; 2025 AirAware Kerala - Smart Air Quality Monitoring</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}