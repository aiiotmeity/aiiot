{"ast":null,"code":"import React,{useMemo}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);const LazyChart=_ref=>{let{forecastData,selectedParameter}=_ref;const chartData=useMemo(()=>{if(!forecastData||forecastData.length===0)return{labels:[],datasets:[]};const labels=forecastData.map(d=>new Date(d.day).toLocaleDateString('en-US',{month:'short',day:'numeric'}));const dataPoints=forecastData.map(d=>d[`${selectedParameter}_max`]);return{labels,datasets:[{label:selectedParameter.toUpperCase(),data:dataPoints,borderColor:'#3b82f6',backgroundColor:'rgba(59, 130, 246, 0.2)',fill:true,tension:0.4}]};},[forecastData,selectedParameter]);const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false}},scales:{x:{ticks:{color:'#6b7280'}},y:{ticks:{color:'#6b7280'}}}};if(!forecastData||forecastData.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"panel-loader\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No forecast data available.\"})});}return/*#__PURE__*/_jsx(Line,{options:chartOptions,data:chartData});};export default LazyChart;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}