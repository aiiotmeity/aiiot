{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst MapPage = () => {\n  _s();\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapInstance) {\n      const L = window.L;\n      map = L.map(mapRef.current).setView([10.176, 76.430], 14);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) {\n        map.remove();\n      }\n    };\n  }, []);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    const L = window.L;\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const markerOptions = {\n        radius: selectedStationId === id ? 12 : 8,\n        fillColor: getAQIColor(aqi),\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\n        weight: selectedStationId === id ? 3 : 1.5,\n        opacity: 1,\n        fillOpacity: 0.85\n      };\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\n      } else {\n        const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\n        marker.on('click', () => {\n          setSelectedStationId(id);\n          setIsPanelOpen(true);\n          mapInstance.setView([lat, lng], 16);\n        });\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n\n  // Define which parameters to display\n  const pollutants = [{\n    key: 'pm25',\n    name: 'PM2.5'\n  }, {\n    key: 'pm10',\n    name: 'PM10'\n  }, {\n    key: 'so2',\n    name: 'SO₂'\n  }, {\n    key: 'no2',\n    name: 'NO₂'\n  }, {\n    key: 'co',\n    name: 'CO'\n  }, {\n    key: 'o3',\n    name: 'O₃'\n  }, {\n    key: 'nh3',\n    name: 'NH₃'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen),\n          title: isPanelOpen ? \"Hide Panel\" : \"Show Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-satellite-dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.entries(stations).map(([id, station]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === id ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"station-btn-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-name\",\n                  children: station.station_info.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-aqi\",\n                  style: {\n                    color: getAQIColor(station.highest_sub_index)\n                  },\n                  children: Math.round(station.highest_sub_index) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 23\n          }, this), selectedStationData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pollutant-grid\",\n                children: pollutants.map(pollutant => {\n                  var _selectedStationData$;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"metric-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric-label\",\n                      children: pollutant.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric-value\",\n                      children: [((_selectedStationData$ = selectedStationData.averages) === null || _selectedStationData$ === void 0 ? void 0 : _selectedStationData$[pollutant.key]) !== undefined ? selectedStationData.averages[pollutant.key].toFixed(2) : 'N/A', /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"metric-unit\",\n                        children: \" \\xB5g/m\\xB3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 25\n                    }, this)]\n                  }, pollutant.key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"QuZHi4tQ9y0dMLKglybjFY9nbtM=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","getAQIColor","aqi","undefined","getAQIStatus","MapPage","_s","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","mapRef","markersRef","navigate","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","L","window","setView","tileLayer","addTo","remove","fetchRealtimeData","response","fetch","ok","Error","status","data","json","Object","keys","length","err","message","interval","setInterval","clearInterval","entries","forEach","id","station","lat","lng","station_info","highest_sub_index","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","setLatLng","setStyle","marker","circleMarker","on","selectedStationData","pollutants","key","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","style","Math","round","pollutant","_selectedStationData$","averages","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nconst getAQIColor = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return '#6b7280';\r\n  if (aqi <= 50) return '#10b981';\r\n  if (aqi <= 100) return '#f59e0b';\r\n  if (aqi <= 200) return '#ef4444';\r\n  return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\n\r\nconst MapPage = () => {\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n  const [stations, setStations] = useState({});\r\n  const [selectedStationId, setSelectedStationId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  useEffect(() => {\r\n    let map;\r\n    if (mapRef.current && !mapInstance) {\r\n      const L = window.L;\r\n      map = L.map(mapRef.current).setView([10.176, 76.430], 14);\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n      setMapInstance(map);\r\n    }\r\n    return () => {\r\n      if (map) {\r\n        map.remove();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const fetchRealtimeData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n      const data = await response.json();\r\n      setStations(data.stations);\r\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n        setSelectedStationId(Object.keys(data.stations)[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [API_BASE_URL, selectedStationId]);\r\n\r\n  useEffect(() => {\r\n    fetchRealtimeData();\r\n    const interval = setInterval(fetchRealtimeData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchRealtimeData]);\r\n\r\n  useEffect(() => {\r\n    if (!mapInstance || Object.keys(stations).length === 0) return;\r\n    const L = window.L;\r\n\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      \r\n      const markerOptions = {\r\n        radius: selectedStationId === id ? 12 : 8,\r\n        fillColor: getAQIColor(aqi),\r\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\r\n        weight: selectedStationId === id ? 3 : 1.5,\r\n        opacity: 1,\r\n        fillOpacity: 0.85\r\n      };\r\n\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\r\n      } else {\r\n        const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\r\n        marker.on('click', () => {\r\n          setSelectedStationId(id);\r\n          setIsPanelOpen(true);\r\n          mapInstance.setView([lat, lng], 16);\r\n        });\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [mapInstance, stations, selectedStationId]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n  \r\n  // Define which parameters to display\r\n  const pollutants = [\r\n    { key: 'pm25', name: 'PM2.5' }, { key: 'pm10', name: 'PM10' },\r\n    { key: 'so2', name: 'SO₂' }, { key: 'no2', name: 'NO₂' },\r\n    { key: 'co', name: 'CO' }, { key: 'o3', name: 'O₃' },\r\n    { key: 'nh3', name: 'NH₃' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n      <div className=\"main-content\">\r\n        <div className=\"map-container\">\r\n          <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n        </div>\r\n        <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n          <button \r\n            className=\"panel-toggle\"\r\n            onClick={() => setIsPanelOpen(!isPanelOpen)}\r\n            title={isPanelOpen ? \"Hide Panel\" : \"Show Panel\"}\r\n          >\r\n            <i className={`fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n          </button>\r\n          \r\n          <div className=\"panel-header\">\r\n            <h2 className=\"panel-title\">\r\n              <i className=\"fas fa-satellite-dish\"></i> Monitoring Stations\r\n            </h2>\r\n            <div className=\"station-selector\">\r\n              {Object.entries(stations).map(([id, station]) => (\r\n                <button \r\n                  key={id} \r\n                  className={`station-btn ${selectedStationId === id ? 'active' : ''}`} \r\n                  onClick={() => setSelectedStationId(id)}\r\n                >\r\n                  <div className=\"station-btn-content\">\r\n                    <span className=\"station-name\">{station.station_info.name}</span>\r\n                    <span className=\"station-aqi\" style={{ color: getAQIColor(station.highest_sub_index) }}>\r\n                      {Math.round(station.highest_sub_index) || 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"panel-content\">\r\n            {isLoading && <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div>}\r\n            {error && <div>Error: {error}</div>}\r\n            {selectedStationData && (\r\n              <div>\r\n                <h3>{selectedStationData.station_info.name}</h3>\r\n                <p>Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})</p>\r\n                \r\n                {/* --- NEW SECTION TO DISPLAY POLLUTANT PARAMETERS --- */}\r\n                <div className=\"pollutant-metrics\">\r\n                  <div className=\"pollutant-grid\">\r\n                    {pollutants.map(pollutant => (\r\n                      <div className=\"metric-card\" key={pollutant.key}>\r\n                        <div className=\"metric-label\">{pollutant.name}</div>\r\n                        <div className=\"metric-value\">\r\n                          {selectedStationData.averages?.[pollutant.key] !== undefined \r\n                            ? selectedStationData.averages[pollutant.key].toFixed(2) \r\n                            : 'N/A'}\r\n                          <span className=\"metric-unit\"> µg/m³</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}