{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\FamilyHealthAssessmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport './css/HealthAssessment.css'; // Reuse the same styles\nimport logoImage from '../assets/aqi.webp';\nimport { useAuth } from '../App'; // Assuming you have an Auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FamilyHealthAssessmentForm() {\n  _s();\n  const {\n    memberId\n  } = useParams(); // Get member ID from URL\n  const {\n    user\n  } = useAuth(); // Get main user's info for API calls\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [memberName, setMemberName] = useState(''); // State for the family member's name\n  const [formData, setFormData] = useState({\n    age_group: '',\n    gender: '',\n    respiratory_conditions: [],\n    smoking_history: '',\n    living_environment: [],\n    common_symptoms: [],\n    occupational_exposure: '',\n    medical_history: []\n  });\n  const [healthScore, setHealthScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [saveStatus, setSaveStatus] = useState('');\n  const [isMobileView, setIsMobileView] = useState(window.innerWidth <= 768);\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://airaware-app-gcw7.onrender.com' : 'http://localhost:8000';\n\n  // Fetch the specific family member's name to display it on the page\n  useEffect(() => {\n    const fetchMemberName = async () => {\n      if (!user || !user.name) return;\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/family-members/?username=${user.name}`);\n        const members = await response.json();\n        const currentMember = members.find(m => m.id.toString() === memberId);\n        if (currentMember) {\n          setMemberName(currentMember.name);\n        } else {\n          setError(\"Could not find the specified family member.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch family member details.\");\n      }\n    };\n    fetchMemberName();\n  }, [memberId, user, API_BASE_URL]);\n  useEffect(() => {\n    const handleResize = () => setIsMobileView(window.innerWidth <= 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Particles (copied from your HealthAssessment.js)\n  const particles = useMemo(() => {\n    return Array.from({\n      length: 15\n    }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-particle\",\n      style: {\n        left: `${Math.random() * 100}%`,\n        top: `${Math.random() * 100}%`,\n        animationDelay: `${Math.random() * 4}s`,\n        animationDuration: `${Math.random() * 2 + 3}s`\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  }, []);\n\n  // Questions (copied from your HealthAssessment.js)\n  const questions = [{\n    id: 'age_group',\n    title: 'What is their age group?' /* ... options */\n  }, {\n    id: 'gender',\n    title: 'What is their gender?' /* ... options */\n  }, {\n    id: 'respiratory_conditions',\n    title: 'Do they have any respiratory conditions?' /* ... options */\n  }, {\n    id: 'smoking_history',\n    title: 'Smoking History' /* ... options */\n  }, {\n    id: 'living_environment',\n    title: 'Living Environment' /* ... options */\n  }, {\n    id: 'common_symptoms',\n    title: 'Common Symptoms' /* ... options */\n  }, {\n    id: 'occupational_exposure',\n    title: 'Occupational Exposure' /* ... options */\n  }, {\n    id: 'medical_history',\n    title: 'Medical History' /* ... options */\n  }].map(q => ({\n    ...q,\n    options: q.id === 'age_group' ? [{\n      value: '0-12 years',\n      label: '0-12 years',\n      icon: 'üßí'\n    }, {\n      value: '13-18 years',\n      label: '13-18 years',\n      icon: 'üéì'\n    }, {\n      value: '19-40 years',\n      label: '19-40 years',\n      icon: 'üëî'\n    }, {\n      value: '41-60 years',\n      label: '41-60 years',\n      icon: 'üë®'\n    }, {\n      value: '61 years and above',\n      label: '61 years and above',\n      icon: 'üë¥'\n    }] : q.options\n  })); // Simplified for brevity, use your full questions array\n\n  // All handler functions (handleOptionChange, nextQuestion, etc.) are the same.\n  // We only need to change the FINAL handleSubmit function.\n  // ... (copy all your handler functions like handleOptionChange, calculateHealthScore, etc. here) ...\n\n  const handleSubmit = async () => {\n    if (!isQuestionAnswered(currentQuestion)) {\n      setError('Please answer all questions before submitting');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSaveStatus('Saving...');\n    try {\n      const score = calculateHealthScore();\n      const payload = {\n        ...formData,\n        health_score: score\n      };\n\n      // THIS IS THE KEY CHANGE: Submit to the correct family member API endpoint\n      const response = await fetch(`${API_BASE_URL}/api/family-members/${memberId}/health-assessment/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      if (data.success) {\n        setHealthScore(score);\n        setSaveStatus('‚úÖ Saved successfully!');\n        setShowResult(true);\n\n        // Navigate to the family member's report page\n        setTimeout(() => {\n          navigate(`/family-health-report/${memberId}`);\n        }, 4000);\n      } else {\n        setError(data.error || 'Failed to save health assessment');\n        setSaveStatus('‚ùå Save failed');\n      }\n    } catch (err) {\n      setError('Network error or server issue. Please try again.');\n      setSaveStatus('‚ùå Network error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ... (copy the rest of your JSX for rendering questions and results) ...\n  // Remember to replace \"Hello, {username}!\" with \"Hello, {memberName}!\" in the result screen.\n\n  return (\n    /*#__PURE__*/\n    // Your JSX for the form goes here. It should be almost identical to HealthAssessment.js\n    // but with titles like `Health Assessment for {memberName}`.\n    _jsxDEV(\"div\", {\n      className: \"health-assessment-page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(FamilyHealthAssessmentForm, \"WXme+/yMv497/316CQ0IW0OxhIA=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = FamilyHealthAssessmentForm;\nexport default FamilyHealthAssessmentForm;\nvar _c;\n$RefreshReg$(_c, \"FamilyHealthAssessmentForm\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","useNavigate","useParams","logoImage","useAuth","jsxDEV","_jsxDEV","FamilyHealthAssessmentForm","_s","memberId","user","currentQuestion","setCurrentQuestion","memberName","setMemberName","formData","setFormData","age_group","gender","respiratory_conditions","smoking_history","living_environment","common_symptoms","occupational_exposure","medical_history","healthScore","setHealthScore","showResult","setShowResult","loading","setLoading","error","setError","saveStatus","setSaveStatus","isMobileView","setIsMobileView","window","innerWidth","navigate","API_BASE_URL","process","env","NODE_ENV","fetchMemberName","name","response","fetch","members","json","currentMember","find","m","id","toString","err","handleResize","addEventListener","removeEventListener","particles","Array","from","length","map","_","i","className","style","left","Math","random","top","animationDelay","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","questions","title","q","options","value","label","icon","handleSubmit","isQuestionAnswered","score","calculateHealthScore","payload","health_score","method","headers","body","JSON","stringify","ok","Error","status","data","success","setTimeout","_c","$RefreshReg$"],"sources":["C:/React/my-django-react-app/frontend/src/components/FamilyHealthAssessmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport './css/HealthAssessment.css'; // Reuse the same styles\r\nimport logoImage from '../assets/aqi.webp'; \r\nimport { useAuth } from '../App'; // Assuming you have an Auth context\r\n\r\nfunction FamilyHealthAssessmentForm() {\r\n  const { memberId } = useParams(); // Get member ID from URL\r\n  const { user } = useAuth(); // Get main user's info for API calls\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [memberName, setMemberName] = useState(''); // State for the family member's name\r\n  const [formData, setFormData] = useState({\r\n    age_group: '',\r\n    gender: '',\r\n    respiratory_conditions: [],\r\n    smoking_history: '',\r\n    living_environment: [],\r\n    common_symptoms: [],\r\n    occupational_exposure: '',\r\n    medical_history: []\r\n  });\r\n  const [healthScore, setHealthScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [saveStatus, setSaveStatus] = useState('');\r\n  const [isMobileView, setIsMobileView] = useState(window.innerWidth <= 768);\r\n  \r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.NODE_ENV === 'production' \r\n    ? 'https://airaware-app-gcw7.onrender.com' \r\n    : 'http://localhost:8000';\r\n\r\n  // Fetch the specific family member's name to display it on the page\r\n  useEffect(() => {\r\n    const fetchMemberName = async () => {\r\n      if (!user || !user.name) return;\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/family-members/?username=${user.name}`);\r\n        const members = await response.json();\r\n        const currentMember = members.find(m => m.id.toString() === memberId);\r\n        if (currentMember) {\r\n          setMemberName(currentMember.name);\r\n        } else {\r\n          setError(\"Could not find the specified family member.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch family member details.\");\r\n      }\r\n    };\r\n    fetchMemberName();\r\n  }, [memberId, user, API_BASE_URL]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setIsMobileView(window.innerWidth <= 768);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Particles (copied from your HealthAssessment.js)\r\n  const particles = useMemo(() => {\r\n    return Array.from({ length: 15 }).map((_, i) => (\r\n      <div key={i} className=\"floating-particle\" style={{ left: `${Math.random() * 100}%`, top: `${Math.random() * 100}%`, animationDelay: `${Math.random() * 4}s`, animationDuration: `${Math.random() * 2 + 3}s` }} />\r\n    ));\r\n  }, []);\r\n\r\n  // Questions (copied from your HealthAssessment.js)\r\n  const questions = [\r\n    { id: 'age_group', title: 'What is their age group?', /* ... options */ },\r\n    { id: 'gender', title: 'What is their gender?', /* ... options */ },\r\n    { id: 'respiratory_conditions', title: 'Do they have any respiratory conditions?', /* ... options */ },\r\n    { id: 'smoking_history', title: 'Smoking History', /* ... options */ },\r\n    { id: 'living_environment', title: 'Living Environment', /* ... options */ },\r\n    { id: 'common_symptoms', title: 'Common Symptoms', /* ... options */ },\r\n    { id: 'occupational_exposure', title: 'Occupational Exposure', /* ... options */ },\r\n    { id: 'medical_history', title: 'Medical History', /* ... options */ },\r\n  ].map(q => ({ ...q, options: (q.id === 'age_group' ? [{ value: '0-12 years', label: '0-12 years', icon: 'üßí' }, { value: '13-18 years', label: '13-18 years', icon: 'üéì' }, { value: '19-40 years', label: '19-40 years', icon: 'üëî' }, { value: '41-60 years', label: '41-60 years', icon: 'üë®' }, { value: '61 years and above', label: '61 years and above', icon: 'üë¥' }] : q.options) })); // Simplified for brevity, use your full questions array\r\n\r\n  // All handler functions (handleOptionChange, nextQuestion, etc.) are the same.\r\n  // We only need to change the FINAL handleSubmit function.\r\n  // ... (copy all your handler functions like handleOptionChange, calculateHealthScore, etc. here) ...\r\n  \r\n    const handleSubmit = async () => {\r\n    if (!isQuestionAnswered(currentQuestion)) {\r\n      setError('Please answer all questions before submitting');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSaveStatus('Saving...');\r\n\r\n    try {\r\n      const score = calculateHealthScore();\r\n      \r\n      const payload = { ...formData, health_score: score };\r\n      \r\n      // THIS IS THE KEY CHANGE: Submit to the correct family member API endpoint\r\n      const response = await fetch(`${API_BASE_URL}/api/family-members/${memberId}/health-assessment/`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setHealthScore(score);\r\n        setSaveStatus('‚úÖ Saved successfully!');\r\n        setShowResult(true);\r\n        \r\n        // Navigate to the family member's report page\r\n        setTimeout(() => {\r\n          navigate(`/family-health-report/${memberId}`);\r\n        }, 4000);\r\n      } else {\r\n        setError(data.error || 'Failed to save health assessment');\r\n        setSaveStatus('‚ùå Save failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error or server issue. Please try again.');\r\n      setSaveStatus('‚ùå Network error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ... (copy the rest of your JSX for rendering questions and results) ...\r\n  // Remember to replace \"Hello, {username}!\" with \"Hello, {memberName}!\" in the result screen.\r\n  \r\n  return (\r\n    // Your JSX for the form goes here. It should be almost identical to HealthAssessment.js\r\n    // but with titles like `Health Assessment for {memberName}`.\r\n    <div className=\"health-assessment-page\">\r\n      {/* ... The rest of your amazing UI from HealthAssessment.js ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FamilyHealthAssessmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}