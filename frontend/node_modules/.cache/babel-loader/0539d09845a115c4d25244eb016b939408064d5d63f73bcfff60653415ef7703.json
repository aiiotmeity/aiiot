{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // km\n  const dLat = (lat2 - lat1) * Math.PI / 180,\n    dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nconst createAqiIcon = aqi => {\n  const color = getAQIColor(aqi);\n  const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\n  return window.L.divIcon({\n    html: iconHtml,\n    className: 'custom-div-icon',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32]\n  });\n};\nconst MapPage = () => {\n  _s();\n  var _stations$nearestStat, _stations$nearestStat2, _stations$nearestStat3;\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const [forecastData, setForecastData] = useState([]);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [selectedParameter, setSelectedParameter] = useState('pm25_max');\n  const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [isLocating, setIsLocating] = useState(false);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const userLocationMarkerRef = useRef(null);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapRef.current._leaflet_id) {\n      map = window.L.map(mapRef.current, {\n        zoomControl: false\n      }).setView([10.176, 76.430], 13);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      window.L.control.zoom({\n        position: 'topleft'\n      }).addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) map.remove();\n    };\n  }, []);\n  const trackUserLocation = useCallback(() => {\n    setIsLocating(true);\n    setNearestStation(null);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const loc = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(loc);\n        if (mapInstance) {\n          mapInstance.setView(loc, 14);\n          if (userLocationMarkerRef.current) userLocationMarkerRef.current.setLatLng(loc);else userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\n        }\n        setIsLocating(false);\n      }, err => {\n        alert(\"Could not get your location. Please enable location services.\");\n        setIsLocating(false);\n      });\n    }\n  }, [mapInstance]);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 60000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n  useEffect(() => {\n    if (userLocation && Object.keys(stations).length > 0) {\n      let nearestDist = Infinity,\n        nearestId = null;\n      Object.entries(stations).forEach(([id, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestId = id;\n        }\n      });\n      setNearestStation({\n        id: nearestId,\n        distance: nearestDist\n      });\n    }\n  }, [userLocation, stations]);\n  useEffect(() => {\n    if (!selectedStationId) return;\n    const fetchForecast = async () => {/* ... fetch forecast logic ... */};\n    fetchForecast();\n  }, [selectedStationId, API_BASE_URL]);\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n    Object.entries(stations).forEach(([id, station]) => {\n      const marker = window.L.marker([station.station_info.lat, station.station_info.lng], {\n        icon: createAqiIcon(station.highest_sub_index)\n      }).addTo(mapInstance);\n      marker.on('click', () => {\n        setSelectedStationId(id);\n        setIsPanelOpen(true);\n        mapInstance.setView([station.station_info.lat, station.station_info.lng], 15);\n      });\n      markersRef.current[id] = marker;\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  const pollutants = [/* ... pollutants array ... */];\n  const forecastChartData = useMemo(() => {/* ... chart data logic ... */}, [forecastData, selectedParameter]);\n  const forecastChartOptions = {/* ... chart options logic ... */};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: trackUserLocation,\n          className: \"my-location-btn\",\n          title: \"Find My Location\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLocating && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 115\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Locating...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 157\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 40\n          }, this), nearestStation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: nearestStation.distance < 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-street-view\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AQI at Your Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 117\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-aqi-value\",\n                  children: (_stations$nearestStat = stations[nearestStation.id]) === null || _stations$nearestStat === void 0 ? void 0 : _stations$nearestStat.highest_sub_index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-location-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Using data from nearest station\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 93\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [(_stations$nearestStat2 = stations[nearestStation.id]) === null || _stations$nearestStat2 === void 0 ? void 0 : _stations$nearestStat2.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-exclamation-triangle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Location Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 126\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You are not within 1km of a sensor, so a precise AQI for your location cannot be provided.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-details\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Nearest: \", (_stations$nearestStat3 = stations[nearestStation.id]) === null || _stations$nearestStat3 === void 0 ? void 0 : _stations$nearestStat3.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km away)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 38\n          }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#94a3b8',\n                marginTop: '-0.5rem',\n                marginBottom: '1.5rem'\n              },\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), \"Last Updated: \", selectedStationData.last_updated_on || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"ZP89B9jY0Q8RtyISvE6/5zcprWU=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","register","getAQIColor","aqi","undefined","getAQIStatus","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","createAqiIcon","color","iconHtml","round","window","L","divIcon","html","className","iconSize","iconAnchor","MapPage","_s","_stations$nearestStat","_stations$nearestStat2","_stations$nearestStat3","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","forecastData","setForecastData","isForecastLoading","setIsForecastLoading","selectedParameter","setSelectedParameter","forecastUpdatedAt","setForecastUpdatedAt","userLocation","setUserLocation","nearestStation","setNearestStation","isLocating","setIsLocating","mapRef","markersRef","userLocationMarkerRef","navigate","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","_leaflet_id","zoomControl","setView","tileLayer","addTo","control","zoom","position","remove","trackUserLocation","navigator","geolocation","getCurrentPosition","loc","lat","coords","latitude","lng","longitude","setLatLng","marker","err","alert","fetchRealtimeData","response","fetch","data","json","Object","keys","length","message","interval","setInterval","clearInterval","nearestDist","Infinity","nearestId","entries","forEach","id","station","dist","station_info","distance","fetchForecast","values","icon","highest_sub_index","on","selectedStationData","pollutants","forecastChartData","forecastChartOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","toFixed","style","fontSize","marginTop","marginBottom","last_updated_on","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280';\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 200) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180, dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\nconst createAqiIcon = (aqi) => {\r\n    const color = getAQIColor(aqi);\r\n    const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\r\n    return window.L.divIcon({ html: iconHtml, className: 'custom-div-icon', iconSize: [32, 32], iconAnchor: [16, 32] });\r\n};\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n    const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\r\n    \r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [isLocating, setIsLocating] = useState(false);\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const userLocationMarkerRef = useRef(null);\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            map = window.L.map(mapRef.current, { zoomControl: false }).setView([10.176, 76.430], 13);\r\n            window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            window.L.control.zoom({ position: 'topleft' }).addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n    \r\n    const trackUserLocation = useCallback(() => {\r\n        setIsLocating(true);\r\n        setNearestStation(null);\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const loc = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setUserLocation(loc);\r\n                    if (mapInstance) {\r\n                        mapInstance.setView(loc, 14);\r\n                        if (userLocationMarkerRef.current) userLocationMarkerRef.current.setLatLng(loc);\r\n                        else userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\r\n                    }\r\n                    setIsLocating(false);\r\n                },\r\n                (err) => {\r\n                    alert(\"Could not get your location. Please enable location services.\");\r\n                    setIsLocating(false);\r\n                }\r\n            );\r\n        }\r\n    }, [mapInstance]);\r\n\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) { setError(err.message); } finally { setIsLoading(false); }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 60000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    useEffect(() => {\r\n        if (userLocation && Object.keys(stations).length > 0) {\r\n            let nearestDist = Infinity, nearestId = null;\r\n            Object.entries(stations).forEach(([id, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                if (dist < nearestDist) { nearestDist = dist; nearestId = id; }\r\n            });\r\n            setNearestStation({ id: nearestId, distance: nearestDist });\r\n        }\r\n    }, [userLocation, stations]);\r\n    \r\n    useEffect(() => {\r\n        if (!selectedStationId) return;\r\n        const fetchForecast = async () => { /* ... fetch forecast logic ... */ };\r\n        fetchForecast();\r\n    }, [selectedStationId, API_BASE_URL]);\r\n    \r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const marker = window.L.marker([station.station_info.lat, station.station_info.lng], { icon: createAqiIcon(station.highest_sub_index) }).addTo(mapInstance);\r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                setIsPanelOpen(true);\r\n                mapInstance.setView([station.station_info.lat, station.station_info.lng], 15);\r\n            });\r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n    const pollutants = [ /* ... pollutants array ... */ ];\r\n    const forecastChartData = useMemo(() => { /* ... chart data logic ... */ }, [forecastData, selectedParameter]);\r\n    const forecastChartOptions = { /* ... chart options logic ... */ };\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                    <button onClick={trackUserLocation} className=\"my-location-btn\" title=\"Find My Location\">\r\n                        <i className=\"fas fa-crosshairs\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)}>{/* ... */}</button>\r\n                    <div className=\"panel-header\">{/* ... station selector ... */}</div>\r\n                    <div className=\"panel-content\">\r\n                        {isLocating && <div className=\"user-location-panel\"><div className=\"user-location-header\"><i className=\"fas fa-spinner fa-spin\"></i><span>Locating...</span></div></div>}\r\n                        {nearestStation && (\r\n                            <div className=\"user-location-panel\">\r\n                                {nearestStation.distance < 1 ? (\r\n                                    <>\r\n                                        <div className=\"user-location-header\"><i className=\"fas fa-street-view\"></i><span>AQI at Your Location</span></div>\r\n                                        <div className=\"user-location-body\">\r\n                                            <div className=\"user-aqi-value\">{stations[nearestStation.id]?.highest_sub_index}</div>\r\n                                            <div className=\"user-location-details\">\r\n                                                <span>Using data from nearest station</span><br />\r\n                                                <span>{stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km)</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <div className=\"user-location-header\"><i className=\"fas fa-exclamation-triangle\"></i><span>Location Status</span></div>\r\n                                        <p>You are not within 1km of a sensor, so a precise AQI for your location cannot be provided.</p>\r\n                                        <div className=\"user-location-details\">\r\n                                            <span>Nearest: {stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km away)</span>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {isLoading ? <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div> :\r\n                        selectedStationData ? (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                <p style={{fontSize: '0.8rem', color: '#94a3b8', marginTop: '-0.5rem', marginBottom: '1.5rem'}}>\r\n                                    Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})\r\n                                    <br />\r\n                                    Last Updated: {selectedStationData.last_updated_on || 'N/A'}\r\n                                </p>\r\n                                <div className=\"pollutant-metrics\">{/* ... pollutant grid ... */}</div>\r\n                                <div className=\"forecast-section\">{/* ... forecast chart ... */}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}