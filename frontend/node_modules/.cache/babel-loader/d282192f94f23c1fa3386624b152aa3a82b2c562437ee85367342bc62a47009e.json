{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback,useMemo}from'react';import{Link,useNavigate}from'react-router-dom';import{Line}from'react-chartjs-2';import logoImage from'../assets/aqi.webp';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';import{useAuth}from'../App';import'./css/MapPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);// --- Helper Functions ---\nconst getAQIColor=aqi=>{if(aqi===null||aqi===undefined)return'#6b7280';if(aqi<=50)return'#10b981';if(aqi<=100)return'#f59e0b';if(aqi<=200)return'#ef4444';return'#7c2d12';};const getAQIStatus=aqi=>{if(aqi===null||aqi===undefined)return'Unknown';if(aqi<=50)return'Good';if(aqi<=100)return'Moderate';if(aqi<=150)return'Unhealthy';if(aqi<=200)return'Severe';if(aqi<=300)return'Very Severe';return'Hazardous';};const calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// km\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};const createAqiIcon=aqi=>{const color=getAQIColor(aqi);const iconHtml=`<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi)||'N/A'}</div></div>`;return window.L.divIcon({html:iconHtml,className:'custom-div-icon',iconSize:[40,40],iconAnchor:[20,40]});};// Enhanced popup content creator\nconst createStationPopupContent=(station,stationId)=>{const{station_info,averages,highest_sub_index}=station;const pollutants=[{key:'pm25',name:'PM2.5',unit:'µg/m³'},{key:'pm10',name:'PM10',unit:'µg/m³'},{key:'so2',name:'SO₂',unit:'µg/m³'},{key:'no2',name:'NO₂',unit:'µg/m³'},{key:'co',name:'CO',unit:'µg/m³'},{key:'o3',name:'O₃',unit:'µg/m³'},{key:'nh3',name:'NH₃',unit:'µg/m³'}];const readingsHtml=pollutants.map(p=>{const value=averages===null||averages===void 0?void 0:averages[p.key];const displayValue=value?value.toFixed(2):'N/A';return`\n            <div class=\"popup-reading-item\">\n                <div class=\"popup-reading-label\">${p.name}</div>\n                <div class=\"popup-reading-value\">\n                    ${displayValue}\n                    <span class=\"popup-reading-unit\">${p.unit}</span>\n                </div>\n            </div>\n        `;}).join('');return`\n        <div class=\"map-station-popup\">\n            <div class=\"popup-header\">\n                <div class=\"popup-station-name\">${station_info.name}</div>\n                <div class=\"popup-aqi-display\">\n                    <div class=\"popup-aqi-value\" style=\"background-color: ${getAQIColor(highest_sub_index)}\">\n                        ${Math.round(highest_sub_index)||'N/A'}\n                    </div>\n                    <div class=\"popup-aqi-status\">${getAQIStatus(highest_sub_index)}</div>\n                </div>\n            </div>\n            <div class=\"popup-readings\">\n                <div class=\"popup-readings-title\">Current Readings</div>\n                <div class=\"popup-readings-grid\">\n                    ${readingsHtml}\n                </div>\n            </div>\n            <a href=\"#\" class=\"popup-view-details\" onclick=\"window.mapPageInstance.handleStationSelect('${stationId}', true); return false;\">\n                📊 View Detailed Analysis\n            </a>\n        </div>\n    `;};const MapPage=()=>{var _userLocationData$val4,_userLocationData$val5,_userLocationData$val6,_userLocationData$val7,_userLocationData$val8,_userLocationData$val9,_userLocationData$val0,_userLocationData$val1;// === STATE MANAGEMENT ===\nconst[mapInstance,setMapInstance]=useState(null);const[stations,setStations]=useState({});const[selectedStationId,setSelectedStationId]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[forecastData,setForecastData]=useState([]);const[isForecastLoading,setIsForecastLoading]=useState(false);const[selectedParameter,setSelectedParameter]=useState('pm25_max');const[forecastUpdatedAt,setForecastUpdatedAt]=useState(null);// User location states\nconst[userLocation,setUserLocation]=useState(null);const[userLocationData,setUserLocationData]=useState(null);const[nearestStation,setNearestStation]=useState(null);const[showLocationPrompt,setShowLocationPrompt]=useState(false);const[isLocationLoading,setIsLocationLoading]=useState(false);// Mobile-specific states\nconst[isMobile,setIsMobile]=useState(window.innerWidth<=768);const[showMobileMenu,setShowMobileMenu]=useState(false);const[activeTab,setActiveTab]=useState('stations');// 'stations', 'details', 'user'\n// Refs\nconst mapRef=useRef(null);const markersRef=useRef({});const userLocationMarkerRef=useRef(null);const[isMobileView,setIsMobileView]=useState(window.innerWidth<=768);// Hooks\nconst navigate=useNavigate();const{user,logout}=useAuth();const API_BASE_URL=process.env.NODE_ENV==='production'?'https://airaware-app-gcw7.onrender.com':'http://localhost:8000';// Make component instance available globally for popup callbacks\nuseEffect(()=>{window.mapPageInstance={handleStationSelect:function(stationId){let fromPopup=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;setSelectedStationId(stationId);if(isMobile){setActiveTab('details');setShowMobileMenu(true);}if(fromPopup&&mapInstance&&stations[stationId]){const{lat,lng}=stations[stationId].station_info;mapInstance.setView([lat,lng],15);}}};return()=>{delete window.mapPageInstance;};},[mapInstance,stations,isMobile]);// === RESPONSIVE DETECTION ===\nuseEffect(()=>{const handleResize=()=>{const width=window.innerWidth;setIsMobile(width<=768);};window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);// === MAP INITIALIZATION ===\nuseEffect(()=>{let map;if(mapRef.current&&!mapRef.current._leaflet_id){map=window.L.map(mapRef.current,{zoomControl:false,attributionControl:true}).setView([10.176,76.430],13);window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'© OpenStreetMap contributors',className:'map-tiles'}).addTo(map);window.L.control.zoom({position:'topleft'}).addTo(map);setMapInstance(map);}return()=>{if(map)map.remove();};},[]);useEffect(()=>{const handleResize=()=>{setIsMobileView(window.innerWidth<=768);};window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);};},[]);// === CORRECTED IDW INTERPOLATION - ONLY REAL STATIONS ===\nconst calculateIDWInterpolation=useCallback((locationData,stations)=>{console.log('🔍 Starting IDW calculation with ONLY real stations...');// FIXED: Only use the 2 real stations for interpolation\nconst realStationIds=['lora-v1','loradev2'];const realStations={};realStationIds.forEach(id=>{if(stations[id]){realStations[id]=stations[id];}});console.log('📊 Real stations for interpolation:',Object.keys(realStations));if(Object.keys(realStations).length===0){console.warn('⚠️ No real stations available for interpolation');return{interpolated_values:{},interpolated_aqi:50,stations_used:0,method:'fallback'};}let totalWeight=0;const weightedValues={pm25:0,pm10:0,so2:0,no2:0,co:0,o3:0,nh3:0,temp:0,hum:0,pre:0};let weightedAqi=0;Object.entries(realStations).forEach(_ref=>{let[stationId,station]=_ref;const distance=calculateDistance(locationData.lat,locationData.lng,station.station_info.lat,station.station_info.lng);console.log(`📍 Station ${stationId}: ${distance.toFixed(2)}km away`);// Avoid division by zero - same as Dashboard.js\nconst safeDistance=Math.max(distance,0.001);const weight=1.0/safeDistance**2;totalWeight+=weight;// Add weighted values\nconst averages=station.averages||{};Object.keys(weightedValues).forEach(param=>{if(averages[param]!==undefined){weightedValues[param]+=averages[param]*weight;}});// Add weighted AQI\nweightedAqi+=(station.highest_sub_index||0)*weight;console.log(`⚖️ Station ${stationId}: weight=${weight.toFixed(4)}, AQI=${station.highest_sub_index}`);});// Calculate final interpolated values\nconst interpolated_values={};Object.keys(weightedValues).forEach(param=>{interpolated_values[param]=totalWeight>0?Math.round(weightedValues[param]/totalWeight*100)/100:0;});const interpolated_aqi=totalWeight>0?Math.round(weightedAqi/totalWeight):50;console.log('✅ IDW Result:',{interpolated_aqi,stations_used:Object.keys(realStations).length,total_weight:totalWeight.toFixed(4)});return{interpolated_values,interpolated_aqi,stations_used:Object.keys(realStations).length,method:'idw'};},[]);// === USER LOCATION TRACKING ===\nconst trackUserLocation=useCallback(()=>{if(!user){setShowLocationPrompt(true);return;}if(navigator.geolocation){setIsLocationLoading(true);navigator.geolocation.getCurrentPosition(position=>{const loc={lat:position.coords.latitude,lng:position.coords.longitude};setUserLocation(loc);setIsLocationLoading(false);if(mapInstance){mapInstance.setView(loc,15);const userIcon=window.L.divIcon({html:'<div class=\"user-location-marker\"><i class=\"fas fa-user\"></i></div>',className:'custom-user-icon',iconSize:[30,30],iconAnchor:[15,15]});if(userLocationMarkerRef.current){userLocationMarkerRef.current.setLatLng(loc);}else{userLocationMarkerRef.current=window.L.marker(loc,{icon:userIcon}).addTo(mapInstance);}}},err=>{setIsLocationLoading(false);console.warn(`Geolocation error: ${err.message}`);alert(\"Could not get your location. Please enable location services in your browser.\");});}else{alert(\"Geolocation is not supported by this browser.\");}},[mapInstance,user]);// === DATA FETCHING ===\nconst fetchRealtimeData=useCallback(async()=>{setIsLoading(true);try{const response=await fetch(`${API_BASE_URL}/api/map/realtime/`);if(!response.ok)throw new Error('Failed to fetch data');const data=await response.json();setStations(data.stations);if(!selectedStationId&&Object.keys(data.stations).length>0){setSelectedStationId(Object.keys(data.stations)[0]);}}catch(err){setError(err.message);}finally{setIsLoading(false);}},[API_BASE_URL,selectedStationId]);useEffect(()=>{fetchRealtimeData();const interval=setInterval(fetchRealtimeData,60000);return()=>clearInterval(interval);},[fetchRealtimeData]);// === CORRECTED USER LOCATION DATA CALCULATION - ONLY REAL STATIONS ===\nuseEffect(()=>{if(userLocation&&Object.keys(stations).length>0&&user){console.log('🔍 Calculating user location data with ONLY real stations for interpolation...');// FIXED: Only use real stations for distance calculation and interpolation\nconst realStationIds=['lora-v1','loradev2'];const realStations={};realStationIds.forEach(id=>{if(stations[id]){realStations[id]=stations[id];}});if(Object.keys(realStations).length===0){console.warn('⚠️ No real stations available');return;}// Calculate distances to ONLY real stations\nconst stationDistances={};let nearestDist=Infinity;let nearestId=null;Object.entries(realStations).forEach(_ref2=>{let[id,station]=_ref2;const dist=calculateDistance(userLocation.lat,userLocation.lng,station.station_info.lat,station.station_info.lng);stationDistances[id]={distance:dist,station:station};if(dist<nearestDist){nearestDist=dist;nearestId=id;}});setNearestStation({id:nearestId,distance:nearestDist,station:realStations[nearestId]});console.log(`📍 Nearest real station: ${nearestId} at ${nearestDist.toFixed(2)}km`);// Check if user is within 1km of any real station\nconst isWithinSensorRange=Object.values(stationDistances).some(s=>s.distance<=1.0);if(isWithinSensorRange||nearestDist<=1.0){var _realStations$nearest,_realStations$nearest2;// Within 1km - use interpolation with ONLY real stations\nconst idwResult=calculateIDWInterpolation(userLocation,realStations);setUserLocationData({method:'location_interpolation',source:'interpolated',explanation:`You are ${nearestDist.toFixed(1)}km from the nearest sensor. Showing calculated air quality for your exact location using data from the 2 real monitoring stations.`,values:idwResult.interpolated_values,aqi:idwResult.interpolated_aqi,station_name:`Your Location (Calculated from Real Stations)`,is_interpolated:true,show_distance_message:true,distance_message:`📍 You are within sensor range (${nearestDist.toFixed(1)}km from nearest), showing calculated values for your exact location using only real sensor data`,data_type:'Your Location Data (Real Sensor Interpolation)',nearest_station_name:(_realStations$nearest=realStations[nearestId])===null||_realStations$nearest===void 0?void 0:(_realStations$nearest2=_realStations$nearest.station_info)===null||_realStations$nearest2===void 0?void 0:_realStations$nearest2.name,stations_used_for_calculation:Object.keys(realStations)});console.log('✅ Using interpolated data from real stations:',idwResult);}else{// Beyond 1km from all real sensors - show nearest real station data\nconst nearestStationData=realStations[nearestId];setUserLocationData({method:'nearest_station',source:'nearest_station',explanation:`You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Too far for accurate interpolation - showing data from ${nearestStationData.station_info.name} (nearest real monitoring station).`,values:nearestStationData.averages||{},aqi:nearestStationData.highest_sub_index||50,station_name:nearestStationData.station_info.name,is_interpolated:false,show_distance_message:true,distance_message:`📍 You are ${nearestDist.toFixed(1)}km from the nearest real sensor (beyond 1km interpolation range), showing data from ${nearestStationData.station_info.name}`,data_type:'Nearest Real Station Data',nearest_station_name:nearestStationData.station_info.name,distance_warning:nearestDist>1.0?`You are ${nearestDist.toFixed(1)}km away from sensors, so you cannot get interpolated values for your exact location.`:null});console.log('✅ Using nearest real station data (beyond 1km):',nearestStationData.station_info.name);}}},[userLocation,stations,user,calculateIDWInterpolation]);// === FORECAST DATA FETCHING ===\nuseEffect(()=>{if(!selectedStationId)return;const fetchForecast=async()=>{setIsForecastLoading(true);try{const response=await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);if(!response.ok)throw new Error('Failed to fetch forecast');const data=await response.json();setForecastData(data.forecast_data||[]);setForecastUpdatedAt(data.forecast_updated_at||null);}catch(err){console.error(\"Forecast fetch error:\",err);setForecastData([]);}finally{setIsForecastLoading(false);}};fetchForecast();},[selectedStationId,API_BASE_URL]);// === MAP MARKERS UPDATE WITH ENHANCED POPUPS ===\nuseEffect(()=>{if(!mapInstance||Object.keys(stations).length===0)return;Object.values(markersRef.current).forEach(marker=>marker.remove());markersRef.current={};Object.entries(stations).forEach(_ref3=>{let[id,station]=_ref3;const{lat,lng}=station.station_info;const marker=window.L.marker([lat,lng],{icon:createAqiIcon(station.highest_sub_index)}).addTo(mapInstance);// Enhanced popup with detailed information\nconst popupContent=createStationPopupContent(station,id);marker.bindPopup(popupContent,{maxWidth:300,className:'enhanced-station-popup'});marker.on('click',()=>{setSelectedStationId(id);if(isMobile){setActiveTab('details');setShowMobileMenu(true);}mapInstance.setView([lat,lng],15);});markersRef.current[id]=marker;});},[mapInstance,stations,isMobile]);// === EVENT HANDLERS ===\nconst handleLogout=useCallback(()=>{logout();setUserLocation(null);setUserLocationData(null);setNearestStation(null);if(userLocationMarkerRef.current){userLocationMarkerRef.current.remove();userLocationMarkerRef.current=null;}},[logout]);const handleStationSelect=useCallback(stationId=>{setSelectedStationId(stationId);if(isMobile){setActiveTab('details');}},[isMobile]);// === DATA PROCESSING ===\nconst selectedStationData=stations[selectedStationId];const pollutants=[{key:'pm25',name:'PM2.5'},{key:'pm10',name:'PM10'},{key:'so2',name:'SO₂'},{key:'no2',name:'NO₂'},{key:'co',name:'CO'},{key:'o3',name:'O₃'},{key:'nh3',name:'NH₃'}];// === FORECAST CHART CONFIGURATION ===\nconst forecastChartData=useMemo(()=>{if(!forecastData||forecastData.length===0)return{labels:[],datasets:[]};const labels=forecastData.map(d=>new Date(d.day).toLocaleDateString('en-US',{month:'short',day:'numeric'}));const dataPoints=forecastData.map(d=>d[selectedParameter]);return{labels,datasets:[{label:selectedParameter.replace('_max','').toUpperCase(),data:dataPoints,borderColor:'#3b82f6',backgroundColor:'rgba(59, 130, 246, 0.1)',fill:true,tension:0.4,pointBackgroundColor:'#3b82f6',pointBorderColor:'#ffffff',pointBorderWidth:2,pointRadius:isMobile?4:6}]};},[forecastData,selectedParameter,isMobile]);const forecastChartOptions=useMemo(()=>({responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},tooltip:{backgroundColor:'rgba(255, 255, 255, 0.95)',titleColor:'#1f2937',bodyColor:'#374151',borderColor:'#d1d5db',borderWidth:1,cornerRadius:8}},scales:{x:{ticks:{color:'#6b7280',font:{size:isMobile?10:12}},grid:{color:'#f3f4f6'}},y:{ticks:{color:'#6b7280',font:{size:isMobile?10:12}},grid:{color:'#f3f4f6'}}},elements:{point:{hoverRadius:isMobile?6:8}}}),[isMobile]);// Mobile Tab Content Renderer\nconst renderMobileTabContent=()=>{switch(activeTab){case'stations':return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-tab-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mobile-section-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),\"Monitoring Stations\"]})}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading stations...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-error\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-triangle\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchRealtimeData,className:\"retry-btn\",children:\"Retry\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"mobile-station-list\",children:Object.entries(stations).map(_ref4=>{let[id,station]=_ref4;return/*#__PURE__*/_jsxs(\"button\",{className:`mobile-station-card ${selectedStationId===id?'active':''}`,onClick:()=>handleStationSelect(id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"station-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:station.station_info.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Last updated: \",station.last_updated_on||'N/A']}),['lora-v1','loradev2'].includes(id)&&/*#__PURE__*/_jsx(\"span\",{className:\"real-station-badge\",children:\"\\uD83D\\uDFE2 Real Sensor\"}),id.startsWith('temp-')&&/*#__PURE__*/_jsx(\"span\",{className:\"simulated-station-badge\",children:\"\\uD83D\\uDD2E Simulated\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-aqi-badge\",style:{backgroundColor:getAQIColor(station.highest_sub_index)},children:[/*#__PURE__*/_jsx(\"span\",{className:\"aqi-number\",children:Math.round(station.highest_sub_index)||'N/A'}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-status\",children:getAQIStatus(station.highest_sub_index)})]})]},id);})})]});case'details':return/*#__PURE__*/_jsx(\"div\",{className:\"mobile-tab-content\",children:selectedStationData?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar\"}),selectedStationData.station_info.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-aqi-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mobile-aqi-value\",style:{backgroundColor:getAQIColor(selectedStationData.highest_sub_index)},children:Math.round(selectedStationData.highest_sub_index)}),/*#__PURE__*/_jsx(\"span\",{className:\"mobile-aqi-status\",children:getAQIStatus(selectedStationData.highest_sub_index)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-readings-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Current Readings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-readings-grid\",children:pollutants.map(p=>{var _selectedStationData$,_selectedStationData$2,_selectedStationData$3;return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-reading-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"reading-label\",children:p.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"reading-value\",children:[(_selectedStationData$=(_selectedStationData$2=selectedStationData.averages)===null||_selectedStationData$2===void 0?void 0:(_selectedStationData$3=_selectedStationData$2[p.key])===null||_selectedStationData$3===void 0?void 0:_selectedStationData$3.toFixed(2))!==null&&_selectedStationData$!==void 0?_selectedStationData$:'N/A',/*#__PURE__*/_jsx(\"span\",{children:\"\\xB5g/m\\xB3\"})]})]},p.key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-forecast-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"4-Day Forecast\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"mobile-parameter-selector\",value:selectedParameter,onChange:e=>setSelectedParameter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pm25_max\",children:\"PM2.5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pm10_max\",children:\"PM10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"so2_max\",children:\"SO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no2_max\",children:\"NO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"co_max\",children:\"CO\"}),/*#__PURE__*/_jsx(\"option\",{value:\"o3_max\",children:\"O\\u2083\"}),/*#__PURE__*/_jsx(\"option\",{value:\"nh3_max\",children:\"NH\\u2083\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-chart-container\",children:isForecastLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"chart-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner small\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading forecast...\"})]}):forecastData.length>0?/*#__PURE__*/_jsx(Line,{data:forecastChartData,options:forecastChartOptions}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-data-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No forecast data available\"})]})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-no-selection\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select a Station\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a monitoring station to view detailed information\"}),/*#__PURE__*/_jsx(\"button\",{className:\"select-station-btn\",onClick:()=>setActiveTab('stations'),children:\"View Stations\"})]})});case'user':return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-tab-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mobile-section-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-circle\"}),\"Your Location\"]})}),user&&userLocation&&userLocationData&&nearestStation?/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-user-data\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-user-aqi\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-aqi-circle\",style:{backgroundColor:getAQIColor(userLocationData.aqi)},children:[/*#__PURE__*/_jsx(\"span\",{className:\"aqi-number\",children:Math.round(userLocationData.aqi)}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-label\",children:\"AQI\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Method:\"}),\" \",userLocationData.is_interpolated?'Smart Interpolation (Real Sensors Only)':'Nearest Real Station']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Data Source:\"}),\" \",userLocationData.station_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Distance:\"}),\" \",nearestStation.distance.toFixed(1),\" km from nearest real sensor\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",userLocationData.is_interpolated?'Within sensor range':'Beyond interpolation range']}),userLocationData.stations_used_for_calculation&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Stations Used:\"}),\" \",userLocationData.stations_used_for_calculation.join(', ')]}),userLocationData.distance_warning&&/*#__PURE__*/_jsxs(\"div\",{className:\"distance-warning\",children:[\"\\u26A0\\uFE0F \",userLocationData.distance_warning]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-readings-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your Location Readings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-readings-grid\",children:pollutants.map(p=>{var _userLocationData$val,_userLocationData$val2,_userLocationData$val3;return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-reading-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"reading-label\",children:p.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"reading-value\",children:[(_userLocationData$val=(_userLocationData$val2=userLocationData.values)===null||_userLocationData$val2===void 0?void 0:(_userLocationData$val3=_userLocationData$val2[p.key])===null||_userLocationData$val3===void 0?void 0:_userLocationData$val3.toFixed(2))!==null&&_userLocationData$val!==void 0?_userLocationData$val:'N/A',/*#__PURE__*/_jsx(\"span\",{children:\"\\xB5g/m\\xB3\"})]}),userLocationData.is_interpolated?/*#__PURE__*/_jsx(\"div\",{className:\"interpolated-badge\",children:\"\\uD83C\\uDFAF Calculated\"}):/*#__PURE__*/_jsx(\"div\",{className:\"nearest-badge\",children:\"\\uD83D\\uDCCD Nearest\"})]},p.key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-methodology\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Data Methodology\"}),/*#__PURE__*/_jsx(\"div\",{className:\"methodology-info\",children:userLocationData.is_interpolated?/*#__PURE__*/_jsxs(\"div\",{className:\"interpolation-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Using smart interpolation from real sensors only\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Calculated from lora-v1 and loradev2 stations\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83D\\uDCCF\"}),/*#__PURE__*/_jsx(\"span\",{children:\"You are within 1km of real sensors\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"nearest-station-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83D\\uDCCD\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Using nearest real station data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Beyond 1km from sensors - no interpolation\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83D\\uDCCF\"}),/*#__PURE__*/_jsxs(\"span\",{children:[nearestStation.distance.toFixed(1),\"km from nearest real sensor\"]})]})]})})]})]}):!user?/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-login-prompt\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-lock\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Login Required\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login to view personalized AQI data for your location\"}),/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"mobile-login-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),\"Login Now\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-location-prompt\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Enable Location\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Get personalized AQI data calculated from real sensors for your current location\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mobile-location-btn\",onClick:trackUserLocation,disabled:isLocationLoading,children:isLocationLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner fa-spin\"}),\"Getting Location...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-crosshairs\"}),\"Get My Location\"]})})]})]});default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"map-page\",children:[/*#__PURE__*/_jsx(\"nav\",{className:\"navbar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/\",className:\"navbar-brand\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"AQM Logo\",width:isMobileView?\"32\":\"40\",height:isMobileView?\"32\":\"40\"}),\"AirAware\"]}),!isMobile&&/*#__PURE__*/_jsx(\"div\",{className:\"nav-center\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-link\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/map\",className:\"nav-link active\",children:\"Live Map\"})}),user&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"nav-link\",children:\"Profile\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/add-family\",className:\"nav-link\",children:\"Add Family\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"nav-right\",children:user?/*#__PURE__*/_jsxs(\"div\",{className:\"user-menu\",children:[!isMobile&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:user.name})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-out-alt\"}),!isMobile&&'Logout']})]}):/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"login-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),!isMobile&&'Login']})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"map\",ref:mapRef,className:\"map-element\"}),/*#__PURE__*/_jsx(\"button\",{onClick:trackUserLocation,className:`my-location-btn ${isLocationLoading?'loading':''}`,title:user?\"Find My Location\":\"Login to view your location\",disabled:isLocationLoading,children:isLocationLoading?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner fa-spin\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-crosshairs\"})}),isMobile&&/*#__PURE__*/_jsx(\"button\",{className:\"mobile-menu-toggle\",onClick:()=>setShowMobileMenu(!showMobileMenu),children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${showMobileMenu?'fa-times':'fa-bars'}`})})]}),!isMobile&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"data-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"data-panel-content\",children:[user&&userLocation&&userLocationData&&nearestStation&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),/*#__PURE__*/_jsx(\"span\",{children:\"AQI at Your Location\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-aqi-value\",style:{color:getAQIColor(userLocationData.aqi)},children:Math.round(userLocationData.aqi)}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"location-method\",children:userLocationData.is_interpolated?'🎯 Smart Interpolation from Real Sensors Only':'📍 Nearest Real Station Data'}),/*#__PURE__*/_jsxs(\"div\",{className:\"nearest-station\",children:[\"Data source: \",userLocationData.station_name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"distance\",children:[\"Distance to nearest real sensor: \",nearestStation.distance.toFixed(1),\" km\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"data-quality\",children:userLocationData.is_interpolated?`🎯 Calculated for your exact location using lora-v1 and loradev2`:`📍 Direct reading from ${userLocationData.nearest_station_name}`}),userLocationData.distance_warning&&/*#__PURE__*/_jsxs(\"div\",{className:\"distance-warning\",children:[\"\\u26A0\\uFE0F \",userLocationData.distance_warning]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-readings-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your Location Readings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"readings-mini-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mini-reading\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"PM2.5:\"}),/*#__PURE__*/_jsx(\"span\",{children:((_userLocationData$val4=userLocationData.values)===null||_userLocationData$val4===void 0?void 0:(_userLocationData$val5=_userLocationData$val4.pm25)===null||_userLocationData$val5===void 0?void 0:_userLocationData$val5.toFixed(1))||'N/A'}),userLocationData.is_interpolated?/*#__PURE__*/_jsx(\"span\",{className:\"calc-badge\",children:\"\\uD83C\\uDFAF\"}):/*#__PURE__*/_jsx(\"span\",{className:\"nearest-badge\",children:\"\\uD83D\\uDCCD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mini-reading\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"PM10:\"}),/*#__PURE__*/_jsx(\"span\",{children:((_userLocationData$val6=userLocationData.values)===null||_userLocationData$val6===void 0?void 0:(_userLocationData$val7=_userLocationData$val6.pm10)===null||_userLocationData$val7===void 0?void 0:_userLocationData$val7.toFixed(1))||'N/A'}),userLocationData.is_interpolated?/*#__PURE__*/_jsx(\"span\",{className:\"calc-badge\",children:\"\\uD83C\\uDFAF\"}):/*#__PURE__*/_jsx(\"span\",{className:\"nearest-badge\",children:\"\\uD83D\\uDCCD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mini-reading\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"NO\\u2082:\"}),/*#__PURE__*/_jsx(\"span\",{children:((_userLocationData$val8=userLocationData.values)===null||_userLocationData$val8===void 0?void 0:(_userLocationData$val9=_userLocationData$val8.no2)===null||_userLocationData$val9===void 0?void 0:_userLocationData$val9.toFixed(1))||'N/A'}),userLocationData.is_interpolated?/*#__PURE__*/_jsx(\"span\",{className:\"calc-badge\",children:\"\\uD83C\\uDFAF\"}):/*#__PURE__*/_jsx(\"span\",{className:\"nearest-badge\",children:\"\\uD83D\\uDCCD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mini-reading\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"O\\u2083:\"}),/*#__PURE__*/_jsx(\"span\",{children:((_userLocationData$val0=userLocationData.values)===null||_userLocationData$val0===void 0?void 0:(_userLocationData$val1=_userLocationData$val0.o3)===null||_userLocationData$val1===void 0?void 0:_userLocationData$val1.toFixed(1))||'N/A'}),userLocationData.is_interpolated?/*#__PURE__*/_jsx(\"span\",{className:\"calc-badge\",children:\"\\uD83C\\uDFAF\"}):/*#__PURE__*/_jsx(\"span\",{className:\"nearest-badge\",children:\"\\uD83D\\uDCCD\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calc-note\",children:userLocationData.is_interpolated?'🎯 Interpolated values using only real sensor data (lora-v1, loradev2)':`📍 Direct values from nearest real sensor (${userLocationData.nearest_station_name})`})]})]}),!user&&/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-lock\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Personal Location Data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Login to view AQI data at your current location with personalized insights calculated from real sensors.\"}),/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"login-prompt-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),\"Login to Access\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-list-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"station-list-header\",children:/*#__PURE__*/_jsxs(\"h2\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),\"Monitoring Stations\"]})}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"panel-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading stations...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-triangle\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchRealtimeData,className:\"retry-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-redo\"}),\"Retry\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"station-selector\",children:Object.entries(stations).map(_ref5=>{let[id,station]=_ref5;return/*#__PURE__*/_jsxs(\"button\",{className:`station-btn ${selectedStationId===id?'active':''}`,onClick:()=>handleStationSelect(id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"station-btn-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"station-name-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"station-name\",children:station.station_info.name}),['lora-v1','loradev2'].includes(id)&&/*#__PURE__*/_jsx(\"span\",{className:\"real-station-indicator\",children:\"\\uD83D\\uDFE2\"}),id.startsWith('temp-')&&/*#__PURE__*/_jsx(\"span\",{className:\"simulated-station-indicator\",children:\"\\uD83D\\uDD2E\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"station-aqi\",style:{backgroundColor:getAQIColor(station.highest_sub_index)},children:Math.round(station.highest_sub_index)||'N/A'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"station-type-label\",children:['lora-v1','loradev2'].includes(id)?'Real Sensor':'Simulated'})]},id);})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"station-details-panel\",children:/*#__PURE__*/_jsx(\"div\",{className:\"station-details-content\",children:selectedStationData?/*#__PURE__*/_jsxs(\"div\",{className:\"station-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"station-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedStationData.station_info.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-badges\",children:[['lora-v1','loradev2'].includes(selectedStationId)&&/*#__PURE__*/_jsx(\"span\",{className:\"real-sensor-badge\",children:\"\\uD83D\\uDFE2 Real Sensor\"}),selectedStationId.startsWith('temp-')&&/*#__PURE__*/_jsx(\"span\",{className:\"simulated-sensor-badge\",children:\"\\uD83D\\uDD2E Simulated\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"aqi-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"current-aqi\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"aqi-label\",children:\"Current AQI\"}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-value\",style:{color:getAQIColor(selectedStationData.highest_sub_index)},children:Math.round(selectedStationData.highest_sub_index)}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-status\",children:getAQIStatus(selectedStationData.highest_sub_index)})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"readings-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar\"}),\"Current Readings\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pollutant-grid\",children:pollutants.map(p=>{var _selectedStationData$4,_selectedStationData$5,_selectedStationData$6;return/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-label\",children:p.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-value\",children:[(_selectedStationData$4=(_selectedStationData$5=selectedStationData.averages)===null||_selectedStationData$5===void 0?void 0:(_selectedStationData$6=_selectedStationData$5[p.key])===null||_selectedStationData$6===void 0?void 0:_selectedStationData$6.toFixed(2))!==null&&_selectedStationData$4!==void 0?_selectedStationData$4:'N/A',/*#__PURE__*/_jsx(\"span\",{className:\"metric-unit\",children:\"\\xB5g/m\\xB3\"})]})]},p.key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),\"4-Day Forecast\"]}),/*#__PURE__*/_jsxs(\"select\",{className:\"parameter-selector\",value:selectedParameter,onChange:e=>setSelectedParameter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pm25_max\",children:\"PM2.5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pm10_max\",children:\"PM10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"so2_max\",children:\"SO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no2_max\",children:\"NO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"co_max\",children:\"CO\"}),/*#__PURE__*/_jsx(\"option\",{value:\"o3_max\",children:\"O\\u2083\"}),/*#__PURE__*/_jsx(\"option\",{value:\"nh3_max\",children:\"NH\\u2083\"})]})]}),forecastUpdatedAt&&/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-update-time\",children:[\"Last updated: \",new Date(forecastUpdatedAt).toLocaleString()]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:isForecastLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner small\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading forecast...\"})]}):forecastData.length>0?/*#__PURE__*/_jsx(Line,{data:forecastChartData,options:forecastChartOptions}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-data-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No forecast data available\"})]})})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-station-selected\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-station-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select a Station\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a monitoring station from the left panel or click on a map marker to view detailed air quality data, current readings, and forecast information.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-types-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"station-type-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"type-indicator real\",children:\"\\uD83D\\uDFE2\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Real sensors are used for interpolation calculations\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-type-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"type-indicator simulated\",children:\"\\uD83D\\uDD2E\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Simulated stations for network visualization\"})]})]})]})})})})]}),isMobile&&/*#__PURE__*/_jsxs(\"div\",{className:`mobile-bottom-sheet ${showMobileMenu?'open':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-tab-nav\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`mobile-tab-btn ${activeTab==='stations'?'active':''}`,onClick:()=>setActiveTab('stations'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Stations\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:`mobile-tab-btn ${activeTab==='details'?'active':''}`,onClick:()=>setActiveTab('details'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Details\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:`mobile-tab-btn ${activeTab==='user'?'active':''}`,onClick:()=>setActiveTab('user'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-circle\"}),/*#__PURE__*/_jsx(\"span\",{children:\"My Data\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-tab-content-wrapper\",children:renderMobileTabContent()})]})]}),showLocationPrompt&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowLocationPrompt(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),\" Location Access\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowLocationPrompt(false),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"To view AQI data calculated from real sensors at your current location, please login first.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"modal-btn primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),\"Login\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn secondary\",onClick:()=>setShowLocationPrompt(false),children:\"Maybe Later\"})]})]})]})})]});};export default MapPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","useNavigate","Line","logoImage","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","getAQIColor","aqi","undefined","getAQIStatus","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","createAqiIcon","color","iconHtml","round","window","L","divIcon","html","className","iconSize","iconAnchor","createStationPopupContent","station","stationId","station_info","averages","highest_sub_index","pollutants","key","name","unit","readingsHtml","map","p","value","displayValue","toFixed","join","MapPage","_userLocationData$val4","_userLocationData$val5","_userLocationData$val6","_userLocationData$val7","_userLocationData$val8","_userLocationData$val9","_userLocationData$val0","_userLocationData$val1","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","forecastData","setForecastData","isForecastLoading","setIsForecastLoading","selectedParameter","setSelectedParameter","forecastUpdatedAt","setForecastUpdatedAt","userLocation","setUserLocation","userLocationData","setUserLocationData","nearestStation","setNearestStation","showLocationPrompt","setShowLocationPrompt","isLocationLoading","setIsLocationLoading","isMobile","setIsMobile","innerWidth","showMobileMenu","setShowMobileMenu","activeTab","setActiveTab","mapRef","markersRef","userLocationMarkerRef","isMobileView","setIsMobileView","navigate","user","logout","API_BASE_URL","process","env","NODE_ENV","mapPageInstance","handleStationSelect","fromPopup","arguments","length","lat","lng","setView","handleResize","width","addEventListener","removeEventListener","current","_leaflet_id","zoomControl","attributionControl","tileLayer","attribution","addTo","control","zoom","position","remove","calculateIDWInterpolation","locationData","console","log","realStationIds","realStations","forEach","id","Object","keys","warn","interpolated_values","interpolated_aqi","stations_used","method","totalWeight","weightedValues","pm25","pm10","so2","no2","co","o3","nh3","temp","hum","pre","weightedAqi","entries","_ref","distance","safeDistance","max","weight","param","total_weight","trackUserLocation","navigator","geolocation","getCurrentPosition","loc","coords","latitude","longitude","userIcon","setLatLng","marker","icon","err","message","alert","fetchRealtimeData","response","fetch","ok","Error","data","json","interval","setInterval","clearInterval","stationDistances","nearestDist","Infinity","nearestId","_ref2","dist","isWithinSensorRange","values","some","s","_realStations$nearest","_realStations$nearest2","idwResult","source","explanation","station_name","is_interpolated","show_distance_message","distance_message","data_type","nearest_station_name","stations_used_for_calculation","nearestStationData","distance_warning","fetchForecast","forecast_data","forecast_updated_at","_ref3","popupContent","bindPopup","maxWidth","on","handleLogout","selectedStationData","forecastChartData","labels","datasets","d","Date","day","toLocaleDateString","month","dataPoints","label","replace","toUpperCase","borderColor","backgroundColor","fill","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","forecastChartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","titleColor","bodyColor","borderWidth","cornerRadius","scales","x","ticks","font","size","grid","y","elements","point","hoverRadius","renderMobileTabContent","children","onClick","_ref4","last_updated_on","includes","startsWith","style","_selectedStationData$","_selectedStationData$2","_selectedStationData$3","onChange","e","target","options","_userLocationData$val","_userLocationData$val2","_userLocationData$val3","to","disabled","src","alt","height","ref","title","_ref5","_selectedStationData$4","_selectedStationData$5","_selectedStationData$6","toLocaleString","stopPropagation"],"sources":["C:/React/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport logoImage from '../assets/aqi.webp'; \r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(\r\n  CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler\r\n);\r\n\r\n// --- Helper Functions ---\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280';\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 200) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\n\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\n\r\nconst createAqiIcon = (aqi) => {\r\n    const color = getAQIColor(aqi);\r\n    const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\r\n    return window.L.divIcon({ html: iconHtml, className: 'custom-div-icon', iconSize: [40, 40], iconAnchor: [20, 40] });\r\n};\r\n\r\n// Enhanced popup content creator\r\nconst createStationPopupContent = (station, stationId) => {\r\n    const { station_info, averages, highest_sub_index } = station;\r\n    const pollutants = [\r\n        { key: 'pm25', name: 'PM2.5', unit: 'µg/m³' },\r\n        { key: 'pm10', name: 'PM10', unit: 'µg/m³' },\r\n        { key: 'so2', name: 'SO₂', unit: 'µg/m³' },\r\n        { key: 'no2', name: 'NO₂', unit: 'µg/m³' },\r\n        { key: 'co', name: 'CO', unit: 'µg/m³' },\r\n        { key: 'o3', name: 'O₃', unit: 'µg/m³' },\r\n        { key: 'nh3', name: 'NH₃', unit: 'µg/m³' }\r\n    ];\r\n\r\n    const readingsHtml = pollutants.map(p => {\r\n        const value = averages?.[p.key];\r\n        const displayValue = value ? value.toFixed(2) : 'N/A';\r\n        return `\r\n            <div class=\"popup-reading-item\">\r\n                <div class=\"popup-reading-label\">${p.name}</div>\r\n                <div class=\"popup-reading-value\">\r\n                    ${displayValue}\r\n                    <span class=\"popup-reading-unit\">${p.unit}</span>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }).join('');\r\n\r\n    return `\r\n        <div class=\"map-station-popup\">\r\n            <div class=\"popup-header\">\r\n                <div class=\"popup-station-name\">${station_info.name}</div>\r\n                <div class=\"popup-aqi-display\">\r\n                    <div class=\"popup-aqi-value\" style=\"background-color: ${getAQIColor(highest_sub_index)}\">\r\n                        ${Math.round(highest_sub_index) || 'N/A'}\r\n                    </div>\r\n                    <div class=\"popup-aqi-status\">${getAQIStatus(highest_sub_index)}</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"popup-readings\">\r\n                <div class=\"popup-readings-title\">Current Readings</div>\r\n                <div class=\"popup-readings-grid\">\r\n                    ${readingsHtml}\r\n                </div>\r\n            </div>\r\n            <a href=\"#\" class=\"popup-view-details\" onclick=\"window.mapPageInstance.handleStationSelect('${stationId}', true); return false;\">\r\n                📊 View Detailed Analysis\r\n            </a>\r\n        </div>\r\n    `;\r\n};\r\n\r\nconst MapPage = () => {\r\n    // === STATE MANAGEMENT ===\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n    const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\r\n    \r\n    // User location states\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [userLocationData, setUserLocationData] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [showLocationPrompt, setShowLocationPrompt] = useState(false);\r\n    const [isLocationLoading, setIsLocationLoading] = useState(false);\r\n    \r\n    // Mobile-specific states\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n    const [activeTab, setActiveTab] = useState('stations'); // 'stations', 'details', 'user'\r\n\r\n    // Refs\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const userLocationMarkerRef = useRef(null);\r\n    const [isMobileView, setIsMobileView] = useState(window.innerWidth <= 768);\r\n    \r\n    // Hooks\r\n    const navigate = useNavigate();\r\n    const { user, logout } = useAuth();\r\n    const API_BASE_URL = process.env.NODE_ENV === 'production' \r\n        ? 'https://airaware-app-gcw7.onrender.com' \r\n        : 'http://localhost:8000';\r\n\r\n    // Make component instance available globally for popup callbacks\r\n    useEffect(() => {\r\n        window.mapPageInstance = {\r\n            handleStationSelect: (stationId, fromPopup = false) => {\r\n                setSelectedStationId(stationId);\r\n                if (isMobile) {\r\n                    setActiveTab('details');\r\n                    setShowMobileMenu(true);\r\n                }\r\n                if (fromPopup && mapInstance && stations[stationId]) {\r\n                    const { lat, lng } = stations[stationId].station_info;\r\n                    mapInstance.setView([lat, lng], 15);\r\n                }\r\n            }\r\n        };\r\n        return () => {\r\n            delete window.mapPageInstance;\r\n        };\r\n    }, [mapInstance, stations, isMobile]);\r\n\r\n    // === RESPONSIVE DETECTION ===\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const width = window.innerWidth;\r\n            setIsMobile(width <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    // === MAP INITIALIZATION ===\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            map = window.L.map(mapRef.current, { \r\n                zoomControl: false,\r\n                attributionControl: true\r\n            }).setView([10.176, 76.430], 13);\r\n            \r\n            window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                attribution: '© OpenStreetMap contributors',\r\n                className: 'map-tiles'\r\n            }).addTo(map);\r\n            \r\n            window.L.control.zoom({ position: 'topleft' }).addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobileView(window.innerWidth <= 768);\r\n        };\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n        }, []);\r\n            \r\n    // === CORRECTED IDW INTERPOLATION - ONLY REAL STATIONS ===\r\n    const calculateIDWInterpolation = useCallback((locationData, stations) => {\r\n        console.log('🔍 Starting IDW calculation with ONLY real stations...');\r\n        \r\n        // FIXED: Only use the 2 real stations for interpolation\r\n        const realStationIds = ['lora-v1', 'loradev2'];\r\n        const realStations = {};\r\n        \r\n        realStationIds.forEach(id => {\r\n            if (stations[id]) {\r\n                realStations[id] = stations[id];\r\n            }\r\n        });\r\n        \r\n        console.log('📊 Real stations for interpolation:', Object.keys(realStations));\r\n        \r\n        if (Object.keys(realStations).length === 0) {\r\n            console.warn('⚠️ No real stations available for interpolation');\r\n            return {\r\n                interpolated_values: {},\r\n                interpolated_aqi: 50,\r\n                stations_used: 0,\r\n                method: 'fallback'\r\n            };\r\n        }\r\n        \r\n        let totalWeight = 0;\r\n        const weightedValues = {\r\n            pm25: 0, pm10: 0, so2: 0, no2: 0, \r\n            co: 0, o3: 0, nh3: 0, temp: 0, hum: 0, pre: 0\r\n        };\r\n        let weightedAqi = 0;\r\n\r\n        Object.entries(realStations).forEach(([stationId, station]) => {\r\n            const distance = calculateDistance(\r\n                locationData.lat,\r\n                locationData.lng,\r\n                station.station_info.lat,\r\n                station.station_info.lng\r\n            );\r\n\r\n            console.log(`📍 Station ${stationId}: ${distance.toFixed(2)}km away`);\r\n\r\n            // Avoid division by zero - same as Dashboard.js\r\n            const safeDistance = Math.max(distance, 0.001);\r\n            const weight = 1.0 / (safeDistance ** 2);\r\n            totalWeight += weight;\r\n\r\n            // Add weighted values\r\n            const averages = station.averages || {};\r\n            Object.keys(weightedValues).forEach(param => {\r\n                if (averages[param] !== undefined) {\r\n                    weightedValues[param] += averages[param] * weight;\r\n                }\r\n            });\r\n\r\n            // Add weighted AQI\r\n            weightedAqi += (station.highest_sub_index || 0) * weight;\r\n            \r\n            console.log(`⚖️ Station ${stationId}: weight=${weight.toFixed(4)}, AQI=${station.highest_sub_index}`);\r\n        });\r\n\r\n        // Calculate final interpolated values\r\n        const interpolated_values = {};\r\n        Object.keys(weightedValues).forEach(param => {\r\n            interpolated_values[param] = totalWeight > 0 ? \r\n                Math.round((weightedValues[param] / totalWeight) * 100) / 100 : 0;\r\n        });\r\n\r\n        const interpolated_aqi = totalWeight > 0 ? \r\n            Math.round(weightedAqi / totalWeight) : 50;\r\n\r\n        console.log('✅ IDW Result:', {\r\n            interpolated_aqi,\r\n            stations_used: Object.keys(realStations).length,\r\n            total_weight: totalWeight.toFixed(4)\r\n        });\r\n\r\n        return {\r\n            interpolated_values,\r\n            interpolated_aqi,\r\n            stations_used: Object.keys(realStations).length,\r\n            method: 'idw'\r\n        };\r\n    }, []);\r\n    \r\n    // === USER LOCATION TRACKING ===\r\n    const trackUserLocation = useCallback(() => {\r\n        if (!user) {\r\n            setShowLocationPrompt(true);\r\n            return;\r\n        }\r\n\r\n        if (navigator.geolocation) {\r\n            setIsLocationLoading(true);\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const loc = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setUserLocation(loc);\r\n                    setIsLocationLoading(false);\r\n                    \r\n                    if (mapInstance) {\r\n                        mapInstance.setView(loc, 15);\r\n                        \r\n                        const userIcon = window.L.divIcon({\r\n                            html: '<div class=\"user-location-marker\"><i class=\"fas fa-user\"></i></div>',\r\n                            className: 'custom-user-icon',\r\n                            iconSize: [30, 30],\r\n                            iconAnchor: [15, 15]\r\n                        });\r\n                        \r\n                        if (userLocationMarkerRef.current) {\r\n                            userLocationMarkerRef.current.setLatLng(loc);\r\n                        } else {\r\n                            userLocationMarkerRef.current = window.L.marker(loc, { icon: userIcon }).addTo(mapInstance);\r\n                        }\r\n                    }\r\n                },\r\n                (err) => {\r\n                    setIsLocationLoading(false);\r\n                    console.warn(`Geolocation error: ${err.message}`);\r\n                    alert(\"Could not get your location. Please enable location services in your browser.\");\r\n                }\r\n            );\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n    }, [mapInstance, user]);\r\n\r\n    // === DATA FETCHING ===\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            if (!response.ok) throw new Error('Failed to fetch data');\r\n            \r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            \r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 60000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    // === CORRECTED USER LOCATION DATA CALCULATION - ONLY REAL STATIONS ===\r\n    useEffect(() => {\r\n        if (userLocation && Object.keys(stations).length > 0 && user) {\r\n            console.log('🔍 Calculating user location data with ONLY real stations for interpolation...');\r\n            \r\n            // FIXED: Only use real stations for distance calculation and interpolation\r\n            const realStationIds = ['lora-v1', 'loradev2'];\r\n            const realStations = {};\r\n            \r\n            realStationIds.forEach(id => {\r\n                if (stations[id]) {\r\n                    realStations[id] = stations[id];\r\n                }\r\n            });\r\n            \r\n            if (Object.keys(realStations).length === 0) {\r\n                console.warn('⚠️ No real stations available');\r\n                return;\r\n            }\r\n            \r\n            // Calculate distances to ONLY real stations\r\n            const stationDistances = {};\r\n            let nearestDist = Infinity;\r\n            let nearestId = null;\r\n            \r\n            Object.entries(realStations).forEach(([id, station]) => {\r\n                const dist = calculateDistance(\r\n                    userLocation.lat, \r\n                    userLocation.lng, \r\n                    station.station_info.lat, \r\n                    station.station_info.lng\r\n                );\r\n                \r\n                stationDistances[id] = {\r\n                    distance: dist,\r\n                    station: station\r\n                };\r\n                \r\n                if (dist < nearestDist) { \r\n                    nearestDist = dist; \r\n                    nearestId = id; \r\n                }\r\n            });\r\n            \r\n            setNearestStation({ \r\n                id: nearestId, \r\n                distance: nearestDist,\r\n                station: realStations[nearestId]\r\n            });\r\n\r\n            console.log(`📍 Nearest real station: ${nearestId} at ${nearestDist.toFixed(2)}km`);\r\n            \r\n            // Check if user is within 1km of any real station\r\n            const isWithinSensorRange = Object.values(stationDistances).some(s => s.distance <= 1.0);\r\n            \r\n            if (isWithinSensorRange || nearestDist <= 1.0) {\r\n                // Within 1km - use interpolation with ONLY real stations\r\n                const idwResult = calculateIDWInterpolation(userLocation, realStations);\r\n                \r\n                setUserLocationData({\r\n                    method: 'location_interpolation',\r\n                    source: 'interpolated',\r\n                    explanation: `You are ${nearestDist.toFixed(1)}km from the nearest sensor. Showing calculated air quality for your exact location using data from the 2 real monitoring stations.`,\r\n                    values: idwResult.interpolated_values,\r\n                    aqi: idwResult.interpolated_aqi,\r\n                    station_name: `Your Location (Calculated from Real Stations)`,\r\n                    is_interpolated: true,\r\n                    show_distance_message: true,\r\n                    distance_message: `📍 You are within sensor range (${nearestDist.toFixed(1)}km from nearest), showing calculated values for your exact location using only real sensor data`,\r\n                    data_type: 'Your Location Data (Real Sensor Interpolation)',\r\n                    nearest_station_name: realStations[nearestId]?.station_info?.name,\r\n                    stations_used_for_calculation: Object.keys(realStations)\r\n                });\r\n                \r\n                console.log('✅ Using interpolated data from real stations:', idwResult);\r\n            } else {\r\n                // Beyond 1km from all real sensors - show nearest real station data\r\n                const nearestStationData = realStations[nearestId];\r\n                \r\n                setUserLocationData({\r\n                    method: 'nearest_station',\r\n                    source: 'nearest_station',\r\n                    explanation: `You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Too far for accurate interpolation - showing data from ${nearestStationData.station_info.name} (nearest real monitoring station).`,\r\n                    values: nearestStationData.averages || {},\r\n                    aqi: nearestStationData.highest_sub_index || 50,\r\n                    station_name: nearestStationData.station_info.name,\r\n                    is_interpolated: false,\r\n                    show_distance_message: true,\r\n                    distance_message: `📍 You are ${nearestDist.toFixed(1)}km from the nearest real sensor (beyond 1km interpolation range), showing data from ${nearestStationData.station_info.name}`,\r\n                    data_type: 'Nearest Real Station Data',\r\n                    nearest_station_name: nearestStationData.station_info.name,\r\n                    distance_warning: nearestDist > 1.0 ? `You are ${nearestDist.toFixed(1)}km away from sensors, so you cannot get interpolated values for your exact location.` : null\r\n                });\r\n                \r\n                console.log('✅ Using nearest real station data (beyond 1km):', nearestStationData.station_info.name);\r\n            }\r\n        }\r\n    }, [userLocation, stations, user, calculateIDWInterpolation]);\r\n    \r\n    // === FORECAST DATA FETCHING ===\r\n    useEffect(() => {\r\n        if (!selectedStationId) return;\r\n        \r\n        const fetchForecast = async () => {\r\n            setIsForecastLoading(true);\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\r\n                if (!response.ok) throw new Error('Failed to fetch forecast');\r\n                \r\n                const data = await response.json();\r\n                setForecastData(data.forecast_data || []);\r\n                setForecastUpdatedAt(data.forecast_updated_at || null);\r\n            } catch (err) {\r\n                console.error(\"Forecast fetch error:\", err);\r\n                setForecastData([]);\r\n            } finally {\r\n                setIsForecastLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchForecast();\r\n    }, [selectedStationId, API_BASE_URL]);\r\n\r\n    // === MAP MARKERS UPDATE WITH ENHANCED POPUPS ===\r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        \r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const { lat, lng } = station.station_info;\r\n            const marker = window.L.marker([lat, lng], { \r\n                icon: createAqiIcon(station.highest_sub_index) \r\n            }).addTo(mapInstance);\r\n            \r\n            // Enhanced popup with detailed information\r\n            const popupContent = createStationPopupContent(station, id);\r\n            marker.bindPopup(popupContent, {\r\n                maxWidth: 300,\r\n                className: 'enhanced-station-popup'\r\n            });\r\n            \r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                if (isMobile) {\r\n                    setActiveTab('details');\r\n                    setShowMobileMenu(true);\r\n                }\r\n                mapInstance.setView([lat, lng], 15);\r\n            });\r\n            \r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, isMobile]);\r\n\r\n    // === EVENT HANDLERS ===\r\n    const handleLogout = useCallback(() => {\r\n        logout();\r\n        setUserLocation(null);\r\n        setUserLocationData(null);\r\n        setNearestStation(null);\r\n        if (userLocationMarkerRef.current) {\r\n            userLocationMarkerRef.current.remove();\r\n            userLocationMarkerRef.current = null;\r\n        }\r\n    }, [logout]);\r\n\r\n    const handleStationSelect = useCallback((stationId) => {\r\n        setSelectedStationId(stationId);\r\n        if (isMobile) {\r\n            setActiveTab('details');\r\n        }\r\n    }, [isMobile]);\r\n\r\n    // === DATA PROCESSING ===\r\n    const selectedStationData = stations[selectedStationId];\r\n    const pollutants = [\r\n        { key: 'pm25', name: 'PM2.5' }, \r\n        { key: 'pm10', name: 'PM10' }, \r\n        { key: 'so2', name: 'SO₂' }, \r\n        { key: 'no2', name: 'NO₂' }, \r\n        { key: 'co', name: 'CO' }, \r\n        { key: 'o3', name: 'O₃' }, \r\n        { key: 'nh3', name: 'NH₃' }\r\n    ];\r\n\r\n    // === FORECAST CHART CONFIGURATION ===\r\n    const forecastChartData = useMemo(() => {\r\n        if (!forecastData || forecastData.length === 0) return { labels: [], datasets: [] };\r\n        \r\n        const labels = forecastData.map(d => \r\n            new Date(d.day).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\r\n        );\r\n        const dataPoints = forecastData.map(d => d[selectedParameter]);\r\n        \r\n        return { \r\n            labels, \r\n            datasets: [{\r\n                label: selectedParameter.replace('_max', '').toUpperCase(),\r\n                data: dataPoints,\r\n                borderColor: '#3b82f6',\r\n                backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n                fill: true,\r\n                tension: 0.4,\r\n                pointBackgroundColor: '#3b82f6',\r\n                pointBorderColor: '#ffffff',\r\n                pointBorderWidth: 2,\r\n                pointRadius: isMobile ? 4 : 6,\r\n            }]\r\n        };\r\n    }, [forecastData, selectedParameter, isMobile]);\r\n\r\n    const forecastChartOptions = useMemo(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: { \r\n            legend: { display: false },\r\n            tooltip: {\r\n                backgroundColor: 'rgba(255, 255, 255, 0.95)',\r\n                titleColor: '#1f2937',\r\n                bodyColor: '#374151',\r\n                borderColor: '#d1d5db',\r\n                borderWidth: 1,\r\n                cornerRadius: 8,\r\n            }\r\n        },\r\n        scales: { \r\n            x: { \r\n                ticks: { \r\n                    color: '#6b7280', \r\n                    font: { size: isMobile ? 10 : 12 } \r\n                },\r\n                grid: { color: '#f3f4f6' }\r\n            }, \r\n            y: { \r\n                ticks: { \r\n                    color: '#6b7280', \r\n                    font: { size: isMobile ? 10 : 12 } \r\n                },\r\n                grid: { color: '#f3f4f6' }\r\n            } \r\n        },\r\n        elements: {\r\n            point: {\r\n                hoverRadius: isMobile ? 6 : 8\r\n            }\r\n        }\r\n    }), [isMobile]);\r\n\r\n    // Mobile Tab Content Renderer\r\n    const renderMobileTabContent = () => {\r\n        switch (activeTab) {\r\n            case 'stations':\r\n                return (\r\n                    <div className=\"mobile-tab-content\">\r\n                        <div className=\"mobile-section-header\">\r\n                            <h3>\r\n                                <i className=\"fas fa-satellite-dish\"></i>\r\n                                Monitoring Stations\r\n                            </h3>\r\n                        </div>\r\n                        {isLoading ? (\r\n                            <div className=\"mobile-loader\">\r\n                                <div className=\"loading-spinner\"></div>\r\n                                <p>Loading stations...</p>\r\n                            </div>\r\n                        ) : error ? (\r\n                            <div className=\"mobile-error\">\r\n                                <i className=\"fas fa-exclamation-triangle\"></i>\r\n                                <p>Error: {error}</p>\r\n                                <button onClick={fetchRealtimeData} className=\"retry-btn\">\r\n                                    Retry\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"mobile-station-list\">\r\n                                {Object.entries(stations).map(([id, station]) => (\r\n                                    <button \r\n                                        key={id} \r\n                                        className={`mobile-station-card ${selectedStationId === id ? 'active' : ''}`} \r\n                                        onClick={() => handleStationSelect(id)}\r\n                                    >\r\n                                        <div className=\"station-info\">\r\n                                            <h4>{station.station_info.name}</h4>\r\n                                            <div className=\"station-meta\">\r\n                                                <span>Last updated: {station.last_updated_on || 'N/A'}</span>\r\n                                                {['lora-v1', 'loradev2'].includes(id) && (\r\n                                                    <span className=\"real-station-badge\">🟢 Real Sensor</span>\r\n                                                )}\r\n                                                {id.startsWith('temp-') && (\r\n                                                    <span className=\"simulated-station-badge\">🔮 Simulated</span>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"station-aqi-badge\" style={{ backgroundColor: getAQIColor(station.highest_sub_index) }}>\r\n                                            <span className=\"aqi-number\">{Math.round(station.highest_sub_index) || 'N/A'}</span>\r\n                                            <span className=\"aqi-status\">{getAQIStatus(station.highest_sub_index)}</span>\r\n                                        </div>\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                );\r\n\r\n            case 'details':\r\n                return (\r\n                    <div className=\"mobile-tab-content\">\r\n                        {selectedStationData ? (\r\n                            <>\r\n                                <div className=\"mobile-section-header\">\r\n                                    <h3>\r\n                                        <i className=\"fas fa-chart-bar\"></i>\r\n                                        {selectedStationData.station_info.name}\r\n                                    </h3>\r\n                                    <div className=\"mobile-aqi-display\">\r\n                                        <span \r\n                                            className=\"mobile-aqi-value\"\r\n                                            style={{ backgroundColor: getAQIColor(selectedStationData.highest_sub_index) }}\r\n                                        >\r\n                                            {Math.round(selectedStationData.highest_sub_index)}\r\n                                        </span>\r\n                                        <span className=\"mobile-aqi-status\">\r\n                                            {getAQIStatus(selectedStationData.highest_sub_index)}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Current Readings */}\r\n                                <div className=\"mobile-readings-section\">\r\n                                    <h4>Current Readings</h4>\r\n                                    <div className=\"mobile-readings-grid\">\r\n                                        {pollutants.map(p => (\r\n                                            <div className=\"mobile-reading-card\" key={p.key}>\r\n                                                <div className=\"reading-label\">{p.name}</div>\r\n                                                <div className=\"reading-value\">\r\n                                                    {(selectedStationData.averages?.[p.key]?.toFixed(2)) ?? 'N/A'}\r\n                                                    <span>µg/m³</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Forecast */}\r\n                                <div className=\"mobile-forecast-section\">\r\n                                    <div className=\"forecast-header\">\r\n                                        <h4>4-Day Forecast</h4>\r\n                                        <select \r\n                                            className=\"mobile-parameter-selector\"\r\n                                            value={selectedParameter}\r\n                                            onChange={(e) => setSelectedParameter(e.target.value)}\r\n                                        >\r\n                                            <option value=\"pm25_max\">PM2.5</option>\r\n                                            <option value=\"pm10_max\">PM10</option>\r\n                                            <option value=\"so2_max\">SO₂</option>\r\n                                            <option value=\"no2_max\">NO₂</option>\r\n                                            <option value=\"co_max\">CO</option>\r\n                                            <option value=\"o3_max\">O₃</option>\r\n                                            <option value=\"nh3_max\">NH₃</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"mobile-chart-container\">\r\n                                        {isForecastLoading ? (\r\n                                            <div className=\"chart-loader\">\r\n                                                <div className=\"loading-spinner small\"></div>\r\n                                                <p>Loading forecast...</p>\r\n                                            </div>\r\n                                        ) : forecastData.length > 0 ? (\r\n                                            <Line data={forecastChartData} options={forecastChartOptions} />\r\n                                        ) : (\r\n                                            <div className=\"no-data-message\">\r\n                                                <i className=\"fas fa-chart-line\"></i>\r\n                                                <p>No forecast data available</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"mobile-no-selection\">\r\n                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                <h3>Select a Station</h3>\r\n                                <p>Choose a monitoring station to view detailed information</p>\r\n                                <button \r\n                                    className=\"select-station-btn\"\r\n                                    onClick={() => setActiveTab('stations')}\r\n                                >\r\n                                    View Stations\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                );\r\n\r\n            case 'user':\r\n                return (\r\n                    <div className=\"mobile-tab-content\">\r\n                        <div className=\"mobile-section-header\">\r\n                            <h3>\r\n                                <i className=\"fas fa-user-circle\"></i>\r\n                                Your Location\r\n                            </h3>\r\n                        </div>\r\n                        {user && userLocation && userLocationData && nearestStation ? (\r\n                            <div className=\"mobile-user-data\">\r\n                                <div className=\"mobile-user-aqi\">\r\n                                    <div \r\n                                        className=\"user-aqi-circle\"\r\n                                        style={{ backgroundColor: getAQIColor(userLocationData.aqi) }}\r\n                                    >\r\n                                        <span className=\"aqi-number\">\r\n                                            {Math.round(userLocationData.aqi)}\r\n                                        </span>\r\n                                        <span className=\"aqi-label\">AQI</span>\r\n                                    </div>\r\n                                    <div className=\"user-location-info\">\r\n                                        <p><strong>Method:</strong> {userLocationData.is_interpolated ? 'Smart Interpolation (Real Sensors Only)' : 'Nearest Real Station'}</p>\r\n                                        <p><strong>Data Source:</strong> {userLocationData.station_name}</p>\r\n                                        <p><strong>Distance:</strong> {nearestStation.distance.toFixed(1)} km from nearest real sensor</p>\r\n                                        <p><strong>Status:</strong> {userLocationData.is_interpolated ? 'Within sensor range' : 'Beyond interpolation range'}</p>\r\n                                        {userLocationData.stations_used_for_calculation && (\r\n                                            <p><strong>Stations Used:</strong> {userLocationData.stations_used_for_calculation.join(', ')}</p>\r\n                                        )}\r\n                                        {userLocationData.distance_warning && (\r\n                                            <div className=\"distance-warning\">\r\n                                                ⚠️ {userLocationData.distance_warning}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* CORRECTED: Show user's readings with proper indication */}\r\n                                <div className=\"mobile-readings-section\">\r\n                                    <h4>Your Location Readings</h4>\r\n                                    <div className=\"mobile-readings-grid\">\r\n                                        {pollutants.map(p => (\r\n                                            <div className=\"mobile-reading-card\" key={p.key}>\r\n                                                <div className=\"reading-label\">{p.name}</div>\r\n                                                <div className=\"reading-value\">\r\n                                                    {(userLocationData.values?.[p.key]?.toFixed(2)) ?? 'N/A'}\r\n                                                    <span>µg/m³</span>\r\n                                                </div>\r\n                                                {userLocationData.is_interpolated ? (\r\n                                                    <div className=\"interpolated-badge\">🎯 Calculated</div>\r\n                                                ) : (\r\n                                                    <div className=\"nearest-badge\">📍 Nearest</div>\r\n                                                )}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* Distance and methodology info */}\r\n                                <div className=\"user-location-methodology\">\r\n                                    <h4>Data Methodology</h4>\r\n                                    <div className=\"methodology-info\">\r\n                                        {userLocationData.is_interpolated ? (\r\n                                            <div className=\"interpolation-info\">\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">🎯</span>\r\n                                                    <span>Using smart interpolation from real sensors only</span>\r\n                                                </div>\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">📊</span>\r\n                                                    <span>Calculated from lora-v1 and loradev2 stations</span>\r\n                                                </div>\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">📏</span>\r\n                                                    <span>You are within 1km of real sensors</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"nearest-station-info\">\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">📍</span>\r\n                                                    <span>Using nearest real station data</span>\r\n                                                </div>\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">⚠️</span>\r\n                                                    <span>Beyond 1km from sensors - no interpolation</span>\r\n                                                </div>\r\n                                                <div className=\"info-item\">\r\n                                                    <span className=\"info-icon\">📏</span>\r\n                                                    <span>{nearestStation.distance.toFixed(1)}km from nearest real sensor</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : !user ? (\r\n                            <div className=\"mobile-login-prompt\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <h4>Login Required</h4>\r\n                                <p>Login to view personalized AQI data for your location</p>\r\n                                <Link to=\"/login\" className=\"mobile-login-btn\">\r\n                                    <i className=\"fas fa-sign-in-alt\"></i>\r\n                                    Login Now\r\n                                </Link>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"mobile-location-prompt\">\r\n                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                <h4>Enable Location</h4>\r\n                                <p>Get personalized AQI data calculated from real sensors for your current location</p>\r\n                                <button \r\n                                    className=\"mobile-location-btn\"\r\n                                    onClick={trackUserLocation}\r\n                                    disabled={isLocationLoading}\r\n                                >\r\n                                    {isLocationLoading ? (\r\n                                        <>\r\n                                            <i className=\"fas fa-spinner fa-spin\"></i>\r\n                                            Getting Location...\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <i className=\"fas fa-crosshairs\"></i>\r\n                                            Get My Location\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            {/* Enhanced Navbar */}\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-content\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                                {/* 2. USE THE IMPORTED VARIABLE */}\r\n                                <img src={logoImage} alt=\"AQM Logo\" width={isMobileView ? \"32\" : \"40\"} height={isMobileView ? \"32\" : \"40\"} />\r\n                                AirAware\r\n                              </Link>\r\n                    \r\n                    {!isMobile && (\r\n                        <div className=\"nav-center\">\r\n                            <ul className=\"nav-links\">\r\n                                <li><Link to=\"/\" className=\"nav-link\">Home</Link></li>\r\n                                <li><Link to=\"/map\" className=\"nav-link active\">Live Map</Link></li>\r\n                                {user && (\r\n                                    <>\r\n                                        <li><Link to=\"/dashboard\" className=\"nav-link\">Profile</Link></li>\r\n                                        <li><Link to=\"/add-family\" className=\"nav-link\">Add Family</Link></li>\r\n                                    </>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"nav-right\">\r\n                        {user ? (\r\n                            <div className=\"user-menu\">\r\n                                {!isMobile && (\r\n                                    <div className=\"user-info\">\r\n                                        <div className=\"user-avatar\">\r\n                                            <i className=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <span className=\"user-name\">{user.name}</span>\r\n                                    </div>\r\n                                )}\r\n                                <button onClick={handleLogout} className=\"logout-btn\">\r\n                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                    {!isMobile && 'Logout'}\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <Link to=\"/login\" className=\"login-btn\">\r\n                                <i className=\"fas fa-sign-in-alt\"></i>\r\n                                {!isMobile && 'Login'}\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {/* Main Content */}\r\n            <div className=\"main-content\">\r\n                {/* Map Container */}\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                    \r\n                    {/* Map Controls */}\r\n                    <button \r\n                        onClick={trackUserLocation} \r\n                        className={`my-location-btn ${isLocationLoading ? 'loading' : ''}`}\r\n                        title={user ? \"Find My Location\" : \"Login to view your location\"}\r\n                        disabled={isLocationLoading}\r\n                    >\r\n                        {isLocationLoading ? (\r\n                            <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        ) : (\r\n                            <i className=\"fas fa-crosshairs\"></i>\r\n                        )}\r\n                    </button>\r\n\r\n                    {isMobile && (\r\n                        <button \r\n                            className=\"mobile-menu-toggle\"\r\n                            onClick={() => setShowMobileMenu(!showMobileMenu)}\r\n                        >\r\n                            <i className={`fas ${showMobileMenu ? 'fa-times' : 'fa-bars'}`}></i>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Desktop Panels */}\r\n                {!isMobile && (\r\n                    <>\r\n                        {/* LEFT PANEL - User Data + Station List */}\r\n                        <div className=\"data-panel\">\r\n                            <div className=\"data-panel-content\">\r\n                                {/* CORRECTED: User Location Panel with real station indication */}\r\n                                {user && userLocation && userLocationData && nearestStation && (\r\n                                    <div className=\"user-location-panel\">\r\n                                        <div className=\"user-location-header\">\r\n                                            <i className=\"fas fa-map-marker-alt\"></i>\r\n                                            <span>AQI at Your Location</span>\r\n                                        </div>\r\n                                        <div className=\"user-location-body\">\r\n                                            <div className=\"user-aqi-value\" style={{ color: getAQIColor(userLocationData.aqi) }}>\r\n                                                {Math.round(userLocationData.aqi)}\r\n                                            </div>\r\n                                            <div className=\"user-location-details\">\r\n                                                <div className=\"location-method\">\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        '🎯 Smart Interpolation from Real Sensors Only' : \r\n                                                        '📍 Nearest Real Station Data'\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"nearest-station\">\r\n                                                    Data source: {userLocationData.station_name}\r\n                                                </div>\r\n                                                <div className=\"distance\">\r\n                                                    Distance to nearest real sensor: {nearestStation.distance.toFixed(1)} km\r\n                                                </div>\r\n                                                <div className=\"data-quality\">\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        `🎯 Calculated for your exact location using lora-v1 and loradev2` : \r\n                                                        `📍 Direct reading from ${userLocationData.nearest_station_name}`\r\n                                                    }\r\n                                                </div>\r\n                                                {userLocationData.distance_warning && (\r\n                                                    <div className=\"distance-warning\">\r\n                                                        ⚠️ {userLocationData.distance_warning}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        {/* CORRECTED: Show user's specific readings with proper source indication */}\r\n                                        <div className=\"user-readings-summary\">\r\n                                            <h4>Your Location Readings</h4>\r\n                                            <div className=\"readings-mini-grid\">\r\n                                                <div className=\"mini-reading\">\r\n                                                    <span>PM2.5:</span>\r\n                                                    <span>{userLocationData.values?.pm25?.toFixed(1) || 'N/A'}</span>\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        <span className=\"calc-badge\">🎯</span> : \r\n                                                        <span className=\"nearest-badge\">📍</span>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"mini-reading\">\r\n                                                    <span>PM10:</span>\r\n                                                    <span>{userLocationData.values?.pm10?.toFixed(1) || 'N/A'}</span>\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        <span className=\"calc-badge\">🎯</span> : \r\n                                                        <span className=\"nearest-badge\">📍</span>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"mini-reading\">\r\n                                                    <span>NO₂:</span>\r\n                                                    <span>{userLocationData.values?.no2?.toFixed(1) || 'N/A'}</span>\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        <span className=\"calc-badge\">🎯</span> : \r\n                                                        <span className=\"nearest-badge\">📍</span>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"mini-reading\">\r\n                                                    <span>O₃:</span>\r\n                                                    <span>{userLocationData.values?.o3?.toFixed(1) || 'N/A'}</span>\r\n                                                    {userLocationData.is_interpolated ? \r\n                                                        <span className=\"calc-badge\">🎯</span> : \r\n                                                        <span className=\"nearest-badge\">📍</span>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"calc-note\">\r\n                                                {userLocationData.is_interpolated ? \r\n                                                    '🎯 Interpolated values using only real sensor data (lora-v1, loradev2)' :\r\n                                                    `📍 Direct values from nearest real sensor (${userLocationData.nearest_station_name})`\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Login Prompt */}\r\n                                {!user && (\r\n                                    <div className=\"login-prompt-panel\">\r\n                                        <div className=\"login-prompt-header\">\r\n                                            <i className=\"fas fa-lock\"></i>\r\n                                            <span>Personal Location Data</span>\r\n                                        </div>\r\n                                        <div className=\"login-prompt-body\">\r\n                                            <p>Login to view AQI data at your current location with personalized insights calculated from real sensors.</p>\r\n                                            <Link to=\"/login\" className=\"login-prompt-btn\">\r\n                                                <i className=\"fas fa-sign-in-alt\"></i>\r\n                                                Login to Access\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Station List Section */}\r\n                                <div className=\"station-list-section\">\r\n                                    <div className=\"station-list-header\">\r\n                                        <h2 className=\"section-title\">\r\n                                            <i className=\"fas fa-satellite-dish\"></i> \r\n                                            Monitoring Stations\r\n                                        </h2>\r\n                                    </div>\r\n                                    \r\n                                    {isLoading ? (\r\n                                        <div className=\"panel-loader\">\r\n                                            <div className=\"loading-spinner\"></div>\r\n                                            <p>Loading stations...</p>\r\n                                        </div>\r\n                                    ) : error ? (\r\n                                        <div className=\"error-message\">\r\n                                            <i className=\"fas fa-exclamation-triangle\"></i>\r\n                                            <p>Error: {error}</p>\r\n                                            <button onClick={fetchRealtimeData} className=\"retry-btn\">\r\n                                                <i className=\"fas fa-redo\"></i>\r\n                                                Retry\r\n                                            </button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"station-selector\">\r\n                                            {Object.entries(stations).map(([id, station]) => (\r\n                                                <button \r\n                                                    key={id} \r\n                                                    className={`station-btn ${selectedStationId === id ? 'active' : ''}`} \r\n                                                    onClick={() => handleStationSelect(id)}\r\n                                                >\r\n                                                    <div className=\"station-btn-content\">\r\n                                                        <div className=\"station-name-container\">\r\n                                                            <span className=\"station-name\">{station.station_info.name}</span>\r\n                                                            {['lora-v1', 'loradev2'].includes(id) && (\r\n                                                                <span className=\"real-station-indicator\">🟢</span>\r\n                                                            )}\r\n                                                            {id.startsWith('temp-') && (\r\n                                                                <span className=\"simulated-station-indicator\">🔮</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <span \r\n                                                            className=\"station-aqi\" \r\n                                                            style={{ backgroundColor: getAQIColor(station.highest_sub_index) }}\r\n                                                        >\r\n                                                            {Math.round(station.highest_sub_index) || 'N/A'}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <div className=\"station-type-label\">\r\n                                                        {['lora-v1', 'loradev2'].includes(id) ? 'Real Sensor' : 'Simulated'}\r\n                                                    </div>\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* RIGHT PANEL - Station Details */}\r\n                        <div className=\"station-details-panel\">\r\n                            <div className=\"station-details-content\">\r\n                                {selectedStationData ? (\r\n                                    <div className=\"station-details\">\r\n                                        {/* Station Header */}\r\n                                        <div className=\"station-header\">\r\n                                            <h3>{selectedStationData.station_info.name}</h3>\r\n                                            <div className=\"station-badges\">\r\n                                                {['lora-v1', 'loradev2'].includes(selectedStationId) && (\r\n                                                    <span className=\"real-sensor-badge\">🟢 Real Sensor</span>\r\n                                                )}\r\n                                                {selectedStationId.startsWith('temp-') && (\r\n                                                    <span className=\"simulated-sensor-badge\">🔮 Simulated</span>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* AQI Section */}\r\n                                        <div className=\"aqi-section\">\r\n                                            <div className=\"current-aqi\">\r\n                                                <span className=\"aqi-label\">Current AQI</span>\r\n                                                <span \r\n                                                    className=\"aqi-value\"\r\n                                                    style={{ color: getAQIColor(selectedStationData.highest_sub_index) }}\r\n                                                >\r\n                                                    {Math.round(selectedStationData.highest_sub_index)}\r\n                                                </span>\r\n                                                <span className=\"aqi-status\">\r\n                                                    {getAQIStatus(selectedStationData.highest_sub_index)}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Current Readings Section */}\r\n                                        <div className=\"readings-section\">\r\n                                            <h4 className=\"section-title\">\r\n                                                <i className=\"fas fa-chart-bar\"></i>\r\n                                                Current Readings\r\n                                            </h4>\r\n                                            <div className=\"pollutant-grid\">\r\n                                                {pollutants.map(p => (\r\n                                                    <div className=\"metric-card\" key={p.key}>\r\n                                                        <div className=\"metric-label\">{p.name}</div>\r\n                                                        <div className=\"metric-value\">\r\n                                                            {(selectedStationData.averages?.[p.key]?.toFixed(2)) ?? 'N/A'}\r\n                                                            <span className=\"metric-unit\">µg/m³</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Enhanced Forecast Section */}\r\n                                        <div className=\"forecast-section\">\r\n                                            <div className=\"forecast-header\">\r\n                                                <h4 className=\"section-title\">\r\n                                                    <i className=\"fas fa-chart-line\"></i>\r\n                                                    4-Day Forecast\r\n                                                </h4>\r\n                                                <select \r\n                                                    className=\"parameter-selector\"\r\n                                                    value={selectedParameter}\r\n                                                    onChange={(e) => setSelectedParameter(e.target.value)}\r\n                                                >\r\n                                                    <option value=\"pm25_max\">PM2.5</option>\r\n                                                    <option value=\"pm10_max\">PM10</option>\r\n                                                    <option value=\"so2_max\">SO₂</option>\r\n                                                    <option value=\"no2_max\">NO₂</option>\r\n                                                    <option value=\"co_max\">CO</option>\r\n                                                    <option value=\"o3_max\">O₃</option>\r\n                                                    <option value=\"nh3_max\">NH₃</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            \r\n                                            {forecastUpdatedAt && (\r\n                                                <div className=\"forecast-update-time\">\r\n                                                    Last updated: {new Date(forecastUpdatedAt).toLocaleString()}\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            <div className=\"chart-container\">\r\n                                                {isForecastLoading ? (\r\n                                                    <div className=\"forecast-loader\">\r\n                                                        <div className=\"loading-spinner small\"></div>\r\n                                                        <p>Loading forecast...</p>\r\n                                                    </div>\r\n                                                ) : forecastData.length > 0 ? (\r\n                                                    <Line data={forecastChartData} options={forecastChartOptions} />\r\n                                                ) : (\r\n                                                    <div className=\"no-data-message\">\r\n                                                        <i className=\"fas fa-chart-line\"></i>\r\n                                                        <p>No forecast data available</p>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"no-station-selected\">\r\n                                        <div className=\"no-station-message\">\r\n                                            <i className=\"fas fa-satellite-dish\"></i>\r\n                                            <h3>Select a Station</h3>\r\n                                            <p>Choose a monitoring station from the left panel or click on a map marker to view detailed air quality data, current readings, and forecast information.</p>\r\n                                            <div className=\"station-types-info\">\r\n                                                <div className=\"station-type-info\">\r\n                                                    <span className=\"type-indicator real\">🟢</span>\r\n                                                    <span>Real sensors are used for interpolation calculations</span>\r\n                                                </div>\r\n                                                <div className=\"station-type-info\">\r\n                                                    <span className=\"type-indicator simulated\">🔮</span>\r\n                                                    <span>Simulated stations for network visualization</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {/* Mobile Bottom Sheet */}\r\n                {isMobile && (\r\n                    <div className={`mobile-bottom-sheet ${showMobileMenu ? 'open' : ''}`}>\r\n                        {/* Mobile Tab Navigation */}\r\n                        <div className=\"mobile-tab-nav\">\r\n                            <button \r\n                                className={`mobile-tab-btn ${activeTab === 'stations' ? 'active' : ''}`}\r\n                                onClick={() => setActiveTab('stations')}\r\n                            >\r\n                                <i className=\"fas fa-satellite-dish\"></i>\r\n                                <span>Stations</span>\r\n                            </button>\r\n                            <button \r\n                                className={`mobile-tab-btn ${activeTab === 'details' ? 'active' : ''}`}\r\n                                onClick={() => setActiveTab('details')}\r\n                            >\r\n                                <i className=\"fas fa-chart-bar\"></i>\r\n                                <span>Details</span>\r\n                            </button>\r\n                            <button \r\n                                className={`mobile-tab-btn ${activeTab === 'user' ? 'active' : ''}`}\r\n                                onClick={() => setActiveTab('user')}\r\n                            >\r\n                                <i className=\"fas fa-user-circle\"></i>\r\n                                <span>My Data</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Mobile Tab Content */}\r\n                        <div className=\"mobile-tab-content-wrapper\">\r\n                            {renderMobileTabContent()}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Location Prompt Modal */}\r\n            {showLocationPrompt && (\r\n                <div className=\"modal-overlay\" onClick={() => setShowLocationPrompt(false)}>\r\n                    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                        <div className=\"modal-header\">\r\n                            <h3><i className=\"fas fa-map-marker-alt\"></i> Location Access</h3>\r\n                            <button \r\n                                className=\"modal-close\" \r\n                                onClick={() => setShowLocationPrompt(false)}\r\n                            >\r\n                                <i className=\"fas fa-times\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>To view AQI data calculated from real sensors at your current location, please login first.</p>\r\n                            <div className=\"modal-actions\">\r\n                                <Link to=\"/login\" className=\"modal-btn primary\">\r\n                                    <i className=\"fas fa-sign-in-alt\"></i>\r\n                                    Login\r\n                                </Link>\r\n                                <button \r\n                                    className=\"modal-btn secondary\" \r\n                                    onClick={() => setShowLocationPrompt(false)}\r\n                                >\r\n                                    Maybe Later\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}