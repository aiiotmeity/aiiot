{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './css/MapPage.css';\n\n// Helper function to get AQI color\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 150) return '#ef4444';\n  if (aqi <= 200) return '#dc2626';\n  if (aqi <= 300) return '#7c2d12';\n  return '#4c1d95';\n};\n\n// Main Component\nconst MapPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState('lora-v1');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapStatus, setMapStatus] = useState('loading-library'); // More descriptive status\n\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Effect 1: Load Leaflet library and initialize the map\n  useEffect(() => {\n    let isMounted = true;\n    const initializeMap = L => {\n      if (mapRef.current && !mapRef.current._leaflet_id) {\n        console.log(\"MapPage: Initializing Leaflet map...\");\n        setMapStatus('initializing-map');\n        const mapInstance = L.map(mapRef.current, {\n          center: [10.176, 76.430],\n          zoom: 15\n        });\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\n        if (isMounted) {\n          setMap(mapInstance);\n          setMapStatus('ready');\n          console.log(\"MapPage: Map is ready.\");\n        }\n      }\n    };\n    if (window.L) {\n      initializeMap(window.L);\n    } else {\n      console.log(\"MapPage: Loading Leaflet library...\");\n      const script = document.createElement('script');\n      script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\n      script.async = true;\n      document.head.appendChild(script);\n      const link = document.createElement('link');\n      link.rel = \"stylesheet\";\n      link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\n      document.head.appendChild(link);\n      script.onload = () => {\n        if (isMounted) {\n          console.log(\"MapPage: Leaflet library loaded.\");\n          initializeMap(window.L);\n        }\n      };\n      script.onerror = () => {\n        if (isMounted) {\n          setError(\"Failed to load map library. Please check your internet connection.\");\n          setMapStatus('error');\n        }\n      };\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  // Effect 2: Fetch data once the map is ready\n  useEffect(() => {\n    if (mapStatus !== 'ready') return;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      console.error(\"Fetch request timed out after 15 seconds.\");\n      controller.abort();\n    }, 15000); // 15-second timeout\n\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      console.log(\"MapPage: Fetching station data...\");\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/map/`, {\n          signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Server responded with ${response.status}: ${errorText}`);\n        }\n        const data = await response.json();\n        if (data && data.stations) {\n          console.log(\"MapPage: Station data fetched successfully.\");\n          setStations(data.stations);\n        } else {\n          throw new Error('Received invalid data structure from server.');\n        }\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          setError('Request timed out. The server might be slow or offline.');\n        } else {\n          setError(err.message);\n        }\n        console.error(\"Fetch data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 300000);\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(interval);\n    };\n  }, [mapStatus, API_BASE_URL]);\n\n  // Effect 3: Update map markers when station data changes\n  useEffect(() => {\n    if (!map || Object.keys(stations).length === 0) return;\n    Object.entries(stations).forEach(([id, station]) => {\n      var _station$station_info, _station$station_info2;\n      if (!(station !== null && station !== void 0 && (_station$station_info = station.station_info) !== null && _station$station_info !== void 0 && _station$station_info.lat) || !(station !== null && station !== void 0 && (_station$station_info2 = station.station_info) !== null && _station$station_info2 !== void 0 && _station$station_info2.lng)) return;\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\n        markersRef.current[id].setStyle({\n          fillColor: getAQIColor(aqi)\n        });\n      } else {\n        const marker = window.L.circleMarker([lat, lng], {\n          radius: 15,\n          fillColor: getAQIColor(aqi),\n          color: '#ffffff',\n          weight: 3,\n          opacity: 1,\n          fillOpacity: 0.8\n        }).addTo(map);\n        marker.bindPopup(popupContent);\n        marker.on('click', () => setSelectedStationId(id));\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [map, stations]);\n  const selectedStationData = stations[selectedStationId];\n\n  // More descriptive loading and error states\n  if (mapStatus !== 'ready') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Loading Map (\", mapStatus, \")...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading && Object.keys(stations).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fetching Station Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        ref: mapRef,\n        className: \"map-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel open\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-selector\",\n          children: Object.keys(stations).map(stationId => {\n            var _stations$stationId, _stations$stationId$s;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === stationId ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(stationId),\n              children: ((_stations$stationId = stations[stationId]) === null || _stations$stationId === void 0 ? void 0 : (_stations$stationId$s = _stations$stationId.station_info) === null || _stations$stationId$s === void 0 ? void 0 : _stations$stationId$s.name) || stationId\n            }, stationId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: selectedStationData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-value\",\n              style: {\n                color: getAQIColor(selectedStationData.highest_sub_index)\n              },\n              children: Math.round(selectedStationData.highest_sub_index) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-status-text\",\n              children: [\"Air Quality Index (\", selectedStationData.aqi_status || 'Unknown', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metrics-grid\",\n            children: ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => {\n              var _selectedStationData$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-label\",\n                  children: key.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-value\",\n                  children: (_selectedStationData$ = selectedStationData.averages) !== null && _selectedStationData$ !== void 0 && _selectedStationData$[key] ? Math.round(selectedStationData.averages[key]) : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-title\",\n              children: \"4-Day Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: selectedStationData.forecast_data.map(d => d.day),\n                  datasets: [{\n                    label: 'PM2.5 Forecast',\n                    data: selectedStationData.forecast_data.map(d => d.pm25_max),\n                    borderColor: '#3b82f6',\n                    backgroundColor: 'rgba(59, 130, 246, 0.2)',\n                    tension: 0.1\n                  }]\n                },\n                options: {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  legend: {\n                    display: false\n                  },\n                  scales: {\n                    yAxes: [{\n                      ticks: {\n                        fontColor: '#94a3b8',\n                        beginAtZero: true\n                      }\n                    }],\n                    xAxes: [{\n                      ticks: {\n                        fontColor: '#94a3b8'\n                      }\n                    }]\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Forecast data is not available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          style: {\n            margin: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"iSfRHdS6VzpGcYyNShvU2fnEm3E=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","getAQIColor","aqi","undefined","MapPage","_s","map","setMap","stations","setStations","selectedStationId","setSelectedStationId","loading","setLoading","error","setError","mapStatus","setMapStatus","mapRef","markersRef","API_BASE_URL","process","env","REACT_APP_API_URL","isMounted","initializeMap","L","current","_leaflet_id","console","log","mapInstance","center","zoom","tileLayer","addTo","window","script","document","createElement","src","async","head","appendChild","link","rel","href","onload","onerror","controller","AbortController","timeoutId","setTimeout","abort","fetchData","response","fetch","signal","clearTimeout","ok","errorText","text","Error","status","data","json","err","name","message","interval","setInterval","clearInterval","Object","keys","length","entries","forEach","id","station","_station$station_info","_station$station_info2","station_info","lat","lng","highest_sub_index","popupContent","Math","round","setLatLng","setPopupContent","setStyle","fillColor","marker","circleMarker","radius","color","weight","opacity","fillOpacity","bindPopup","on","selectedStationData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","stationId","_stations$stationId","_stations$stationId$s","onClick","style","aqi_status","key","_selectedStationData$","toUpperCase","averages","forecast_data","height","labels","d","day","datasets","label","pm25_max","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","legend","display","scales","yAxes","ticks","fontColor","beginAtZero","xAxes","margin","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './css/MapPage.css';\r\n\r\n// Helper function to get AQI color\r\nconst getAQIColor = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return '#6b7280';\r\n  if (aqi <= 50) return '#10b981';\r\n  if (aqi <= 100) return '#f59e0b';\r\n  if (aqi <= 150) return '#ef4444';\r\n  if (aqi <= 200) return '#dc2626';\r\n  if (aqi <= 300) return '#7c2d12';\r\n  return '#4c1d95';\r\n};\r\n\r\n// Main Component\r\nconst MapPage = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [stations, setStations] = useState({});\r\n  const [selectedStationId, setSelectedStationId] = useState('lora-v1');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [mapStatus, setMapStatus] = useState('loading-library'); // More descriptive status\r\n\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // Effect 1: Load Leaflet library and initialize the map\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const initializeMap = (L) => {\r\n      if (mapRef.current && !mapRef.current._leaflet_id) {\r\n        console.log(\"MapPage: Initializing Leaflet map...\");\r\n        setMapStatus('initializing-map');\r\n        const mapInstance = L.map(mapRef.current, {\r\n          center: [10.176, 76.430],\r\n          zoom: 15,\r\n        });\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\r\n        if (isMounted) {\r\n          setMap(mapInstance);\r\n          setMapStatus('ready');\r\n          console.log(\"MapPage: Map is ready.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    if (window.L) {\r\n      initializeMap(window.L);\r\n    } else {\r\n      console.log(\"MapPage: Loading Leaflet library...\");\r\n      const script = document.createElement('script');\r\n      script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\r\n      script.async = true;\r\n      document.head.appendChild(script);\r\n\r\n      const link = document.createElement('link');\r\n      link.rel = \"stylesheet\";\r\n      link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\r\n      document.head.appendChild(link);\r\n\r\n      script.onload = () => {\r\n        if (isMounted) {\r\n          console.log(\"MapPage: Leaflet library loaded.\");\r\n          initializeMap(window.L);\r\n        }\r\n      };\r\n      script.onerror = () => {\r\n        if (isMounted) {\r\n          setError(\"Failed to load map library. Please check your internet connection.\");\r\n          setMapStatus('error');\r\n        }\r\n      };\r\n    }\r\n\r\n    return () => { isMounted = false; };\r\n  }, []);\r\n\r\n  // Effect 2: Fetch data once the map is ready\r\n  useEffect(() => {\r\n    if (mapStatus !== 'ready') return;\r\n\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => {\r\n        console.error(\"Fetch request timed out after 15 seconds.\");\r\n        controller.abort();\r\n    }, 15000); // 15-second timeout\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log(\"MapPage: Fetching station data...\");\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/map/`, { signal: controller.signal });\r\n        clearTimeout(timeoutId);\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`Server responded with ${response.status}: ${errorText}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data && data.stations) {\r\n          console.log(\"MapPage: Station data fetched successfully.\");\r\n          setStations(data.stations);\r\n        } else {\r\n          throw new Error('Received invalid data structure from server.');\r\n        }\r\n      } catch (err) {\r\n        if (err.name === 'AbortError') {\r\n            setError('Request timed out. The server might be slow or offline.');\r\n        } else {\r\n            setError(err.message);\r\n        }\r\n        console.error(\"Fetch data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 300000);\r\n    return () => {\r\n        clearTimeout(timeoutId);\r\n        clearInterval(interval);\r\n    };\r\n  }, [mapStatus, API_BASE_URL]);\r\n\r\n  // Effect 3: Update map markers when station data changes\r\n  useEffect(() => {\r\n    if (!map || Object.keys(stations).length === 0) return;\r\n\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      if (!station?.station_info?.lat || !station?.station_info?.lng) return;\r\n\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\r\n\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\r\n        markersRef.current[id].setStyle({ fillColor: getAQIColor(aqi) });\r\n      } else {\r\n        const marker = window.L.circleMarker([lat, lng], {\r\n          radius: 15,\r\n          fillColor: getAQIColor(aqi),\r\n          color: '#ffffff',\r\n          weight: 3,\r\n          opacity: 1,\r\n          fillOpacity: 0.8\r\n        }).addTo(map);\r\n\r\n        marker.bindPopup(popupContent);\r\n        marker.on('click', () => setSelectedStationId(id));\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [map, stations]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n\r\n  // More descriptive loading and error states\r\n  if (mapStatus !== 'ready') {\r\n    return <div className=\"map-loading\"><div className=\"loading-spinner\"></div><p>Loading Map ({mapStatus})...</p></div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"map-loading\"><p className=\"error-message\">Error: {error}</p></div>;\r\n  }\r\n  if (loading && Object.keys(stations).length === 0) {\r\n    return <div className=\"map-loading\"><div className=\"loading-spinner\"></div><p>Fetching Station Data...</p></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <div className=\"map-container\">\r\n        <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n      </div>\r\n      <div className=\"details-panel open\">\r\n        <div className=\"panel-header\">\r\n          <div className=\"station-selector\">\r\n            {Object.keys(stations).map(stationId => (\r\n              <button\r\n                key={stationId}\r\n                className={`station-btn ${selectedStationId === stationId ? 'active' : ''}`}\r\n                onClick={() => setSelectedStationId(stationId)}\r\n              >\r\n                {stations[stationId]?.station_info?.name || stationId}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"panel-content\">\r\n          {selectedStationData ? (\r\n            <>\r\n              <div className=\"aqi-overview\">\r\n                <div className=\"aqi-value\" style={{ color: getAQIColor(selectedStationData.highest_sub_index) }}>\r\n                  {Math.round(selectedStationData.highest_sub_index) || 'N/A'}\r\n                </div>\r\n                <div className=\"aqi-status-text\">Air Quality Index ({selectedStationData.aqi_status || 'Unknown'})</div>\r\n              </div>\r\n              <div className=\"metrics-grid\">\r\n                {['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => (\r\n                  <div key={key} className=\"metric-card\">\r\n                    <div className=\"metric-label\">{key.toUpperCase()}</div>\r\n                    <div className=\"metric-value\">{selectedStationData.averages?.[key] ? Math.round(selectedStationData.averages[key]) : '--'}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"forecast-section\">\r\n                <div className=\"forecast-title\">4-Day Forecast</div>\r\n                {selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? (\r\n                  <div style={{ height: '200px' }}>\r\n                    <Line\r\n                      data={{\r\n                        labels: selectedStationData.forecast_data.map(d => d.day),\r\n                        datasets: [{\r\n                          label: 'PM2.5 Forecast',\r\n                          data: selectedStationData.forecast_data.map(d => d.pm25_max),\r\n                          borderColor: '#3b82f6',\r\n                          backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                          tension: 0.1\r\n                        }]\r\n                      }}\r\n                      options={{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        legend: { display: false },\r\n                        scales: {\r\n                          yAxes: [{ ticks: { fontColor: '#94a3b8', beginAtZero: true } }],\r\n                          xAxes: [{ ticks: { fontColor: '#94a3b8' } }]\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <p>Forecast data is not available.</p>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"loading-spinner\" style={{ margin: 'auto' }}></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}