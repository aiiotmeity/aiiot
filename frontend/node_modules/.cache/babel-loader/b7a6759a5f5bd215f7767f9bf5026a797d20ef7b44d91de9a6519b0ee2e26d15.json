{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback,useMemo}from'react';import{Link,useNavigate}from'react-router-dom';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';import{useAuth}from'../App';import'./css/MapPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);// --- Helper Functions ---\nconst getAQIColor=aqi=>{if(aqi===null||aqi===undefined)return'#6b7280';if(aqi<=50)return'#10b981';if(aqi<=100)return'#f59e0b';if(aqi<=200)return'#ef4444';return'#7c2d12';};const getAQIStatus=aqi=>{if(aqi===null||aqi===undefined)return'Unknown';if(aqi<=50)return'Good';if(aqi<=100)return'Moderate';if(aqi<=150)return'Unhealthy';if(aqi<=200)return'Severe';if(aqi<=300)return'Very Severe';return'Hazardous';};const calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// km\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};const createAqiIcon=aqi=>{const color=getAQIColor(aqi);const iconHtml=`<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi)||'N/A'}</div></div>`;return window.L.divIcon({html:iconHtml,className:'custom-div-icon',iconSize:[40,40],iconAnchor:[20,40]});};const MapPage=()=>{var _stations$nearestStat,_stations$nearestStat2,_forecastChartData$la;// === STATE MANAGEMENT ===\nconst[mapInstance,setMapInstance]=useState(null);const[stations,setStations]=useState({});const[selectedStationId,setSelectedStationId]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[isPanelOpen,setIsPanelOpen]=useState(false);const[forecastData,setForecastData]=useState([]);const[isForecastLoading,setIsForecastLoading]=useState(false);const[selectedParameter,setSelectedParameter]=useState('pm25_max');const[forecastUpdatedAt,setForecastUpdatedAt]=useState(null);// User location states\nconst[userLocation,setUserLocation]=useState(null);const[interpolatedData,setInterpolatedData]=useState(null);const[nearestStation,setNearestStation]=useState(null);const[showLocationPrompt,setShowLocationPrompt]=useState(false);const[isLocationLoading,setIsLocationLoading]=useState(false);// Responsive states\nconst[isMobile,setIsMobile]=useState(window.innerWidth<=768);// Refs\nconst mapRef=useRef(null);const markersRef=useRef({});const userLocationMarkerRef=useRef(null);// Hooks\nconst navigate=useNavigate();const{user,logout}=useAuth();const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// === RESPONSIVE DETECTION ===\nuseEffect(()=>{const handleResize=()=>{const width=window.innerWidth;setIsMobile(width<=768);if(width<=768&&isPanelOpen){setIsPanelOpen(false);}};window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[isPanelOpen]);// === MAP INITIALIZATION ===\nuseEffect(()=>{let map;if(mapRef.current&&!mapRef.current._leaflet_id){map=window.L.map(mapRef.current,{zoomControl:false,attributionControl:true}).setView([10.176,76.430],13);window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'© OpenStreetMap contributors',className:'map-tiles'}).addTo(map);window.L.control.zoom({position:'topleft'}).addTo(map);setMapInstance(map);}return()=>{if(map)map.remove();};},[]);// === USER LOCATION TRACKING ===\nconst trackUserLocation=useCallback(()=>{if(!user){setShowLocationPrompt(true);return;}if(navigator.geolocation){setIsLocationLoading(true);navigator.geolocation.getCurrentPosition(position=>{const loc={lat:position.coords.latitude,lng:position.coords.longitude};setUserLocation(loc);setIsLocationLoading(false);if(mapInstance){mapInstance.setView(loc,15);const userIcon=window.L.divIcon({html:'<div class=\"user-location-marker\"><i class=\"fas fa-user\"></i></div>',className:'custom-user-icon',iconSize:[30,30],iconAnchor:[15,15]});if(userLocationMarkerRef.current){userLocationMarkerRef.current.setLatLng(loc);}else{userLocationMarkerRef.current=window.L.marker(loc,{icon:userIcon}).addTo(mapInstance);}}},err=>{setIsLocationLoading(false);console.warn(`Geolocation error: ${err.message}`);alert(\"Could not get your location. Please enable location services in your browser.\");});}else{alert(\"Geolocation is not supported by this browser.\");}},[mapInstance,user]);// === DATA FETCHING ===\nconst fetchRealtimeData=useCallback(async()=>{setIsLoading(true);try{const response=await fetch(`${API_BASE_URL}/api/map/realtime/`);if(!response.ok)throw new Error('Failed to fetch data');const data=await response.json();setStations(data.stations);if(!selectedStationId&&Object.keys(data.stations).length>0){setSelectedStationId(Object.keys(data.stations)[0]);}}catch(err){setError(err.message);}finally{setIsLoading(false);}},[API_BASE_URL,selectedStationId]);useEffect(()=>{fetchRealtimeData();const interval=setInterval(fetchRealtimeData,60000);return()=>clearInterval(interval);},[fetchRealtimeData]);// === INTERPOLATED DATA CALCULATION ===\nuseEffect(()=>{if(userLocation&&Object.keys(stations).length>0&&user){let weightedSum=0,weightSum=0,nearestDist=Infinity,nearestId=null;Object.entries(stations).forEach(_ref=>{let[id,station]=_ref;const dist=calculateDistance(userLocation.lat,userLocation.lng,station.station_info.lat,station.station_info.lng);if(dist<nearestDist){nearestDist=dist;nearestId=id;}const weight=1/Math.pow(dist===0?0.001:dist,2);weightedSum+=(station.highest_sub_index||0)*weight;weightSum+=weight;});setNearestStation({id:nearestId,distance:nearestDist});if(weightSum>0){setInterpolatedData({aqi:Math.round(weightedSum/weightSum)});}}},[userLocation,stations,user]);// === FORECAST DATA FETCHING ===\nuseEffect(()=>{if(!selectedStationId)return;const fetchForecast=async()=>{setIsForecastLoading(true);try{const response=await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);if(!response.ok)throw new Error('Failed to fetch forecast');const data=await response.json();setForecastData(data.forecast_data||[]);setForecastUpdatedAt(data.forecast_updated_at||null);}catch(err){console.error(\"Forecast fetch error:\",err);}finally{setIsForecastLoading(false);}};fetchForecast();},[selectedStationId,API_BASE_URL]);// === MAP MARKERS UPDATE ===\nuseEffect(()=>{if(!mapInstance||Object.keys(stations).length===0)return;Object.values(markersRef.current).forEach(marker=>marker.remove());markersRef.current={};Object.entries(stations).forEach(_ref2=>{let[id,station]=_ref2;const{lat,lng}=station.station_info;const marker=window.L.marker([lat,lng],{icon:createAqiIcon(station.highest_sub_index)}).addTo(mapInstance);marker.on('click',()=>{setSelectedStationId(id);setIsPanelOpen(true);mapInstance.setView([lat,lng],15);});markersRef.current[id]=marker;});},[mapInstance,stations]);// === EVENT HANDLERS ===\nconst handleLogout=useCallback(()=>{logout();setUserLocation(null);setInterpolatedData(null);setNearestStation(null);if(userLocationMarkerRef.current){userLocationMarkerRef.current.remove();userLocationMarkerRef.current=null;}},[logout]);const handlePanelToggle=useCallback(()=>{setIsPanelOpen(prev=>!prev);},[]);const handleStationSelect=useCallback(stationId=>{setSelectedStationId(stationId);if(isMobile){setTimeout(()=>setIsPanelOpen(false),500);}},[isMobile]);// === DATA PROCESSING ===\nconst selectedStationData=stations[selectedStationId];const pollutants=[{key:'pm25',name:'PM2.5'},{key:'pm10',name:'PM10'},{key:'so2',name:'SO₂'},{key:'no2',name:'NO₂'},{key:'co',name:'CO'},{key:'o3',name:'O₃'},{key:'nh3',name:'NH₃'}];// === FORECAST CHART CONFIGURATION ===\nconst forecastChartData=useMemo(()=>{if(!forecastData||forecastData.length===0)return{labels:[],datasets:[]};const labels=forecastData.map(d=>new Date(d.day).toLocaleDateString('en-US',{month:'short',day:'numeric'}));const dataPoints=forecastData.map(d=>d[selectedParameter]);return{labels,datasets:[{label:selectedParameter.replace('_max','').toUpperCase(),data:dataPoints,borderColor:'#3b82f6',backgroundColor:'rgba(59, 130, 246, 0.1)',fill:true,tension:0.4,pointBackgroundColor:'#3b82f6',pointBorderColor:'#ffffff',pointBorderWidth:2,pointRadius:isMobile?4:6}]};},[forecastData,selectedParameter,isMobile]);const forecastChartOptions=useMemo(()=>({responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},tooltip:{backgroundColor:'rgba(255, 255, 255, 0.95)',titleColor:'#1f2937',bodyColor:'#374151',borderColor:'#d1d5db',borderWidth:1,cornerRadius:8}},scales:{x:{ticks:{color:'#6b7280',font:{size:isMobile?10:12}},grid:{color:'#f3f4f6'}},y:{ticks:{color:'#6b7280',font:{size:isMobile?10:12}},grid:{color:'#f3f4f6'}}},elements:{point:{hoverRadius:isMobile?6:8}}}),[isMobile]);const getPanelToggleClassName=()=>{if(isMobile){return`panel-toggle panels-closed`;}return`panel-toggle ${isPanelOpen?'panels-open':'panels-closed'}`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"map-page\",children:[/*#__PURE__*/_jsx(\"nav\",{className:\"navbar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/\",className:\"navbar-brand\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/aqi.webp\",alt:\"Logo\",width:\"32\",height:\"32\"}),/*#__PURE__*/_jsx(\"span\",{children:\"AirAware\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"nav-center\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-link\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/map\",className:\"nav-link active\",children:\"Live Map\"})}),user&&/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"nav-link\",children:\"Dashboard\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"nav-right\",children:user?/*#__PURE__*/_jsxs(\"div\",{className:\"user-menu\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:user.name})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-out-alt\"}),!isMobile&&'Logout']})]}):/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"login-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),!isMobile&&'Login']})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"map\",ref:mapRef,className:\"map-element\"}),/*#__PURE__*/_jsx(\"button\",{onClick:trackUserLocation,className:`my-location-btn ${isLocationLoading?'loading':''}`,title:user?\"Find My Location\":\"Login to view your location\",disabled:isLocationLoading,children:isLocationLoading?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner fa-spin\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-crosshairs\"})}),/*#__PURE__*/_jsx(\"button\",{className:getPanelToggleClassName(),onClick:handlePanelToggle,title:isPanelOpen?\"Hide Panels\":\"Show Panels\",children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${isPanelOpen?'fa-times':'fa-bars'}`})})]}),/*#__PURE__*/_jsx(\"div\",{className:`data-panel ${isPanelOpen?'open':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"data-panel-content\",children:[user&&userLocation&&interpolatedData&&nearestStation&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),/*#__PURE__*/_jsx(\"span\",{children:\"AQI at Your Location\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-aqi-value\",style:{color:getAQIColor(interpolatedData.aqi)},children:nearestStation.distance<1?(_stations$nearestStat=stations[nearestStation.id])===null||_stations$nearestStat===void 0?void 0:_stations$nearestStat.highest_sub_index:interpolatedData.aqi}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-location-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"location-method\",children:nearestStation.distance<1?'Using nearest station':'Interpolated value'}),/*#__PURE__*/_jsxs(\"div\",{className:\"nearest-station\",children:[\"Nearest: \",(_stations$nearestStat2=stations[nearestStation.id])===null||_stations$nearestStat2===void 0?void 0:_stations$nearestStat2.station_info.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"distance\",children:[\"Distance: \",nearestStation.distance.toFixed(1),\" km\"]})]})]})]}),!user&&/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-lock\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Personal Location Data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-prompt-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Login to view AQI data at your current location with personalized insights.\"}),/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"login-prompt-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),\"Login to Access\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-list-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"station-list-header\",children:/*#__PURE__*/_jsxs(\"h2\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),\"Monitoring Stations\"]})}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"panel-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading stations...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-triangle\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchRealtimeData,className:\"retry-btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-redo\"}),\"Retry\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"station-selector\",children:Object.entries(stations).map(_ref3=>{let[id,station]=_ref3;return/*#__PURE__*/_jsx(\"button\",{className:`station-btn ${selectedStationId===id?'active':''}`,onClick:()=>handleStationSelect(id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"station-btn-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"station-name\",children:station.station_info.name}),/*#__PURE__*/_jsx(\"span\",{className:\"station-aqi\",style:{backgroundColor:getAQIColor(station.highest_sub_index)},children:Math.round(station.highest_sub_index)||'N/A'})]})},id);})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:`station-details-panel ${isPanelOpen?'open':''}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"station-details-content\",children:selectedStationData?/*#__PURE__*/_jsxs(\"div\",{className:\"station-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"station-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:selectedStationData.station_info.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"aqi-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"current-aqi\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"aqi-label\",children:\"Current AQI\"}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-value\",style:{color:getAQIColor(selectedStationData.highest_sub_index)},children:Math.round(selectedStationData.highest_sub_index)}),/*#__PURE__*/_jsx(\"span\",{className:\"aqi-status\",children:getAQIStatus(selectedStationData.highest_sub_index)})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),\"4-Day Forecast\"]}),/*#__PURE__*/_jsxs(\"select\",{className:\"parameter-selector\",value:selectedParameter,onChange:e=>setSelectedParameter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pm25_max\",children:\"PM2.5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pm10_max\",children:\"PM10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"so2_max\",children:\"SO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no2_max\",children:\"NO\\u2082\"}),/*#__PURE__*/_jsx(\"option\",{value:\"co_max\",children:\"CO\"}),/*#__PURE__*/_jsx(\"option\",{value:\"o3_max\",children:\"O\\u2083\"}),/*#__PURE__*/_jsx(\"option\",{value:\"nh3_max\",children:\"NH\\u2083\"})]})]}),forecastUpdatedAt&&/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-update-time\",children:[\"Updated: \",new Date(forecastUpdatedAt).toLocaleString()]}),isForecastLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner small\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading forecast...\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:(forecastChartData===null||forecastChartData===void 0?void 0:(_forecastChartData$la=forecastChartData.labels)===null||_forecastChartData$la===void 0?void 0:_forecastChartData$la.length)>0?/*#__PURE__*/_jsx(Line,{options:forecastChartOptions,data:forecastChartData}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-data-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No forecast data available\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"readings-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar\"}),\"Current Readings\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pollutant-grid\",children:pollutants.map(p=>{var _selectedStationData$,_selectedStationData$2,_selectedStationData$3;return/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-label\",children:p.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-value\",children:[(_selectedStationData$=(_selectedStationData$2=selectedStationData.averages)===null||_selectedStationData$2===void 0?void 0:(_selectedStationData$3=_selectedStationData$2[p.key])===null||_selectedStationData$3===void 0?void 0:_selectedStationData$3.toFixed(2))!==null&&_selectedStationData$!==void 0?_selectedStationData$:'N/A',/*#__PURE__*/_jsx(\"span\",{className:\"metric-unit\",children:\"\\xB5g/m\\xB3\"})]})]},p.key);})})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-station-selected\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-station-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-satellite-dish\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select a Station\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a monitoring station from the left panel to view detailed air quality data, current readings, and forecast information.\"})]})})})})]}),showLocationPrompt&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowLocationPrompt(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),\" Location Access\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowLocationPrompt(false),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"To view AQI data at your current location, please login first.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/login\",className:\"modal-btn primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sign-in-alt\"}),\"Login\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn secondary\",onClick:()=>setShowLocationPrompt(false),children:\"Maybe Later\"})]})]})]})})]});};export default MapPage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}