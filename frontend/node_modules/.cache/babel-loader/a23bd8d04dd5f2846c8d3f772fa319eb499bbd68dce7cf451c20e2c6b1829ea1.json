{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport './css/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyMap = /*#__PURE__*/React.lazy(_c = () => import('./LazyMap'));\n_c2 = LazyMap;\nconst LazyChart = /*#__PURE__*/React.lazy(_c3 = () => import('./LazyChart'));\n\n// --- Helper Functions ---\n_c4 = LazyChart;\nconst getIPLocation = async () => {\n  try {\n    const response = await fetch('https://ipapi.co/json/');\n    if (!response.ok) return null;\n    const data = await response.json();\n    return {\n      lat: data.latitude,\n      lng: data.longitude,\n      city: data.city,\n      region: data.region\n    };\n  } catch (error) {\n    console.warn('IP location fetch failed:', error);\n    return null;\n  }\n};\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {/* ... distance calculation logic ... */};\nconst getAQIColor = aqi => {/* ... color logic ... */};\nconst getAQIStatus = aqi => {/* ... status logic ... */};\n\n// --- Main Dashboard Component ---\nfunction Dashboard() {\n  _s();\n  var _Object$values$, _stations$nearestStat, _Object$values$2;\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [username] = useState((user === null || user === void 0 ? void 0 : user.name) || 'User');\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\n  const [dashboardData, setDashboardData] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [userLocationName, setUserLocationName] = useState('Detecting location...');\n  const [nearestStation, setNearestStation] = useState(null);\n  const [interpolatedData, setInterpolatedData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  const startSmartLocationDetection = useCallback(async () => {\n    setLoading(true);\n    // Step 1: Try IP Geolocation first\n    const ipLocation = await getIPLocation();\n    if (ipLocation) {\n      setUserLocation(ipLocation);\n      setUserLocationName(`${ipLocation.city}, ${ipLocation.region} (Approximate)`);\n    }\n    // Step 2: Try high-accuracy GPS\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        const gpsLocation = {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        };\n        setUserLocation(gpsLocation);\n        setUserLocationName(\"Your Precise Location\");\n      }, () => {\n        if (!ipLocation) setUserLocationName(\"Could not detect location\");\n      });\n    }\n    // Step 3: Fetch dashboard data\n    try {\n      const url = `${API_BASE_URL}/api/dashboard/?username=${username}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        const errData = await response.json();\n        if (errData.redirect_to) navigate(errData.redirect_to);\n        throw new Error(errData.error);\n      }\n      const data = await response.json();\n      setDashboardData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [username, navigate, API_BASE_URL]);\n  useEffect(() => {\n    startSmartLocationDetection();\n  }, [startSmartLocationDetection]);\n  useEffect(() => {\n    if (userLocation && dashboardData !== null && dashboardData !== void 0 && dashboardData.stations) {\n      const stations = Object.entries(dashboardData.stations);\n      let nearestDist = Infinity,\n        nearestId = null;\n      stations.forEach(([id, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestId = id;\n        }\n      });\n      setNearestStation({\n        id: nearestId,\n        distance: nearestDist,\n        name: dashboardData.stations[nearestId].station_info.name\n      });\n      let weightedSum = 0,\n        weightSum = 0;\n      stations.forEach(([, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\n        weightedSum += (station.highest_sub_index || 0) * weight;\n        weightSum += weight;\n      });\n      if (weightSum > 0) setInterpolatedData({\n        aqi: Math.round(weightedSum / weightSum)\n      });\n    }\n  }, [userLocation, dashboardData]);\n  const displayAqi = (interpolatedData === null || interpolatedData === void 0 ? void 0 : interpolatedData.aqi) || ((_Object$values$ = Object.values((dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.stations) || {})[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$.highest_sub_index) || 0;\n  const alertInfo = useMemo(() => {\n    if (displayAqi <= 50) return {\n      className: 'good',\n      message: 'Air quality is good. Enjoy your day!'\n    };\n    if (displayAqi <= 100) return {\n      className: 'moderate',\n      message: 'Air quality is moderate. Sensitive individuals should take precautions.'\n    };\n    return {\n      className: 'unhealthy',\n      message: 'Air quality is unhealthy. It is advisable to reduce outdoor activities.'\n    };\n  }, [displayAqi]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-loader\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading Dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 94\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  if (!dashboardData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 32\n  }, this);\n  const {\n    health_data,\n    stations,\n    forecasts\n  } = dashboardData;\n  const forecastForNearest = nearestStation ? forecasts[nearestStation.id] : null;\n  const currentValues = nearestStation ? (_stations$nearestStat = stations[nearestStation.id]) === null || _stations$nearestStat === void 0 ? void 0 : _stations$nearestStat.averages : (_Object$values$2 = Object.values(stations)[0]) === null || _Object$values$2 === void 0 ? void 0 : _Object$values$2.averages;\n  const pollutants = [{\n    key: 'pm25',\n    name: 'PM2.5'\n  }, {\n    key: 'pm10',\n    name: 'PM10'\n  }, {\n    key: 'so2',\n    name: 'SO₂'\n  }, {\n    key: 'no2',\n    name: 'NO₂'\n  }, {\n    key: 'co',\n    name: 'CO'\n  }, {\n    key: 'o3',\n    name: 'O₃'\n  }, {\n    key: 'nh3',\n    name: 'NH₃'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert-banner ${alertInfo.className}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-info-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: alertInfo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome, \", username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userLocationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aqi-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-value\",\n            style: {\n              color: getAQIColor(displayAqi)\n            },\n            children: Math.round(displayAqi)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-status\",\n            children: getAQIStatus(displayAqi)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Current Pollutant Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-grid\",\n          children: pollutants.map(p => {\n            var _currentValues$p$key$, _currentValues$p$key;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-label\",\n                children: p.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-value\",\n                children: [(_currentValues$p$key$ = currentValues === null || currentValues === void 0 ? void 0 : (_currentValues$p$key = currentValues[p.key]) === null || _currentValues$p$key === void 0 ? void 0 : _currentValues$p$key.toFixed(2)) !== null && _currentValues$p$key$ !== void 0 ? _currentValues$p$key$ : 'N/A', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-unit\",\n                  children: \" \\xB5g/m\\xB3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)]\n            }, p.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sensor Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-loader\",\n              children: \"Loading Map...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 45\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(LazyMap, {\n              userLocation: userLocation,\n              stations: stations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"4-Day Forecast (Nearest Station)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-loader\",\n              children: \"Loading Chart...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 45\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(LazyChart, {\n              forecastData: forecastForNearest,\n              selectedParameter: selectedParameter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"health-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Health Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Risk Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: health_data.risk_level === 'Low' ? '#10b981' : '#ef4444',\n                fontWeight: 'bold'\n              },\n              children: health_data.risk_level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-advisory\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"General Health Advisory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"People with asthma or heart disease should follow health advisories closely.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"f6vOuO6nM6R3cuvWP4jZkn74Iwg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c5 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LazyMap$React.lazy\");\n$RefreshReg$(_c2, \"LazyMap\");\n$RefreshReg$(_c3, \"LazyChart$React.lazy\");\n$RefreshReg$(_c4, \"LazyChart\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Suspense","useNavigate","Link","useAuth","jsxDEV","_jsxDEV","LazyMap","lazy","_c","_c2","LazyChart","_c3","_c4","getIPLocation","response","fetch","ok","data","json","lat","latitude","lng","longitude","city","region","error","console","warn","calculateDistance","lat1","lon1","lat2","lon2","getAQIColor","aqi","getAQIStatus","Dashboard","_s","_Object$values$","_stations$nearestStat","_Object$values$2","user","logout","username","name","selectedParameter","setSelectedParameter","dashboardData","setDashboardData","userLocation","setUserLocation","userLocationName","setUserLocationName","nearestStation","setNearestStation","interpolatedData","setInterpolatedData","loading","setLoading","setError","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","startSmartLocationDetection","ipLocation","navigator","geolocation","getCurrentPosition","pos","gpsLocation","coords","url","errData","redirect_to","Error","err","message","stations","Object","entries","nearestDist","Infinity","nearestId","forEach","id","station","dist","station_info","distance","weightedSum","weightSum","weight","Math","pow","highest_sub_index","round","displayAqi","values","alertInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","health_data","forecasts","forecastForNearest","currentValues","averages","pollutants","key","style","color","map","p","_currentValues$p$key$","_currentValues$p$key","toFixed","fallback","forecastData","risk_level","fontWeight","_c5","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport './css/Dashboard.css';\r\n\r\nconst LazyMap = React.lazy(() => import('./LazyMap'));\r\nconst LazyChart = React.lazy(() => import('./LazyChart'));\r\n\r\n// --- Helper Functions ---\r\nconst getIPLocation = async () => {\r\n    try {\r\n        const response = await fetch('https://ipapi.co/json/');\r\n        if (!response.ok) return null;\r\n        const data = await response.json();\r\n        return { lat: data.latitude, lng: data.longitude, city: data.city, region: data.region };\r\n    } catch (error) {\r\n        console.warn('IP location fetch failed:', error);\r\n        return null;\r\n    }\r\n};\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => { /* ... distance calculation logic ... */ };\r\nconst getAQIColor = (aqi) => { /* ... color logic ... */ };\r\nconst getAQIStatus = (aqi) => { /* ... status logic ... */ };\r\n\r\n// --- Main Dashboard Component ---\r\nfunction Dashboard() {\r\n    const { user, logout } = useAuth();\r\n    const [username] = useState(user?.name || 'User');\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n    const [dashboardData, setDashboardData] = useState(null);\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [userLocationName, setUserLocationName] = useState('Detecting location...');\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [interpolatedData, setInterpolatedData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n    \r\n    const startSmartLocationDetection = useCallback(async () => {\r\n        setLoading(true);\r\n        // Step 1: Try IP Geolocation first\r\n        const ipLocation = await getIPLocation();\r\n        if (ipLocation) {\r\n            setUserLocation(ipLocation);\r\n            setUserLocationName(`${ipLocation.city}, ${ipLocation.region} (Approximate)`);\r\n        }\r\n        // Step 2: Try high-accuracy GPS\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (pos) => {\r\n                    const gpsLocation = { lat: pos.coords.latitude, lng: pos.coords.longitude };\r\n                    setUserLocation(gpsLocation);\r\n                    setUserLocationName(\"Your Precise Location\");\r\n                },\r\n                () => { if (!ipLocation) setUserLocationName(\"Could not detect location\"); }\r\n            );\r\n        }\r\n        // Step 3: Fetch dashboard data\r\n        try {\r\n            const url = `${API_BASE_URL}/api/dashboard/?username=${username}`;\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                if (errData.redirect_to) navigate(errData.redirect_to);\r\n                throw new Error(errData.error);\r\n            }\r\n            const data = await response.json();\r\n            setDashboardData(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [username, navigate, API_BASE_URL]);\r\n\r\n    useEffect(() => {\r\n        startSmartLocationDetection();\r\n    }, [startSmartLocationDetection]);\r\n\r\n    useEffect(() => {\r\n        if (userLocation && dashboardData?.stations) {\r\n            const stations = Object.entries(dashboardData.stations);\r\n            let nearestDist = Infinity, nearestId = null;\r\n            stations.forEach(([id, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                if (dist < nearestDist) { nearestDist = dist; nearestId = id; }\r\n            });\r\n            setNearestStation({ id: nearestId, distance: nearestDist, name: dashboardData.stations[nearestId].station_info.name });\r\n            \r\n            let weightedSum = 0, weightSum = 0;\r\n            stations.forEach(([, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\r\n                weightedSum += (station.highest_sub_index || 0) * weight;\r\n                weightSum += weight;\r\n            });\r\n            if (weightSum > 0) setInterpolatedData({ aqi: Math.round(weightedSum / weightSum) });\r\n        }\r\n    }, [userLocation, dashboardData]);\r\n\r\n    const displayAqi = interpolatedData?.aqi || Object.values(dashboardData?.stations || {})[0]?.highest_sub_index || 0;\r\n    const alertInfo = useMemo(() => {\r\n        if (displayAqi <= 50) return { className: 'good', message: 'Air quality is good. Enjoy your day!' };\r\n        if (displayAqi <= 100) return { className: 'moderate', message: 'Air quality is moderate. Sensitive individuals should take precautions.' };\r\n        return { className: 'unhealthy', message: 'Air quality is unhealthy. It is advisable to reduce outdoor activities.' };\r\n    }, [displayAqi]);\r\n\r\n    if (loading) return <div className=\"panel-loader\"><div className=\"loading-spinner\"></div><h2>Loading Dashboard...</h2></div>;\r\n    if (error) return <div className=\"error-message\"><h2>Error</h2><p>{error}</p></div>;\r\n    if (!dashboardData) return <div>No data available.</div>;\r\n\r\n    const { health_data, stations, forecasts } = dashboardData;\r\n    const forecastForNearest = nearestStation ? forecasts[nearestStation.id] : null;\r\n    const currentValues = nearestStation ? stations[nearestStation.id]?.averages : Object.values(stations)[0]?.averages;\r\n    const pollutants = [\r\n        { key: 'pm25', name: 'PM2.5' }, { key: 'pm10', name: 'PM10' }, { key: 'so2', name: 'SO₂' },\r\n        { key: 'no2', name: 'NO₂' }, { key: 'co', name: 'CO' }, { key: 'o3', name: 'O₃' }, { key: 'nh3', name: 'NH₃' }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <nav className=\"navbar\">{/* --- Your Navbar JSX Here --- */}</nav>\r\n            <div className=\"main-container\">\r\n                <div className={`alert-banner ${alertInfo.className}`}>\r\n                    <i className=\"fas fa-info-circle\"></i>\r\n                    <span>{alertInfo.message}</span>\r\n                </div>\r\n                <div className=\"welcome-header\">\r\n                    <div className=\"welcome-text\">\r\n                        <h1>Welcome, {username}!</h1>\r\n                        <p>{userLocationName}</p>\r\n                    </div>\r\n                    <div className=\"aqi-overview\">\r\n                        <div className=\"aqi-value\" style={{ color: getAQIColor(displayAqi) }}>{Math.round(displayAqi)}</div>\r\n                        <div className=\"aqi-status\">{getAQIStatus(displayAqi)}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"metrics-section\">\r\n                    <h2 className=\"section-title\">Current Pollutant Levels</h2>\r\n                    <div className=\"metrics-grid\">\r\n                        {pollutants.map(p => (\r\n                            <div className=\"metric-card\" key={p.key}>\r\n                                <div className=\"metric-label\">{p.name}</div>\r\n                                <div className=\"metric-value\">\r\n                                    {(currentValues?.[p.key]?.toFixed(2)) ?? 'N/A'}\r\n                                    <span className=\"metric-unit\"> µg/m³</span>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-grid\">\r\n                    <div className=\"dashboard-card\">\r\n                        <h3>Sensor Map</h3>\r\n                        <Suspense fallback={<div className=\"panel-loader\">Loading Map...</div>}>\r\n                            <LazyMap userLocation={userLocation} stations={stations} />\r\n                        </Suspense>\r\n                    </div>\r\n                    <div className=\"dashboard-card\">\r\n                        <h3>4-Day Forecast (Nearest Station)</h3>\r\n                        <Suspense fallback={<div className=\"panel-loader\">Loading Chart...</div>}>\r\n                            <LazyChart forecastData={forecastForNearest} selectedParameter={selectedParameter} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"health-section\">\r\n                    <div className=\"health-content\">\r\n                        <h3>Your Health Status</h3>\r\n                        <p>Risk Level: <span style={{color: health_data.risk_level === 'Low' ? '#10b981' : '#ef4444', fontWeight: 'bold'}}>{health_data.risk_level}</span></p>\r\n                    </div>\r\n                    <div className=\"health-advisory\">\r\n                        <h3>General Health Advisory</h3>\r\n                        <p>People with asthma or heart disease should follow health advisories closely.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer className=\"footer\">{/* --- Your Footer JSX Here --- */}</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAClF,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,OAAO,gBAAGX,KAAK,CAACY,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,WAAW,CAAC,CAAC;AAACC,GAAA,GAAhDH,OAAO;AACb,MAAMI,SAAS,gBAAGf,KAAK,CAACY,IAAI,CAAAI,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,aAAa,CAAC,CAAC;;AAEzD;AAAAC,GAAA,GAFMF,SAAS;AAGf,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;IACtD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,OAAO,IAAI;IAC7B,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAO;MAAEC,GAAG,EAAEF,IAAI,CAACG,QAAQ;MAAEC,GAAG,EAAEJ,IAAI,CAACK,SAAS;MAAEC,IAAI,EAAEN,IAAI,CAACM,IAAI;MAAEC,MAAM,EAAEP,IAAI,CAACO;IAAO,CAAC;EAC5F,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEF,KAAK,CAAC;IAChD,OAAO,IAAI;EACf;AACJ,CAAC;AACD,MAAMG,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK,CAAE,yCAA0C;AAClG,MAAMC,WAAW,GAAIC,GAAG,IAAK,CAAE,0BAA2B;AAC1D,MAAMC,YAAY,GAAID,GAAG,IAAK,CAAE,2BAA4B;;AAE5D;AACA,SAASE,SAASA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,qBAAA,EAAAC,gBAAA;EACjB,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGvC,OAAO,CAAC,CAAC;EAClC,MAAM,CAACwC,QAAQ,CAAC,GAAG/C,QAAQ,CAAC,CAAA6C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,KAAI,MAAM,CAAC;EACjD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlD,QAAQ,CAAC,MAAM,CAAC;EAClE,MAAM,CAACmD,aAAa,EAAEC,gBAAgB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxD,QAAQ,CAAC,uBAAuB,CAAC;EACjF,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6D,OAAO,EAAEC,UAAU,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6B,KAAK,EAAEkC,QAAQ,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgE,QAAQ,GAAG3D,WAAW,CAAC,CAAC;EAC9B,MAAM4D,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EAE7E,MAAMC,2BAA2B,GAAGnE,WAAW,CAAC,YAAY;IACxD4D,UAAU,CAAC,IAAI,CAAC;IAChB;IACA,MAAMQ,UAAU,GAAG,MAAMrD,aAAa,CAAC,CAAC;IACxC,IAAIqD,UAAU,EAAE;MACZhB,eAAe,CAACgB,UAAU,CAAC;MAC3Bd,mBAAmB,CAAC,GAAGc,UAAU,CAAC3C,IAAI,KAAK2C,UAAU,CAAC1C,MAAM,gBAAgB,CAAC;IACjF;IACA;IACA,IAAI2C,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,GAAG,IAAK;QACL,MAAMC,WAAW,GAAG;UAAEpD,GAAG,EAAEmD,GAAG,CAACE,MAAM,CAACpD,QAAQ;UAAEC,GAAG,EAAEiD,GAAG,CAACE,MAAM,CAAClD;QAAU,CAAC;QAC3E4B,eAAe,CAACqB,WAAW,CAAC;QAC5BnB,mBAAmB,CAAC,uBAAuB,CAAC;MAChD,CAAC,EACD,MAAM;QAAE,IAAI,CAACc,UAAU,EAAEd,mBAAmB,CAAC,2BAA2B,CAAC;MAAE,CAC/E,CAAC;IACL;IACA;IACA,IAAI;MACA,MAAMqB,GAAG,GAAG,GAAGZ,YAAY,4BAA4BlB,QAAQ,EAAE;MACjE,MAAM7B,QAAQ,GAAG,MAAMC,KAAK,CAAC0D,GAAG,CAAC;MACjC,IAAI,CAAC3D,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM0D,OAAO,GAAG,MAAM5D,QAAQ,CAACI,IAAI,CAAC,CAAC;QACrC,IAAIwD,OAAO,CAACC,WAAW,EAAEf,QAAQ,CAACc,OAAO,CAACC,WAAW,CAAC;QACtD,MAAM,IAAIC,KAAK,CAACF,OAAO,CAACjD,KAAK,CAAC;MAClC;MACA,MAAMR,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC8B,gBAAgB,CAAC/B,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAO4D,GAAG,EAAE;MACVlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACNpB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACf,QAAQ,EAAEiB,QAAQ,EAAEC,YAAY,CAAC,CAAC;EAEtChE,SAAS,CAAC,MAAM;IACZoE,2BAA2B,CAAC,CAAC;EACjC,CAAC,EAAE,CAACA,2BAA2B,CAAC,CAAC;EAEjCpE,SAAS,CAAC,MAAM;IACZ,IAAIoD,YAAY,IAAIF,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEgC,QAAQ,EAAE;MACzC,MAAMA,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAAClC,aAAa,CAACgC,QAAQ,CAAC;MACvD,IAAIG,WAAW,GAAGC,QAAQ;QAAEC,SAAS,GAAG,IAAI;MAC5CL,QAAQ,CAACM,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,OAAO,CAAC,KAAK;QAChC,MAAMC,IAAI,GAAG5D,iBAAiB,CAACqB,YAAY,CAAC9B,GAAG,EAAE8B,YAAY,CAAC5B,GAAG,EAAEkE,OAAO,CAACE,YAAY,CAACtE,GAAG,EAAEoE,OAAO,CAACE,YAAY,CAACpE,GAAG,CAAC;QACtH,IAAImE,IAAI,GAAGN,WAAW,EAAE;UAAEA,WAAW,GAAGM,IAAI;UAAEJ,SAAS,GAAGE,EAAE;QAAE;MAClE,CAAC,CAAC;MACFhC,iBAAiB,CAAC;QAAEgC,EAAE,EAAEF,SAAS;QAAEM,QAAQ,EAAER,WAAW;QAAEtC,IAAI,EAAEG,aAAa,CAACgC,QAAQ,CAACK,SAAS,CAAC,CAACK,YAAY,CAAC7C;MAAK,CAAC,CAAC;MAEtH,IAAI+C,WAAW,GAAG,CAAC;QAAEC,SAAS,GAAG,CAAC;MAClCb,QAAQ,CAACM,OAAO,CAAC,CAAC,GAAGE,OAAO,CAAC,KAAK;QAC9B,MAAMC,IAAI,GAAG5D,iBAAiB,CAACqB,YAAY,CAAC9B,GAAG,EAAE8B,YAAY,CAAC5B,GAAG,EAAEkE,OAAO,CAACE,YAAY,CAACtE,GAAG,EAAEoE,OAAO,CAACE,YAAY,CAACpE,GAAG,CAAC;QACtH,MAAMwE,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACP,IAAI,KAAK,CAAC,GAAG,KAAK,GAAGA,IAAI,EAAE,CAAC,CAAC;QACzDG,WAAW,IAAI,CAACJ,OAAO,CAACS,iBAAiB,IAAI,CAAC,IAAIH,MAAM;QACxDD,SAAS,IAAIC,MAAM;MACvB,CAAC,CAAC;MACF,IAAID,SAAS,GAAG,CAAC,EAAEpC,mBAAmB,CAAC;QAAEtB,GAAG,EAAE4D,IAAI,CAACG,KAAK,CAACN,WAAW,GAAGC,SAAS;MAAE,CAAC,CAAC;IACxF;EACJ,CAAC,EAAE,CAAC3C,YAAY,EAAEF,aAAa,CAAC,CAAC;EAEjC,MAAMmD,UAAU,GAAG,CAAA3C,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAErB,GAAG,OAAAI,eAAA,GAAI0C,MAAM,CAACmB,MAAM,CAAC,CAAApD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEgC,QAAQ,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAAzC,eAAA,uBAA/CA,eAAA,CAAiD0D,iBAAiB,KAAI,CAAC;EACnH,MAAMI,SAAS,GAAGrG,OAAO,CAAC,MAAM;IAC5B,IAAImG,UAAU,IAAI,EAAE,EAAE,OAAO;MAAEG,SAAS,EAAE,MAAM;MAAEvB,OAAO,EAAE;IAAuC,CAAC;IACnG,IAAIoB,UAAU,IAAI,GAAG,EAAE,OAAO;MAAEG,SAAS,EAAE,UAAU;MAAEvB,OAAO,EAAE;IAA0E,CAAC;IAC3I,OAAO;MAAEuB,SAAS,EAAE,WAAW;MAAEvB,OAAO,EAAE;IAA0E,CAAC;EACzH,CAAC,EAAE,CAACoB,UAAU,CAAC,CAAC;EAEhB,IAAIzC,OAAO,EAAE,oBAAOpD,OAAA;IAAKgG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAACjG,OAAA;MAAKgG,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAAArG,OAAA;MAAAiG,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5H,IAAIjF,KAAK,EAAE,oBAAOpB,OAAA;IAAKgG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAACjG,OAAA;MAAAiG,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAArG,OAAA;MAAAiG,QAAA,EAAI7E;IAAK;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnF,IAAI,CAAC3D,aAAa,EAAE,oBAAO1C,OAAA;IAAAiG,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAExD,MAAM;IAAEC,WAAW;IAAE5B,QAAQ;IAAE6B;EAAU,CAAC,GAAG7D,aAAa;EAC1D,MAAM8D,kBAAkB,GAAGxD,cAAc,GAAGuD,SAAS,CAACvD,cAAc,CAACiC,EAAE,CAAC,GAAG,IAAI;EAC/E,MAAMwB,aAAa,GAAGzD,cAAc,IAAAd,qBAAA,GAAGwC,QAAQ,CAAC1B,cAAc,CAACiC,EAAE,CAAC,cAAA/C,qBAAA,uBAA3BA,qBAAA,CAA6BwE,QAAQ,IAAAvE,gBAAA,GAAGwC,MAAM,CAACmB,MAAM,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAAvC,gBAAA,uBAA1BA,gBAAA,CAA4BuE,QAAQ;EACnH,MAAMC,UAAU,GAAG,CACf;IAAEC,GAAG,EAAE,MAAM;IAAErE,IAAI,EAAE;EAAQ,CAAC,EAAE;IAAEqE,GAAG,EAAE,MAAM;IAAErE,IAAI,EAAE;EAAO,CAAC,EAAE;IAAEqE,GAAG,EAAE,KAAK;IAAErE,IAAI,EAAE;EAAM,CAAC,EAC1F;IAAEqE,GAAG,EAAE,KAAK;IAAErE,IAAI,EAAE;EAAM,CAAC,EAAE;IAAEqE,GAAG,EAAE,IAAI;IAAErE,IAAI,EAAE;EAAK,CAAC,EAAE;IAAEqE,GAAG,EAAE,IAAI;IAAErE,IAAI,EAAE;EAAK,CAAC,EAAE;IAAEqE,GAAG,EAAE,KAAK;IAAErE,IAAI,EAAE;EAAM,CAAC,CACjH;EAED,oBACIvC,OAAA;IAAKgG,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BjG,OAAA;MAAKgG,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAAC,eAClErG,OAAA;MAAKgG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BjG,OAAA;QAAKgG,SAAS,EAAE,gBAAgBD,SAAS,CAACC,SAAS,EAAG;QAAAC,QAAA,gBAClDjG,OAAA;UAAGgG,SAAS,EAAC;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCrG,OAAA;UAAAiG,QAAA,EAAOF,SAAS,CAACtB;QAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACNrG,OAAA;QAAKgG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BjG,OAAA;UAAKgG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBjG,OAAA;YAAAiG,QAAA,GAAI,WAAS,EAAC3D,QAAQ,EAAC,GAAC;UAAA;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BrG,OAAA;YAAAiG,QAAA,EAAInD;UAAgB;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACNrG,OAAA;UAAKgG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBjG,OAAA;YAAKgG,SAAS,EAAC,WAAW;YAACa,KAAK,EAAE;cAAEC,KAAK,EAAElF,WAAW,CAACiE,UAAU;YAAE,CAAE;YAAAI,QAAA,EAAER,IAAI,CAACG,KAAK,CAACC,UAAU;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpGrG,OAAA;YAAKgG,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEnE,YAAY,CAAC+D,UAAU;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrG,OAAA;QAAKgG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BjG,OAAA;UAAIgG,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3DrG,OAAA;UAAKgG,SAAS,EAAC,cAAc;UAAAC,QAAA,EACxBU,UAAU,CAACI,GAAG,CAACC,CAAC;YAAA,IAAAC,qBAAA,EAAAC,oBAAA;YAAA,oBACblH,OAAA;cAAKgG,SAAS,EAAC,aAAa;cAAAC,QAAA,gBACxBjG,OAAA;gBAAKgG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEe,CAAC,CAACzE;cAAI;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC5CrG,OAAA;gBAAKgG,SAAS,EAAC,cAAc;gBAAAC,QAAA,IAAAgB,qBAAA,GACvBR,aAAa,aAAbA,aAAa,wBAAAS,oBAAA,GAAbT,aAAa,CAAGO,CAAC,CAACJ,GAAG,CAAC,cAAAM,oBAAA,uBAAtBA,oBAAA,CAAwBC,OAAO,CAAC,CAAC,CAAC,cAAAF,qBAAA,cAAAA,qBAAA,GAAK,KAAK,eAC9CjH,OAAA;kBAAMgG,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC;YAAA,GALwBW,CAAC,CAACJ,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMlC,CAAC;UAAA,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrG,OAAA;QAAKgG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BjG,OAAA;UAAKgG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BjG,OAAA;YAAAiG,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBrG,OAAA,CAACL,QAAQ;YAACyH,QAAQ,eAAEpH,OAAA;cAAKgG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAE;YAAAJ,QAAA,eACnEjG,OAAA,CAACC,OAAO;cAAC2C,YAAY,EAAEA,YAAa;cAAC8B,QAAQ,EAAEA;YAAS;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACNrG,OAAA;UAAKgG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BjG,OAAA;YAAAiG,QAAA,EAAI;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCrG,OAAA,CAACL,QAAQ;YAACyH,QAAQ,eAAEpH,OAAA;cAAKgG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAE;YAAAJ,QAAA,eACrEjG,OAAA,CAACK,SAAS;cAACgH,YAAY,EAAEb,kBAAmB;cAAChE,iBAAiB,EAAEA;YAAkB;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrG,OAAA;QAAKgG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BjG,OAAA;UAAKgG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BjG,OAAA;YAAAiG,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BrG,OAAA;YAAAiG,QAAA,GAAG,cAAY,eAAAjG,OAAA;cAAM6G,KAAK,EAAE;gBAACC,KAAK,EAAER,WAAW,CAACgB,UAAU,KAAK,KAAK,GAAG,SAAS,GAAG,SAAS;gBAAEC,UAAU,EAAE;cAAM,CAAE;cAAAtB,QAAA,EAAEK,WAAW,CAACgB;YAAU;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrJ,CAAC,eACNrG,OAAA;UAAKgG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BjG,OAAA;YAAAiG,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChCrG,OAAA;YAAAiG,QAAA,EAAG;UAA4E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrG,OAAA;MAAQgG,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEd;AAACrE,EAAA,CA/JQD,SAAS;EAAA,QACWjC,OAAO,EAWfF,WAAW;AAAA;AAAA4H,GAAA,GAZvBzF,SAAS;AAiKlB,eAAeA,SAAS;AAAC,IAAA5B,EAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAiH,GAAA;AAAAC,YAAA,CAAAtH,EAAA;AAAAsH,YAAA,CAAArH,GAAA;AAAAqH,YAAA,CAAAnH,GAAA;AAAAmH,YAAA,CAAAlH,GAAA;AAAAkH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}