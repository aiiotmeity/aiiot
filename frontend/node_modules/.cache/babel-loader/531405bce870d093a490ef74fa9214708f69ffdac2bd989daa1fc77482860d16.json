{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\HealthReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport './css/HealthReport.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyChart = /*#__PURE__*/React.lazy(_c = () => import('./LazyChart'));\n\n// --- Helper Functions (should be in a shared utils.js file) ---\n_c2 = LazyChart;\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // km\n  const dLat = (lat2 - lat1) * Math.PI / 180,\n    dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nconst getAQIColor = aqi => {\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 150) return '#ef4444';\n  return '#7c2d12';\n};\nfunction HealthReport() {\n  _s();\n  var _Object$values$;\n  const {\n    user\n  } = useAuth();\n  const [username] = useState((user === null || user === void 0 ? void 0 : user.name) || null);\n  const [reportData, setReportData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // --- State for location and interpolation (same as Dashboard) ---\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [interpolatedData, setInterpolatedData] = useState(null);\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  const fetchReportData = useCallback(async () => {\n    if (!username) {\n      navigate('/login');\n      return;\n    }\n    setLoading(true);\n    try {\n      const url = `${API_BASE_URL}/api/health-report/?username=${username}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        const errData = await response.json();\n        if (errData.redirect_to) navigate(errData.redirect_to);\n        throw new Error(errData.error);\n      }\n      const data = await response.json();\n      setReportData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [username, navigate, API_BASE_URL]);\n  useEffect(() => {\n    fetchReportData();\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => setUserLocation({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      }), err => console.warn(\"Geolocation failed.\"));\n    }\n  }, [fetchReportData]);\n\n  // --- EXACT SAME LOGIC as Dashboard.js for consistency ---\n  useEffect(() => {\n    if (userLocation && reportData !== null && reportData !== void 0 && reportData.stations) {\n      const stations = Object.entries(reportData.stations);\n      let nearestDist = Infinity,\n        nearestId = null;\n      stations.forEach(([id, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestId = id;\n        }\n      });\n      setNearestStation({\n        id: nearestId,\n        distance: nearestDist\n      });\n      let weightedSum = 0,\n        weightSum = 0;\n      stations.forEach(([, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\n        weightedSum += (station.highest_sub_index || 0) * weight;\n        weightSum += weight;\n      });\n      if (weightSum > 0) {\n        setInterpolatedData({\n          aqi: Math.round(weightedSum / weightSum)\n        });\n      }\n    }\n  }, [userLocation, reportData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-loader\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generating Health Report...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 55\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 23\n  }, this);\n  if (!reportData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No report data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 29\n  }, this);\n  const {\n    health_assessment,\n    stations,\n    forecasts\n  } = reportData;\n\n  // --- Use the interpolated AQI for display, just like the Dashboard ---\n  const displayAqi = (interpolatedData === null || interpolatedData === void 0 ? void 0 : interpolatedData.aqi) || ((_Object$values$ = Object.values(stations || {})[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$.highest_sub_index) || 0;\n  const forecastForNearest = nearestStation ? forecasts[nearestStation.id] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Personalized Health Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analysis based on your health profile and the smart interpolated AQI for your location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Health Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-score\",\n            children: health_assessment.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `risk-level ${health_assessment.risk_level.toLowerCase()}`,\n            children: [health_assessment.risk_level, \" Risk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"AQI at Your Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-name\",\n            children: nearestStation ? `Nearest: ${stations[nearestStation.id].station_info.name}` : '...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-aqi\",\n            style: {\n              color: getAQIColor(displayAqi)\n            },\n            children: Math.round(displayAqi)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lightbulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 51\n          }, this), \" Your Priority Recommendations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations-grid\",\n          children: health_assessment.priority_actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-text\",\n              children: action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Forecast (Nearest Station)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-loader\",\n              children: \"Loading Chart...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 46\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(LazyChart, {\n              forecastData: forecastForNearest === null || forecastForNearest === void 0 ? void 0 : forecastForNearest.data,\n              selectedParameter: 'pm25'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Full Health Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(health_assessment.details).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 47\n              }, this), \" \", value]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(HealthReport, \"zxwxTYoIU+cEH81MK9qRe/tV8m4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c3 = HealthReport;\nexport default HealthReport;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LazyChart$React.lazy\");\n$RefreshReg$(_c2, \"LazyChart\");\n$RefreshReg$(_c3, \"HealthReport\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Suspense","useNavigate","Link","useAuth","jsxDEV","_jsxDEV","LazyChart","lazy","_c","_c2","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","getAQIColor","aqi","HealthReport","_s","_Object$values$","user","username","name","reportData","setReportData","loading","setLoading","error","setError","userLocation","setUserLocation","nearestStation","setNearestStation","interpolatedData","setInterpolatedData","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","fetchReportData","url","response","fetch","ok","errData","json","redirect_to","Error","data","err","message","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","console","warn","stations","Object","entries","nearestDist","Infinity","nearestId","forEach","id","station","dist","station_info","distance","weightedSum","weightSum","weight","pow","highest_sub_index","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","health_assessment","forecasts","displayAqi","values","forecastForNearest","score","risk_level","toLowerCase","style","color","priority_actions","map","action","index","fallback","forecastData","selectedParameter","details","key","value","_c3","$RefreshReg$"],"sources":["C:/React/my-django-react-app/frontend/src/components/HealthReport.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport './css/HealthReport.css';\r\n\r\nconst LazyChart = React.lazy(() => import('./LazyChart'));\r\n\r\n// --- Helper Functions (should be in a shared utils.js file) ---\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180, dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 150) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nfunction HealthReport() {\r\n    const { user } = useAuth();\r\n    const [username] = useState(user?.name || null);\r\n    const [reportData, setReportData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    \r\n    // --- State for location and interpolation (same as Dashboard) ---\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [interpolatedData, setInterpolatedData] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    const fetchReportData = useCallback(async () => {\r\n        if (!username) { navigate('/login'); return; }\r\n        setLoading(true);\r\n        try {\r\n            const url = `${API_BASE_URL}/api/health-report/?username=${username}`;\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                if (errData.redirect_to) navigate(errData.redirect_to);\r\n                throw new Error(errData.error);\r\n            }\r\n            const data = await response.json();\r\n            setReportData(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [username, navigate, API_BASE_URL]);\r\n\r\n    useEffect(() => {\r\n        fetchReportData();\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (pos) => setUserLocation({ lat: pos.coords.latitude, lng: pos.coords.longitude }),\r\n                (err) => console.warn(\"Geolocation failed.\")\r\n            );\r\n        }\r\n    }, [fetchReportData]);\r\n\r\n    // --- EXACT SAME LOGIC as Dashboard.js for consistency ---\r\n    useEffect(() => {\r\n        if (userLocation && reportData?.stations) {\r\n            const stations = Object.entries(reportData.stations);\r\n            let nearestDist = Infinity, nearestId = null;\r\n            stations.forEach(([id, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                if (dist < nearestDist) { nearestDist = dist; nearestId = id; }\r\n            });\r\n            setNearestStation({ id: nearestId, distance: nearestDist });\r\n            \r\n            let weightedSum = 0, weightSum = 0;\r\n            stations.forEach(([, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                const weight = 1 / Math.pow(dist === 0 ? 0.001 : dist, 2);\r\n                weightedSum += (station.highest_sub_index || 0) * weight;\r\n                weightSum += weight;\r\n            });\r\n            if (weightSum > 0) {\r\n                setInterpolatedData({ aqi: Math.round(weightedSum / weightSum) });\r\n            }\r\n        }\r\n    }, [userLocation, reportData]);\r\n\r\n    if (loading) return <div className=\"panel-loader\"><h2>Generating Health Report...</h2></div>;\r\n    if (error) return <div className=\"error-message\"><h2>Error</h2><p>{error}</p></div>;\r\n    if (!reportData) return <div>No report data available.</div>;\r\n\r\n    const { health_assessment, stations, forecasts } = reportData;\r\n    \r\n    // --- Use the interpolated AQI for display, just like the Dashboard ---\r\n    const displayAqi = interpolatedData?.aqi || Object.values(stations || {})[0]?.highest_sub_index || 0;\r\n    const forecastForNearest = nearestStation ? forecasts[nearestStation.id] : null;\r\n\r\n    return (\r\n        <div className=\"report-page\">\r\n            <nav className=\"navbar\">{/* --- Your Navbar JSX Here --- */}</nav>\r\n            <div className=\"report-container\">\r\n                <div className=\"header-section\">\r\n                    <h1>Your Personalized Health Report</h1>\r\n                    <p>Analysis based on your health profile and the smart interpolated AQI for your location.</p>\r\n                </div>\r\n\r\n                <div className=\"overview-grid\">\r\n                    <div className=\"overview-card\">\r\n                        <h4>Health Score</h4>\r\n                        <div className=\"health-score\">{health_assessment.score}</div>\r\n                        <div className={`risk-level ${health_assessment.risk_level.toLowerCase()}`}>{health_assessment.risk_level} Risk</div>\r\n                    </div>\r\n                    <div className=\"overview-card\">\r\n                        <h4>AQI at Your Location</h4>\r\n                        <div className=\"station-name\">{nearestStation ? `Nearest: ${stations[nearestStation.id].station_info.name}` : '...'}</div>\r\n                        <div className=\"station-aqi\" style={{ color: getAQIColor(displayAqi) }}>\r\n                            {Math.round(displayAqi)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"recommendations-section\">\r\n                    <h3 className=\"section-title\"><i className=\"fas fa-lightbulb\"></i> Your Priority Recommendations</h3>\r\n                    <div className=\"recommendations-grid\">\r\n                        {health_assessment.priority_actions.map((action, index) => (\r\n                            <div key={index} className=\"recommendation-card\">\r\n                                <div className=\"rec-icon\"><i className=\"fas fa-check-circle\"></i></div>\r\n                                <div className=\"rec-text\">{action}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"dashboard-grid\">\r\n                    <div className=\"dashboard-card\">\r\n                        <h3>Forecast (Nearest Station)</h3>\r\n                         <Suspense fallback={<div className=\"panel-loader\">Loading Chart...</div>}>\r\n                            <LazyChart forecastData={forecastForNearest?.data} selectedParameter={'pm25'} />\r\n                        </Suspense>\r\n                    </div>\r\n                    <div className=\"dashboard-card\">\r\n                        <h3>Full Health Details</h3>\r\n                        <ul>\r\n                            {Object.entries(health_assessment.details).map(([key, value]) => (\r\n                                <li key={key}><strong>{key}:</strong> {value}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer className=\"footer\">{/* --- Your Footer JSX Here --- */}</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HealthReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}