{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280'; // gray\n  if (aqi <= 50) return '#10b981'; // green\n  if (aqi <= 100) return '#f59e0b'; // yellow\n  if (aqi <= 200) return '#ef4444'; // red\n  if (aqi <= 300) return '#7c2d12'; // maroon\n  return '#4c1d95'; // hazardous\n};\nconst getAQIStatus = aqi => {/* ... status function ... */};\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {/* ... distance function ... */};\n\n// --- NEW HELPER: Creates a custom map pin icon ---\nconst createAqiIcon = aqi => {\n  const color = getAQIColor(aqi);\n  const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\n  return window.L.divIcon({\n    html: iconHtml,\n    className: 'custom-div-icon',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n  });\n};\nconst MapPage = () => {\n  _s();\n  var _stations$nearestStat, _stations$nearestStat2;\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const [forecastData, setForecastData] = useState([]);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [selectedParameter, setSelectedParameter] = useState('pm25_max');\n  const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [interpolatedData, setInterpolatedData] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const userLocationMarkerRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // --- Effect for Map Initialization ---\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapRef.current._leaflet_id) {\n      map = window.L.map(mapRef.current).setView([10.176, 76.430], 13);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) map.remove();\n    };\n  }, []);\n\n  // --- Effect for User Location Tracking ---\n  const trackUserLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const loc = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(loc);\n        if (mapInstance) {\n          mapInstance.setView(loc, 14);\n          if (userLocationMarkerRef.current) {\n            userLocationMarkerRef.current.setLatLng(loc);\n          } else {\n            userLocationMarkerRef.current = window.L.marker(loc, {\n              icon: window.L.divIcon({\n                className: 'user-location-dot',\n                html: '<div class=\"pulsing-dot\"></div>'\n              }) // Requires CSS for .pulsing-dot\n            }).addTo(mapInstance);\n          }\n        }\n      }, err => console.warn(`Geolocation error: ${err.message}`));\n    }\n  }, [mapInstance]);\n\n  // --- Effect for Fetching Real-time Station Data ---\n  const fetchRealtimeData = useCallback(async () => {/* ... */}, [API_BASE_URL]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 60000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n\n  // --- Effect for Calculating Interpolated Values ---\n  useEffect(() => {/* ... */}, [userLocation, stations]);\n\n  // --- Effect for Fetching Forecast Data ---\n  useEffect(() => {/* ... */}, [selectedStationId, API_BASE_URL]);\n\n  // --- Effect for Drawing Station Markers ---\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n\n      // --- FIX: Use the new custom icon ---\n      const marker = window.L.marker([lat, lng], {\n        icon: createAqiIcon(aqi)\n      }).addTo(mapInstance);\n      marker.on('click', () => {\n        setSelectedStationId(id);\n        setIsPanelOpen(true);\n        mapInstance.setView([lat, lng], 15);\n      });\n      markersRef.current[id] = marker;\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  // ... (Memo for chart data, pollutants array, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: trackUserLocation,\n          className: \"my-location-btn\",\n          title: \"Find My Location\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-satellite-dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 54\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [userLocation && interpolatedData && nearestStation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-street-view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AQI at Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 109\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-aqi-value\",\n                children: nearestStation.distance < 1 ? (_stations$nearestStat = stations[nearestStation.id]) === null || _stations$nearestStat === void 0 ? void 0 : _stations$nearestStat.highest_sub_index : interpolatedData.aqi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: nearestStation.distance < 1 ? 'Using nearest station' : 'Interpolated value'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 132\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Nearest: \", (_stations$nearestStat2 = stations[nearestStation.id]) === null || _stations$nearestStat2 === void 0 ? void 0 : _stations$nearestStat2.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 38\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#94a3b8',\n                marginTop: '-0.5rem'\n              },\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), \"Last Updated: \", selectedStationData.last_updated_on || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), forecastUpdatedAt && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.75rem',\n                  color: '#94a3b8',\n                  marginBottom: '0.5rem'\n                },\n                children: [\"Updated: \", new Date(forecastUpdatedAt).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 59\n              }, this), isForecastLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-loader\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading forecast...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Line /* ... */, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"/vXU7VajZG35hpjEaEDrAZgrR3c=\", false, function () {\n  return [useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","calculateDistance","lat1","lon1","lat2","lon2","createAqiIcon","color","iconHtml","Math","round","window","L","divIcon","html","className","iconSize","iconAnchor","popupAnchor","MapPage","_s","_stations$nearestStat","_stations$nearestStat2","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","forecastData","setForecastData","isForecastLoading","setIsForecastLoading","selectedParameter","setSelectedParameter","forecastUpdatedAt","setForecastUpdatedAt","userLocation","setUserLocation","interpolatedData","setInterpolatedData","nearestStation","setNearestStation","mapRef","markersRef","userLocationMarkerRef","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","_leaflet_id","setView","tileLayer","addTo","remove","trackUserLocation","navigator","geolocation","getCurrentPosition","position","loc","lat","coords","latitude","lng","longitude","setLatLng","marker","icon","err","console","warn","message","fetchRealtimeData","interval","setInterval","clearInterval","Object","keys","length","values","forEach","entries","id","station","station_info","highest_sub_index","on","selectedStationData","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","distance","name","toFixed","style","fontSize","marginTop","last_updated_on","marginBottom","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280'; // gray\r\n    if (aqi <= 50) return '#10b981';   // green\r\n    if (aqi <= 100) return '#f59e0b';  // yellow\r\n    if (aqi <= 200) return '#ef4444';  // red\r\n    if (aqi <= 300) return '#7c2d12';  // maroon\r\n    return '#4c1d95'; // hazardous\r\n};\r\n\r\nconst getAQIStatus = (aqi) => { /* ... status function ... */ };\r\n\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => { /* ... distance function ... */ };\r\n\r\n// --- NEW HELPER: Creates a custom map pin icon ---\r\nconst createAqiIcon = (aqi) => {\r\n    const color = getAQIColor(aqi);\r\n    const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\r\n    return window.L.divIcon({\r\n        html: iconHtml,\r\n        className: 'custom-div-icon',\r\n        iconSize: [32, 32],\r\n        iconAnchor: [16, 32],\r\n        popupAnchor: [0, -32]\r\n    });\r\n};\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n    const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\r\n    \r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [interpolatedData, setInterpolatedData] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const userLocationMarkerRef = useRef(null);\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    // --- Effect for Map Initialization ---\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            map = window.L.map(mapRef.current).setView([10.176, 76.430], 13);\r\n            window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n\r\n    // --- Effect for User Location Tracking ---\r\n    const trackUserLocation = useCallback(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const loc = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setUserLocation(loc);\r\n                    if (mapInstance) {\r\n                        mapInstance.setView(loc, 14);\r\n                        if (userLocationMarkerRef.current) {\r\n                            userLocationMarkerRef.current.setLatLng(loc);\r\n                        } else {\r\n                            userLocationMarkerRef.current = window.L.marker(loc, {\r\n                                icon: window.L.divIcon({ className: 'user-location-dot', html: '<div class=\"pulsing-dot\"></div>' }) // Requires CSS for .pulsing-dot\r\n                            }).addTo(mapInstance);\r\n                        }\r\n                    }\r\n                },\r\n                (err) => console.warn(`Geolocation error: ${err.message}`)\r\n            );\r\n        }\r\n    }, [mapInstance]);\r\n\r\n    // --- Effect for Fetching Real-time Station Data ---\r\n    const fetchRealtimeData = useCallback(async () => { /* ... */ }, [API_BASE_URL]);\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 60000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    // --- Effect for Calculating Interpolated Values ---\r\n    useEffect(() => { /* ... */ }, [userLocation, stations]);\r\n\r\n    // --- Effect for Fetching Forecast Data ---\r\n    useEffect(() => { /* ... */ }, [selectedStationId, API_BASE_URL]);\r\n    \r\n    // --- Effect for Drawing Station Markers ---\r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        \r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const { lat, lng } = station.station_info;\r\n            const aqi = station.highest_sub_index;\r\n            \r\n            // --- FIX: Use the new custom icon ---\r\n            const marker = window.L.marker([lat, lng], {\r\n                icon: createAqiIcon(aqi)\r\n            }).addTo(mapInstance);\r\n\r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                setIsPanelOpen(true);\r\n                mapInstance.setView([lat, lng], 15);\r\n            });\r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n    // ... (Memo for chart data, pollutants array, etc.)\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                    {/* --- NEW: \"My Location\" Button --- */}\r\n                    <button onClick={trackUserLocation} className=\"my-location-btn\" title=\"Find My Location\">\r\n                        <i className=\"fas fa-crosshairs\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)}>\r\n                        <i className={`fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n                    </button>\r\n                    <div className=\"panel-header\">\r\n                         <h2 className=\"panel-title\"><i className=\"fas fa-satellite-dish\"></i> Monitoring Stations</h2>\r\n                         <div className=\"station-selector\">{/* ... station buttons ... */}</div>\r\n                    </div>\r\n                    <div className=\"panel-content\">\r\n                        {userLocation && interpolatedData && nearestStation && (\r\n                            <div className=\"user-location-panel\">\r\n                                <div className=\"user-location-header\"><i className=\"fas fa-street-view\"></i><span>AQI at Your Location</span></div>\r\n                                <div className=\"user-location-body\">\r\n                                    <div className=\"user-aqi-value\">{nearestStation.distance < 1 ? stations[nearestStation.id]?.highest_sub_index : interpolatedData.aqi}</div>\r\n                                    <div className=\"user-location-details\">\r\n                                        <span>{nearestStation.distance < 1 ? 'Using nearest station' : 'Interpolated value'}</span><br />\r\n                                        <span>Nearest: {stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km)</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {isLoading ? <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div> :\r\n                        error ? <div>Error: {error}</div> :\r\n                        selectedStationData ? (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                {/* --- FIX: Display Last Updated for Real-time Data --- */}\r\n                                <p style={{fontSize: '0.8rem', color: '#94a3b8', marginTop: '-0.5rem'}}>\r\n                                    Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})\r\n                                    <br />\r\n                                    Last Updated: {selectedStationData.last_updated_on || 'N/A'}\r\n                                </p>\r\n                                <div className=\"pollutant-metrics\">{/* ... pollutant grid ... */}</div>\r\n                                <div className=\"forecast-section\">\r\n                                    <div className=\"forecast-header\">{/* ... forecast header ... */}</div>\r\n                                    {/* --- FIX: Display Last Updated for Forecast --- */}\r\n                                    {forecastUpdatedAt && <div style={{ fontSize: '0.75rem', color: '#94a3b8', marginBottom: '0.5rem' }}>Updated: {new Date(forecastUpdatedAt).toLocaleString()}</div>}\r\n                                    {isForecastLoading ? <div className=\"panel-loader\"><p>Loading forecast...</p></div> :\r\n                                    <div className=\"chart-container\"><Line /* ... */ /></div>}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}