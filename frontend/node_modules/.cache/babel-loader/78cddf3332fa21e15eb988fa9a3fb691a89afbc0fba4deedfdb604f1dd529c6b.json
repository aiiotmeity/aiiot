{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst MapPage = () => {\n  _s();\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const [selectedParameter, setSelectedParameter] = useState('pm25_max');\n  const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // --- MAP INITIALIZATION WITH CLEANUP ---\n  useEffect(() => {\n    let map; // Use a local variable to avoid scope issues\n    if (mapRef.current && !mapRef.current._leaflet_id) {\n      const L = window.L;\n      map = L.map(mapRef.current).setView([10.176, 76.430], 14);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) {\n        map.remove();\n      }\n    };\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n  useEffect(() => {\n    if (!selectedStationId) return;\n    const fetchForecast = async () => {\n      setIsForecastLoading(true);\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\n        if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\n        const data = await response.json();\n        setForecastData(data.forecast_data || []);\n      } catch (err) {\n        console.error(\"Forecast fetch error:\", err);\n        setForecastData([]);\n      } finally {\n        setIsForecastLoading(false);\n      }\n    };\n    fetchForecast();\n  }, [selectedStationId, API_BASE_URL]);\n\n  // --- MARKER DRAWING LOGIC ---\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    const L = window.L;\n\n    // Clear existing markers before drawing new ones\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const markerOptions = {\n        radius: selectedStationId === id ? 12 : 8,\n        fillColor: getAQIColor(aqi),\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\n        weight: selectedStationId === id ? 3 : 1.5,\n        opacity: 1,\n        fillOpacity: 0.85\n      };\n      const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\n      marker.on('click', () => {\n        setSelectedStationId(id);\n        setIsPanelOpen(true);\n        mapInstance.setView([lat, lng], 16);\n      });\n      markersRef.current[id] = marker;\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  const pollutants = [{\n    key: 'pm25',\n    name: 'PM2.5'\n  }, {\n    key: 'pm10',\n    name: 'PM10'\n  }, {\n    key: 'so2',\n    name: 'SO₂'\n  }, {\n    key: 'no2',\n    name: 'NO₂'\n  }, {\n    key: 'co',\n    name: 'CO'\n  }, {\n    key: 'o3',\n    name: 'O₃'\n  }, {\n    key: 'nh3',\n    name: 'NH₃'\n  }];\n  const forecastChartData = useMemo(() => {\n    if (!forecastData || forecastData.length === 0) return {\n      labels: [],\n      datasets: []\n    };\n    const labels = forecastData.map(d => new Date(d.day).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    }));\n    const dataPoints = forecastData.map(d => d[selectedParameter]);\n    return {\n      labels,\n      datasets: [{\n        label: selectedParameter.replace('_max', '').toUpperCase(),\n        data: dataPoints,\n        borderColor: '#3b82f6',\n        backgroundColor: 'rgba(59, 130, 246, 0.2)',\n        fill: true,\n        tension: 0.4\n      }]\n    };\n  }, [forecastData, selectedParameter]);\n  const forecastChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#94a3b8'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#94a3b8'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/aqi.webp\",\n            alt: \"Logo\",\n            width: \"32\",\n            height: \"32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), \"AirAware\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"nav-link\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/map\",\n              className: \"nav-link active\",\n              children: \"Live Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), user ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/dashboard\",\n              className: \"nav-link\",\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"nav-link login-btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen),\n          title: isPanelOpen ? \"Hide Panel\" : \"Show Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-satellite-dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 53\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.entries(stations).map(([id, station]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === id ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"station-btn-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-name\",\n                  children: station.station_info.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-aqi\",\n                  style: {\n                    color: getAQIColor(station.highest_sub_index)\n                  },\n                  children: Math.round(station.highest_sub_index) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pollutant-metrics\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pollutant-grid\",\n                children: pollutants.map(p => {\n                  var _selectedStationData$, _selectedStationData$2, _selectedStationData$3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"metric-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric-label\",\n                      children: p.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric-value\",\n                      children: [(_selectedStationData$ = (_selectedStationData$2 = selectedStationData.averages) === null || _selectedStationData$2 === void 0 ? void 0 : (_selectedStationData$3 = _selectedStationData$2[p.key]) === null || _selectedStationData$3 === void 0 ? void 0 : _selectedStationData$3.toFixed(2)) !== null && _selectedStationData$ !== void 0 ? _selectedStationData$ : 'N/A', /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"metric-unit\",\n                        children: \" \\xB5g/m\\xB3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 49\n                    }, this)]\n                  }, p.key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"forecast-title\",\n                  children: \"4-Day Forecast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"parameter-selector\",\n                  value: selectedParameter,\n                  onChange: e => setSelectedParameter(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pm25_max\",\n                    children: \"PM2.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pm10_max\",\n                    children: \"PM10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"so2_max\",\n                    children: \"SO\\u2082\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"no2_max\",\n                    children: \"NO\\u2082\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"co_max\",\n                    children: \"CO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"o3_max\",\n                    children: \"O\\u2083\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nh3_max\",\n                    children: \"NH\\u2083\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this), isForecastLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-loader\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading forecast...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  options: forecastChartOptions,\n                  data: forecastChartData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"9yvPHiYHv5txg0vjAwmVXfG0I5U=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","MapPage","_s","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","forecastData","setForecastData","isLoading","setIsLoading","isForecastLoading","setIsForecastLoading","error","setError","isPanelOpen","setIsPanelOpen","selectedParameter","setSelectedParameter","forecastUpdatedAt","setForecastUpdatedAt","mapRef","markersRef","navigate","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","_leaflet_id","L","window","setView","tileLayer","addTo","remove","fetchRealtimeData","response","fetch","ok","Error","status","data","json","Object","keys","length","err","message","interval","setInterval","clearInterval","fetchForecast","forecast_data","console","values","forEach","marker","entries","id","station","lat","lng","station_info","highest_sub_index","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","circleMarker","on","selectedStationData","pollutants","key","name","forecastChartData","labels","datasets","d","Date","day","toLocaleDateString","month","dataPoints","label","replace","toUpperCase","borderColor","backgroundColor","fill","tension","forecastChartOptions","responsive","maintainAspectRatio","plugins","legend","display","scales","x","ticks","y","className","children","to","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","style","Math","round","p","_selectedStationData$","_selectedStationData$2","_selectedStationData$3","averages","toFixed","value","onChange","e","target","options","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return '#6b7280';\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 200) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi === null || aqi === undefined) return 'Unknown';\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    if (aqi <= 200) return 'Severe';\r\n    if (aqi <= 300) return 'Very Severe';\r\n    return 'Hazardous';\r\n};\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25_max');\r\n    const [forecastUpdatedAt, setForecastUpdatedAt] = useState(null);\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    // --- MAP INITIALIZATION WITH CLEANUP ---\r\n    useEffect(() => {\r\n        let map; // Use a local variable to avoid scope issues\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            const L = window.L;\r\n            map = L.map(mapRef.current).setView([10.176, 76.430], 14);\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => {\r\n            if (map) {\r\n                map.remove();\r\n            }\r\n        };\r\n    }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 30000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    useEffect(() => {\r\n        if (!selectedStationId) return;\r\n        const fetchForecast = async () => {\r\n            setIsForecastLoading(true);\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\r\n                if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\r\n                const data = await response.json();\r\n                setForecastData(data.forecast_data || []);\r\n            } catch (err) {\r\n                console.error(\"Forecast fetch error:\", err);\r\n                setForecastData([]);\r\n            } finally {\r\n                setIsForecastLoading(false);\r\n            }\r\n        };\r\n        fetchForecast();\r\n    }, [selectedStationId, API_BASE_URL]);\r\n\r\n    // --- MARKER DRAWING LOGIC ---\r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        const L = window.L;\r\n        \r\n        // Clear existing markers before drawing new ones\r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const { lat, lng } = station.station_info;\r\n            const aqi = station.highest_sub_index;\r\n            const markerOptions = {\r\n                radius: selectedStationId === id ? 12 : 8,\r\n                fillColor: getAQIColor(aqi),\r\n                color: selectedStationId === id ? '#ffffff' : '#1e293b',\r\n                weight: selectedStationId === id ? 3 : 1.5,\r\n                opacity: 1,\r\n                fillOpacity: 0.85\r\n            };\r\n\r\n            const marker = L.circleMarker([lat, lng], markerOptions).addTo(mapInstance);\r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                setIsPanelOpen(true);\r\n                mapInstance.setView([lat, lng], 16);\r\n            });\r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n\r\n    const pollutants = [\r\n        { key: 'pm25', name: 'PM2.5' }, { key: 'pm10', name: 'PM10' },\r\n        { key: 'so2', name: 'SO₂' }, { key: 'no2', name: 'NO₂' },\r\n        { key: 'co', name: 'CO' }, { key: 'o3', name: 'O₃' },\r\n        { key: 'nh3', name: 'NH₃' }\r\n    ];\r\n\r\n    const forecastChartData = useMemo(() => {\r\n        if (!forecastData || forecastData.length === 0) return { labels: [], datasets: [] };\r\n        const labels = forecastData.map(d => new Date(d.day).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n        const dataPoints = forecastData.map(d => d[selectedParameter]);\r\n        return {\r\n            labels,\r\n            datasets: [{\r\n                label: selectedParameter.replace('_max', '').toUpperCase(),\r\n                data: dataPoints,\r\n                borderColor: '#3b82f6',\r\n                backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                fill: true,\r\n                tension: 0.4,\r\n            }]\r\n        };\r\n    }, [forecastData, selectedParameter]);\r\n\r\n    const forecastChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: { legend: { display: false } },\r\n        scales: { x: { ticks: { color: '#94a3b8' } }, y: { ticks: { color: '#94a3b8' } } }\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-content\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img src=\"/aqi.webp\" alt=\"Logo\" width=\"32\" height=\"32\" />\r\n                        AirAware\r\n                    </Link>\r\n                    <ul className=\"nav-links\">\r\n                        <li><Link to=\"/\" className=\"nav-link\">Home</Link></li>\r\n                        <li><Link to=\"/map\" className=\"nav-link active\">Live Map</Link></li>\r\n                        {user ? (\r\n                            <li><Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link></li>\r\n                        ) : (\r\n                            <li><Link to=\"/login\" className=\"nav-link login-btn\">Login</Link></li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)} title={isPanelOpen ? \"Hide Panel\" : \"Show Panel\"}>\r\n                        <i className={`fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n                    </button>\r\n                    <div className=\"panel-header\">\r\n                        <h2 className=\"panel-title\"><i className=\"fas fa-satellite-dish\"></i> Monitoring Stations</h2>\r\n                        <div className=\"station-selector\">\r\n                            {Object.entries(stations).map(([id, station]) => (\r\n                                <button key={id} className={`station-btn ${selectedStationId === id ? 'active' : ''}`} onClick={() => setSelectedStationId(id)}>\r\n                                    <div className=\"station-btn-content\">\r\n                                        <span className=\"station-name\">{station.station_info.name}</span>\r\n                                        <span className=\"station-aqi\" style={{ color: getAQIColor(station.highest_sub_index) }}>\r\n                                            {Math.round(station.highest_sub_index) || 'N/A'}\r\n                                        </span>\r\n                                    </div>\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"panel-content\">\r\n                        {isLoading ? (\r\n                            <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div>\r\n                        ) : error ? (\r\n                            <div>Error: {error}</div>\r\n                        ) : selectedStationData ? (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                <p>Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})</p>\r\n                                <div className=\"pollutant-metrics\">\r\n                                    <div className=\"pollutant-grid\">\r\n                                        {pollutants.map(p => (\r\n                                            <div className=\"metric-card\" key={p.key}>\r\n                                                <div className=\"metric-label\">{p.name}</div>\r\n                                                <div className=\"metric-value\">\r\n                                                    {(selectedStationData.averages?.[p.key]?.toFixed(2)) ?? 'N/A'}\r\n                                                    <span className=\"metric-unit\"> µg/m³</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"forecast-section\">\r\n                                    <div className=\"forecast-header\">\r\n                                        <h4 className=\"forecast-title\">4-Day Forecast</h4>\r\n                                        <select className=\"parameter-selector\" value={selectedParameter} onChange={(e) => setSelectedParameter(e.target.value)}>\r\n                                            <option value=\"pm25_max\">PM2.5</option>\r\n                                            <option value=\"pm10_max\">PM10</option>\r\n                                            <option value=\"so2_max\">SO₂</option>\r\n                                            <option value=\"no2_max\">NO₂</option>\r\n                                            <option value=\"co_max\">CO</option>\r\n                                            <option value=\"o3_max\">O₃</option>\r\n                                            <option value=\"nh3_max\">NH₃</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    {isForecastLoading ? (\r\n                                        <div className=\"panel-loader\"><p>Loading forecast...</p></div>\r\n                                    ) : (\r\n                                        <div className=\"chart-container\">\r\n                                            <Line options={forecastChartOptions} data={forecastChartData} />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}