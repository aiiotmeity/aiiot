{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Enhanced Dashboard.js - Works with existing backend dashboard_api\n\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/Dashboard.css';\n\n// Lazy loading components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyMap = /*#__PURE__*/React.lazy(_c = () => import('./LazyMap').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Map Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 53\n  }, this)\n})));\n_c2 = LazyMap;\nconst LazyChart = /*#__PURE__*/React.lazy(_c3 = () => import('./LazyChart').catch(() => ({\n  default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 55\n  }, this)\n})));\n_c4 = LazyChart;\nfunction Dashboard() {\n  _s();\n  // ===== STATE MANAGEMENT =====\n  const [username] = useState(() => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      return user.name || 'User';\n    } catch {\n      return 'User';\n    }\n  });\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [userLocationName, setUserLocationName] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [locationStatus, setLocationStatus] = useState('detecting');\n  const [dataType, setDataType] = useState('station');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // ===== LOCATION DETECTION =====\n  const getUserLocation = useCallback(async () => {\n    if (!navigator.geolocation) {\n      console.log('📍 Geolocation not supported');\n      setLocationStatus('not_supported');\n      return null;\n    }\n    try {\n      setLocationStatus('detecting');\n      console.log('📍 Getting user location...');\n      const position = await new Promise((resolve, reject) => {\n        const timeout = setTimeout(() => reject(new Error('Timeout')), 10000);\n        navigator.geolocation.getCurrentPosition(pos => {\n          clearTimeout(timeout);\n          resolve(pos);\n        }, reject, {\n          enableHighAccuracy: true,\n          timeout: 8000,\n          maximumAge: 300000\n        });\n      });\n      const locationData = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        accuracy: position.coords.accuracy,\n        timestamp: Date.now(),\n        source: 'gps'\n      };\n      setUserLocation(locationData);\n      setLocationStatus('found');\n      console.log('✅ Location obtained:', locationData);\n\n      // Get location name using reverse geocoding\n      await getLocationName(locationData.lat, locationData.lng);\n      return locationData;\n    } catch (error) {\n      console.log('📍 Location detection failed:', error.message);\n      setLocationStatus('denied');\n      return null;\n    }\n  }, []);\n\n  // ===== REVERSE GEOCODING =====\n  const getLocationName = useCallback(async (lat, lng) => {\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);\n      if (response.ok) {\n        var _data$address, _data$address2, _data$address3, _data$address4, _data$address5;\n        const data = await response.json();\n        const locationName = {\n          display_name: data.display_name || `${lat.toFixed(4)}, ${lng.toFixed(4)}`,\n          city: ((_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.city) || ((_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.town) || ((_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : _data$address3.village),\n          state: (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : _data$address4.state,\n          country: (_data$address5 = data.address) === null || _data$address5 === void 0 ? void 0 : _data$address5.country\n        };\n        setUserLocationName(locationName);\n        console.log('📍 Location name:', locationName.display_name);\n      }\n    } catch (error) {\n      console.log('❌ Reverse geocoding failed:', error);\n    }\n  }, []);\n\n  // ===== FETCH DASHBOARD DATA =====\n  const fetchDashboardData = useCallback(async (locationData = null) => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Fetching dashboard data...');\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\n      url.searchParams.append('username', username);\n      if (locationData) {\n        url.searchParams.append('lat', locationData.lat.toString());\n        url.searchParams.append('lng', locationData.lng.toString());\n      }\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\n      const response = await fetch(url, {\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('✅ Dashboard data received:', data);\n\n      // Process the data from your backend structure\n      setDashboardData(data);\n\n      // Extract nearest station info from backend response\n      if (data.nearest_sensor_info) {\n        setNearestStation({\n          name: data.nearest_sensor_info.current_station_name || 'ASIET Campus Station',\n          distance: data.nearest_sensor_info.distance_to_nearest,\n          aqi: data.nearest_sensor_info.current_aqi\n        });\n      }\n\n      // Set data type based on IDW status and location proximity\n      if (data.idw_status === 'active' && data.idw_interpolated_values && Object.keys(data.idw_interpolated_values).length > 0) {\n        setDataType('interpolated');\n      } else {\n        setDataType('station');\n      }\n\n      // Set user location name if available\n      if (data.user_location && data.user_location.location_name) {\n        setUserLocationName({\n          display_name: data.user_location.location_name.display_name || data.user_location.location_name,\n          city: data.user_location.location_name.city,\n          state: data.user_location.location_name.state,\n          country: data.user_location.location_name.country\n        });\n      }\n      console.log('✅ Dashboard data processed successfully');\n    } catch (error) {\n      console.error('❌ Error fetching dashboard data:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [username, API_BASE_URL]);\n\n  // ===== INITIALIZATION =====\n  useEffect(() => {\n    const initializeDashboard = async () => {\n      console.log('⚡ Initializing dashboard...');\n\n      // Get user location first\n      const locationData = await getUserLocation();\n\n      // Fetch dashboard data with or without location\n      await fetchDashboardData(locationData);\n    };\n    initializeDashboard();\n  }, [getUserLocation, fetchDashboardData]);\n\n  // ===== MEMOIZED CALCULATIONS =====\n  const currentValues = useMemo(() => {\n    if (!dashboardData) return {};\n\n    // Use IDW interpolated values if available\n    if (dataType === 'interpolated' && dashboardData.idw_interpolated_values) {\n      return dashboardData.idw_interpolated_values;\n    }\n\n    // Use nearest station data\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_sensor_data) {\n      return dashboardData.nearest_sensor_info.current_sensor_data;\n    }\n\n    // Fallback to selected device data\n    if (dashboardData.all_stations_data && dashboardData.selected_device) {\n      const selectedData = dashboardData.all_stations_data[dashboardData.selected_device];\n      return selectedData !== null && selectedData !== void 0 && selectedData.latest_item ? {\n        pm25: selectedData.latest_item.pm25,\n        pm10: selectedData.latest_item.pm10,\n        so2: selectedData.latest_item.so2,\n        no2: selectedData.latest_item.no2,\n        co: selectedData.latest_item.co,\n        o3: selectedData.latest_item.o3,\n        nh3: selectedData.latest_item.nh3,\n        temp: selectedData.latest_item.temp,\n        hum: selectedData.latest_item.hum,\n        pre: selectedData.latest_item.pre\n      } : {};\n    }\n    return {};\n  }, [dashboardData, dataType]);\n  const currentAQI = useMemo(() => {\n    if (!dashboardData) return 50;\n\n    // Use interpolated AQI if available\n    if (dataType === 'interpolated' && dashboardData.interpolated_aqi) {\n      return dashboardData.interpolated_aqi;\n    }\n\n    // Use nearest station AQI\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_aqi) {\n      return dashboardData.nearest_sensor_info.current_aqi;\n    }\n\n    // Fallback to selected device AQI\n    if (dashboardData.all_stations_data && dashboardData.selected_device) {\n      const selectedData = dashboardData.all_stations_data[dashboardData.selected_device];\n      return (selectedData === null || selectedData === void 0 ? void 0 : selectedData.highest_sub_index) || 50;\n    }\n    return 50;\n  }, [dashboardData, dataType]);\n  const aqiStatus = useMemo(() => {\n    const aqi = currentAQI;\n    if (aqi <= 50) return {\n      status: 'GOOD',\n      color: '#10b981',\n      class: 'good'\n    };\n    if (aqi <= 100) return {\n      status: 'MODERATE',\n      color: '#f59e0b',\n      class: 'moderate'\n    };\n    if (aqi <= 150) return {\n      status: 'UNHEALTHY',\n      color: '#ef4444',\n      class: 'unhealthy'\n    };\n    return {\n      status: 'HAZARDOUS',\n      color: '#7c2d12',\n      class: 'hazardous'\n    };\n  }, [currentAQI]);\n\n  // ===== LOCATION STATUS DISPLAY =====\n  const LocationStatus = useMemo(() => {\n    const getLocationDisplay = () => {\n      switch (locationStatus) {\n        case 'detecting':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#f59e0b'\n            },\n            children: \"\\uD83D\\uDCCD Detecting location...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 18\n          }, this);\n        case 'found':\n          const locationName = (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'Your Location';\n          const accuracy = userLocation !== null && userLocation !== void 0 && userLocation.accuracy ? `±${Math.round(userLocation.accuracy)}m` : '';\n          const distance = nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `${nearestStation.distance.toFixed(1)}km` : '';\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981'\n            },\n            children: [\"\\uD83D\\uDCCD \", locationName, \" \", accuracy && `(${accuracy})`, nearestStation && distance && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#6b7280',\n                fontSize: '0.9em'\n              },\n              children: [' ', \" \\u2192 \", nearestStation.name, \" (\", distance, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this);\n        case 'denied':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ef4444'\n            },\n            children: \"\\uD83D\\uDCCD Location access denied - Using default area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 18\n          }, this);\n        case 'not_supported':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b7280'\n            },\n            children: \"\\uD83D\\uDCCD Location not supported - Using default area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 18\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b7280'\n            },\n            children: [\"\\uD83D\\uDCCD \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'ASIET Campus Area']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 18\n          }, this);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-info\",\n      children: getLocationDisplay()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 12\n    }, this);\n  }, [locationStatus, userLocationName, userLocation, nearestStation]);\n\n  // ===== DATA TYPE INDICATOR =====\n  const DataTypeIndicator = useMemo(() => {\n    if (dataType === 'interpolated') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-type-indicator interpolated\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-icon\",\n          children: \"\\uD83C\\uDFAF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Smart Interpolated Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-subtitle\",\n          children: \"Based on your precise location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-type-indicator station\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-icon\",\n          children: \"\\uD83D\\uDCE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Nearest Station Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-subtitle\",\n          children: nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `${nearestStation.distance.toFixed(1)}km from ${nearestStation.name}` : 'From closest monitoring station'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this);\n    }\n  }, [dataType, nearestStation]);\n\n  // ===== SENSOR NOTIFICATION =====\n  const SensorNotification = useMemo(() => {\n    if (dataType === 'interpolated') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-notification interpolated\",\n        children: [\"\\uD83C\\uDFAF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Smart Interpolated Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 14\n        }, this), \" - You are within 1km of monitoring stations. We're showing personalized air quality values calculated specifically for your location at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'your current position'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-notification station\",\n        children: [\"\\uD83D\\uDCE1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Nearest Sensor: \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'ASIET Campus Station']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 14\n        }, this), \" -\", locationStatus === 'found' && nearestStation !== null && nearestStation !== void 0 && nearestStation.distance ? `You are ${nearestStation.distance.toFixed(1)}km from the monitoring station at ${(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'your location'}.` : 'You are viewing data from our closest monitoring station.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this);\n    }\n  }, [dataType, nearestStation, userLocationName, locationStatus]);\n\n  // ===== METRIC CARDS =====\n  const metricIcons = useMemo(() => ({\n    pm25: '🌱',\n    pm10: '🍃',\n    so2: '🏭',\n    no2: '💨',\n    co: '☁️',\n    o3: '☀️',\n    nh3: '⚗️'\n  }), []);\n  const formatValue = useCallback((value, metric) => {\n    const numValue = parseFloat(value) || 0;\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\n  }, []);\n  const MetricCards = useMemo(() => {\n    const parameters = ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'];\n    return parameters.map(key => {\n      const value = currentValues[key] || 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: metricIcons[key] || '📊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(value, key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-label\",\n          children: key.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-unit\",\n          children: key === 'co' ? 'mg/m³' : 'µg/m³'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), dataType === 'interpolated' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-badge interpolated-badge\",\n          children: \"\\uD83C\\uDFAF Smart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), dataType === 'station' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-badge station-badge\",\n          children: \"\\uD83D\\uDCE1 Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this);\n    });\n  }, [currentValues, metricIcons, formatValue, dataType]);\n\n  // ===== FORECAST TABLE =====\n  const ForecastTable = useMemo(() => {\n    var _dashboardData$foreca;\n    const forecastData = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$foreca = dashboardData.forecast_data) === null || _dashboardData$foreca === void 0 ? void 0 : _dashboardData$foreca.nearest_station) || [];\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"forecast-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC5 Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC8 Max Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecastData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatValue(item[`${selectedParameter}_max`] || 0, selectedParameter)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  }, [dashboardData, selectedParameter, formatValue]);\n\n  // ===== EVENT HANDLERS =====\n  const handleParameterChange = useCallback(param => {\n    setSelectedParameter(param);\n  }, []);\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\n  const handleLogout = useCallback(() => {\n    localStorage.clear();\n    navigate('/login');\n  }, [navigate]);\n\n  // ===== LOADING STATE =====\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading dashboard data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Getting your location and air quality information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ===== ERROR STATE =====\n  if (error && !dashboardData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u26A0\\uFE0F Unable to Load Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We're having trouble connecting to our servers. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: () => window.location.reload(),\n            children: \"\\uD83D\\uDD04 Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ===== MAIN RENDER =====\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-status\",\n      children: [\"\\uD83D\\uDD34 LIVE \\u2022 Updates every 30s \\u2022 \", locationStatus === 'found' ? 'GPS Active' : 'Default Location', dataType === 'interpolated' && ' • Smart Analysis']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"navbar-brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/aqi.webp\",\n            alt: \"AQM Logo\",\n            width: \"40\",\n            height: \"40\",\n            style: {\n              marginRight: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), \"AirAware\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-toggle\",\n          onClick: toggleMenu,\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `nav-links ${isMenuOpen ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              className: \"nav-link\",\n              children: \"\\uD83C\\uDFE0 Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forecast\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCC8 Forecasting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/health-assessment\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCCB Health Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/health-report\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDCC4 Health Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/add-family\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDC65 Add Family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"user-info\",\n            children: [\"\\uD83D\\uDC64 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"nav-link login-btn\",\n              children: \"\\uD83D\\uDEAA Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert-banner ${aqiStatus.class}`,\n      children: [\"\\u2139\\uFE0F \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'Your Location', \" AQI: \", Math.round(currentAQI), \" - \", aqiStatus.status, nearestStation && nearestStation.distance && ` • Distance to station: ${nearestStation.distance.toFixed(1)}km`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"Welcome, \", username, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), LocationStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aqi-overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-value\",\n              style: {\n                color: aqiStatus.color\n              },\n              children: Math.round(currentAQI)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-status\",\n              children: dataType === 'interpolated' ? 'Smart Analysis AQI' : 'Nearest Station AQI'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-badge\",\n              children: (userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'Your Location'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"last-updated\",\n              children: [\"Last updated: \", new Date().toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), DataTypeIndicator, SensorNotification, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [\"\\uD83C\\uDF2C\\uFE0F Current Air Quality \", userLocationName !== null && userLocationName !== void 0 && userLocationName.display_name ? `at ${userLocationName.display_name}` : 'at Your Location', dataType === 'interpolated' && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" (Smart Analysis)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 45\n          }, this), dataType === 'station' && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" (Nearest Station)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-grid\",\n          children: MetricCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map-section\",\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDDFA\\uFE0F Interactive Sensor Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), userLocationName && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-display\",\n              children: [\"\\uD83D\\uDCCD \", userLocationName.display_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(React.Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '300px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  background: '#f8fafc'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uD83D\\uDDFA\\uFE0F Loading map...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(LazyMap, {\n                userLocation: userLocation,\n                dashboardData: dashboardData,\n                currentAQI: currentAQI,\n                dataType: dataType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '12px',\n              textAlign: 'center',\n              fontSize: '0.875rem',\n              color: '#6b7280'\n            },\n            children: [\"\\uD83D\\uDCCD Blue marker: Your location \\u2022 Tower markers: Monitoring stations\", dataType === 'interpolated' && ' • 🎯 Smart analysis active']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDCCA 4-Day Air Quality Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-source\",\n              children: [\"Data source: \", (nearestStation === null || nearestStation === void 0 ? void 0 : nearestStation.name) || 'ASIET Campus Station']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-controls\",\n            children: ['pm25', 'pm10', 'no2', 'o3', 'so2', 'co', 'nh3'].map(param => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `param-btn ${selectedParameter === param ? 'active' : ''}`,\n              onClick: () => handleParameterChange(param),\n              children: param.toUpperCase()\n            }, param, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-content\",\n            children: [/*#__PURE__*/_jsxDEV(React.Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '200px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  background: '#f8fafc'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uD83D\\uDCCA Loading chart...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(LazyChart, {\n                dashboardData: dashboardData,\n                selectedParameter: selectedParameter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-table-container\",\n              children: ForecastTable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83C\\uDF24\\uFE0F Weather Conditions (Live Data)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83C\\uDF21\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.temp || '28', \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.hum || '65', \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icon\",\n              children: \"\\uD83D\\uDCCF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-value\",\n              children: [currentValues.pre || '1013', \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-label\",\n              children: \"Atmospheric Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u26A1 System Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDE80 Smart Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), \" This dashboard uses advanced interpolation techniques to provide personalized air quality data based on your exact location when you're within 1km of monitoring stations.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDD04 System Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981',\n              fontWeight: 600\n            },\n            children: \" LIVE & OPTIMIZED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), \" | Location: \", locationStatus === 'found' ? `GPS Active (${(userLocationName === null || userLocationName === void 0 ? void 0 : userLocationName.display_name) || 'Located'})` : 'Default Area', \" | Data Type: \", dataType === 'interpolated' ? 'Smart Analysis' : 'Nearest Station', \" |\", loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#f59e0b'\n            },\n            children: \" Updating...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xA9 2025 AirAware Kerala - Smart Air Quality Monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"+jHl3oquDECIExXqBQ5+KPLzFCE=\", false, function () {\n  return [useNavigate];\n});\n_c5 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LazyMap$React.lazy\");\n$RefreshReg$(_c2, \"LazyMap\");\n$RefreshReg$(_c3, \"LazyChart$React.lazy\");\n$RefreshReg$(_c4, \"LazyChart\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useNavigate","jsxDEV","_jsxDEV","LazyMap","lazy","_c","catch","default","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","LazyChart","_c3","_c4","Dashboard","_s","username","user","JSON","parse","localStorage","getItem","name","selectedParameter","setSelectedParameter","isMenuOpen","setIsMenuOpen","dashboardData","setDashboardData","userLocation","setUserLocation","userLocationName","setUserLocationName","nearestStation","setNearestStation","locationStatus","setLocationStatus","dataType","setDataType","loading","setLoading","error","setError","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","getUserLocation","navigator","geolocation","console","log","position","Promise","resolve","reject","timeout","setTimeout","Error","getCurrentPosition","pos","clearTimeout","enableHighAccuracy","maximumAge","locationData","lat","coords","latitude","lng","longitude","accuracy","timestamp","Date","now","source","getLocationName","message","response","fetch","ok","_data$address","_data$address2","_data$address3","_data$address4","_data$address5","data","json","locationName","display_name","toFixed","city","address","town","village","state","country","fetchDashboardData","url","URL","searchParams","append","toString","controller","AbortController","timeoutId","abort","signal","headers","status","statusText","nearest_sensor_info","current_station_name","distance","distance_to_nearest","aqi","current_aqi","idw_status","idw_interpolated_values","Object","keys","length","user_location","location_name","initializeDashboard","currentValues","current_sensor_data","all_stations_data","selected_device","selectedData","latest_item","pm25","pm10","so2","no2","co","o3","nh3","temp","hum","pre","currentAQI","interpolated_aqi","highest_sub_index","aqiStatus","color","class","LocationStatus","getLocationDisplay","style","Math","round","fontSize","className","DataTypeIndicator","SensorNotification","metricIcons","formatValue","value","metric","numValue","parseFloat","MetricCards","parameters","map","key","toUpperCase","ForecastTable","_dashboardData$foreca","forecastData","forecast_data","nearest_station","item","index","day","handleParameterChange","param","toggleMenu","prev","handleLogout","clear","onClick","window","location","reload","href","src","alt","width","height","marginRight","toLocaleTimeString","id","Suspense","fallback","display","alignItems","justifyContent","background","marginTop","textAlign","fontWeight","_c5","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/Dashboard.js"],"sourcesContent":["// Enhanced Dashboard.js - Works with existing backend dashboard_api\r\n\r\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/Dashboard.css';\r\n\r\n// Lazy loading components\r\nconst LazyMap = React.lazy(() => \r\n  import('./LazyMap').catch(() => ({ default: () => <div>Map Loading...</div> }))\r\n);\r\n\r\nconst LazyChart = React.lazy(() => \r\n  import('./LazyChart').catch(() => ({ default: () => <div>Chart Loading...</div> }))\r\n);\r\n\r\nfunction Dashboard() {\r\n  // ===== STATE MANAGEMENT =====\r\n  const [username] = useState(() => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n      return user.name || 'User';\r\n    } catch {\r\n      return 'User';\r\n    }\r\n  });\r\n\r\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [userLocationName, setUserLocationName] = useState(null);\r\n  const [nearestStation, setNearestStation] = useState(null);\r\n  const [locationStatus, setLocationStatus] = useState('detecting');\r\n  const [dataType, setDataType] = useState('station');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // ===== LOCATION DETECTION =====\r\n  const getUserLocation = useCallback(async () => {\r\n    if (!navigator.geolocation) {\r\n      console.log('📍 Geolocation not supported');\r\n      setLocationStatus('not_supported');\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      setLocationStatus('detecting');\r\n      console.log('📍 Getting user location...');\r\n      \r\n      const position = await new Promise((resolve, reject) => {\r\n        const timeout = setTimeout(() => reject(new Error('Timeout')), 10000);\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos) => {\r\n            clearTimeout(timeout);\r\n            resolve(pos);\r\n          },\r\n          reject,\r\n          { enableHighAccuracy: true, timeout: 8000, maximumAge: 300000 }\r\n        );\r\n      });\r\n\r\n      const locationData = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n        accuracy: position.coords.accuracy,\r\n        timestamp: Date.now(),\r\n        source: 'gps'\r\n      };\r\n\r\n      setUserLocation(locationData);\r\n      setLocationStatus('found');\r\n      console.log('✅ Location obtained:', locationData);\r\n\r\n      // Get location name using reverse geocoding\r\n      await getLocationName(locationData.lat, locationData.lng);\r\n\r\n      return locationData;\r\n\r\n    } catch (error) {\r\n      console.log('📍 Location detection failed:', error.message);\r\n      setLocationStatus('denied');\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  // ===== REVERSE GEOCODING =====\r\n  const getLocationName = useCallback(async (lat, lng) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`\r\n      );\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const locationName = {\r\n          display_name: data.display_name || `${lat.toFixed(4)}, ${lng.toFixed(4)}`,\r\n          city: data.address?.city || data.address?.town || data.address?.village,\r\n          state: data.address?.state,\r\n          country: data.address?.country\r\n        };\r\n        \r\n        setUserLocationName(locationName);\r\n        console.log('📍 Location name:', locationName.display_name);\r\n      }\r\n    } catch (error) {\r\n      console.log('❌ Reverse geocoding failed:', error);\r\n    }\r\n  }, []);\r\n\r\n  // ===== FETCH DASHBOARD DATA =====\r\n  const fetchDashboardData = useCallback(async (locationData = null) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log('🔄 Fetching dashboard data...');\r\n\r\n      const url = new URL(`${API_BASE_URL}/api/dashboard/`);\r\n      url.searchParams.append('username', username);\r\n      \r\n      if (locationData) {\r\n        url.searchParams.append('lat', locationData.lat.toString());\r\n        url.searchParams.append('lng', locationData.lng.toString());\r\n      }\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 15000);\r\n\r\n      const response = await fetch(url, {\r\n        signal: controller.signal,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ Dashboard data received:', data);\r\n      \r\n      // Process the data from your backend structure\r\n      setDashboardData(data);\r\n      \r\n      // Extract nearest station info from backend response\r\n      if (data.nearest_sensor_info) {\r\n        setNearestStation({\r\n          name: data.nearest_sensor_info.current_station_name || 'ASIET Campus Station',\r\n          distance: data.nearest_sensor_info.distance_to_nearest,\r\n          aqi: data.nearest_sensor_info.current_aqi\r\n        });\r\n      }\r\n\r\n      // Set data type based on IDW status and location proximity\r\n      if (data.idw_status === 'active' && data.idw_interpolated_values && Object.keys(data.idw_interpolated_values).length > 0) {\r\n        setDataType('interpolated');\r\n      } else {\r\n        setDataType('station');\r\n      }\r\n\r\n      // Set user location name if available\r\n      if (data.user_location && data.user_location.location_name) {\r\n        setUserLocationName({\r\n          display_name: data.user_location.location_name.display_name || data.user_location.location_name,\r\n          city: data.user_location.location_name.city,\r\n          state: data.user_location.location_name.state,\r\n          country: data.user_location.location_name.country\r\n        });\r\n      }\r\n\r\n      console.log('✅ Dashboard data processed successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error fetching dashboard data:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [username, API_BASE_URL]);\r\n\r\n  // ===== INITIALIZATION =====\r\n  useEffect(() => {\r\n    const initializeDashboard = async () => {\r\n      console.log('⚡ Initializing dashboard...');\r\n      \r\n      // Get user location first\r\n      const locationData = await getUserLocation();\r\n      \r\n      // Fetch dashboard data with or without location\r\n      await fetchDashboardData(locationData);\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [getUserLocation, fetchDashboardData]);\r\n\r\n  // ===== MEMOIZED CALCULATIONS =====\r\n  const currentValues = useMemo(() => {\r\n    if (!dashboardData) return {};\r\n    \r\n    // Use IDW interpolated values if available\r\n    if (dataType === 'interpolated' && dashboardData.idw_interpolated_values) {\r\n      return dashboardData.idw_interpolated_values;\r\n    }\r\n    \r\n    // Use nearest station data\r\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_sensor_data) {\r\n      return dashboardData.nearest_sensor_info.current_sensor_data;\r\n    }\r\n    \r\n    // Fallback to selected device data\r\n    if (dashboardData.all_stations_data && dashboardData.selected_device) {\r\n      const selectedData = dashboardData.all_stations_data[dashboardData.selected_device];\r\n      return selectedData?.latest_item ? {\r\n        pm25: selectedData.latest_item.pm25,\r\n        pm10: selectedData.latest_item.pm10,\r\n        so2: selectedData.latest_item.so2,\r\n        no2: selectedData.latest_item.no2,\r\n        co: selectedData.latest_item.co,\r\n        o3: selectedData.latest_item.o3,\r\n        nh3: selectedData.latest_item.nh3,\r\n        temp: selectedData.latest_item.temp,\r\n        hum: selectedData.latest_item.hum,\r\n        pre: selectedData.latest_item.pre\r\n      } : {};\r\n    }\r\n    \r\n    return {};\r\n  }, [dashboardData, dataType]);\r\n\r\n  const currentAQI = useMemo(() => {\r\n    if (!dashboardData) return 50;\r\n    \r\n    // Use interpolated AQI if available\r\n    if (dataType === 'interpolated' && dashboardData.interpolated_aqi) {\r\n      return dashboardData.interpolated_aqi;\r\n    }\r\n    \r\n    // Use nearest station AQI\r\n    if (dashboardData.nearest_sensor_info && dashboardData.nearest_sensor_info.current_aqi) {\r\n      return dashboardData.nearest_sensor_info.current_aqi;\r\n    }\r\n    \r\n    // Fallback to selected device AQI\r\n    if (dashboardData.all_stations_data && dashboardData.selected_device) {\r\n      const selectedData = dashboardData.all_stations_data[dashboardData.selected_device];\r\n      return selectedData?.highest_sub_index || 50;\r\n    }\r\n    \r\n    return 50;\r\n  }, [dashboardData, dataType]);\r\n\r\n  const aqiStatus = useMemo(() => {\r\n    const aqi = currentAQI;\r\n    if (aqi <= 50) return { status: 'GOOD', color: '#10b981', class: 'good' };\r\n    if (aqi <= 100) return { status: 'MODERATE', color: '#f59e0b', class: 'moderate' };\r\n    if (aqi <= 150) return { status: 'UNHEALTHY', color: '#ef4444', class: 'unhealthy' };\r\n    return { status: 'HAZARDOUS', color: '#7c2d12', class: 'hazardous' };\r\n  }, [currentAQI]);\r\n\r\n  // ===== LOCATION STATUS DISPLAY =====\r\n  const LocationStatus = useMemo(() => {\r\n    const getLocationDisplay = () => {\r\n      switch (locationStatus) {\r\n        case 'detecting':\r\n          return <span style={{ color: '#f59e0b' }}>📍 Detecting location...</span>;\r\n          \r\n        case 'found':\r\n          const locationName = userLocationName?.display_name || 'Your Location';\r\n          const accuracy = userLocation?.accuracy ? `±${Math.round(userLocation.accuracy)}m` : '';\r\n          const distance = nearestStation?.distance ? `${nearestStation.distance.toFixed(1)}km` : '';\r\n          \r\n          return (\r\n            <span style={{ color: '#10b981' }}>\r\n              📍 {locationName} {accuracy && `(${accuracy})`}\r\n              {nearestStation && distance && (\r\n                <span style={{ color: '#6b7280', fontSize: '0.9em' }}>\r\n                  {' '} → {nearestStation.name} ({distance})\r\n                </span>\r\n              )}\r\n            </span>\r\n          );\r\n          \r\n        case 'denied':\r\n          return <span style={{ color: '#ef4444' }}>📍 Location access denied - Using default area</span>;\r\n          \r\n        case 'not_supported':\r\n          return <span style={{ color: '#6b7280' }}>📍 Location not supported - Using default area</span>;\r\n          \r\n        default:\r\n          return <span style={{ color: '#6b7280' }}>📍 {nearestStation?.name || 'ASIET Campus Area'}</span>;\r\n      }\r\n    };\r\n\r\n    return <div className=\"location-info\">{getLocationDisplay()}</div>;\r\n  }, [locationStatus, userLocationName, userLocation, nearestStation]);\r\n\r\n  // ===== DATA TYPE INDICATOR =====\r\n  const DataTypeIndicator = useMemo(() => {\r\n    if (dataType === 'interpolated') {\r\n      return (\r\n        <div className=\"data-type-indicator interpolated\">\r\n          <span className=\"indicator-icon\">🎯</span>\r\n          <span className=\"indicator-text\">Smart Interpolated Values</span>\r\n          <span className=\"indicator-subtitle\">Based on your precise location</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"data-type-indicator station\">\r\n          <span className=\"indicator-icon\">📡</span>\r\n          <span className=\"indicator-text\">Nearest Station Data</span>\r\n          <span className=\"indicator-subtitle\">\r\n            {nearestStation?.distance ? \r\n              `${nearestStation.distance.toFixed(1)}km from ${nearestStation.name}` : \r\n              'From closest monitoring station'\r\n            }\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  }, [dataType, nearestStation]);\r\n\r\n  // ===== SENSOR NOTIFICATION =====\r\n  const SensorNotification = useMemo(() => {\r\n    if (dataType === 'interpolated') {\r\n      return (\r\n        <div className=\"sensor-notification interpolated\">\r\n          🎯 <strong>Smart Interpolated Data</strong> - \r\n          You are within 1km of monitoring stations. \r\n          We're showing personalized air quality values calculated specifically for your location at{' '}\r\n          <strong>{userLocationName?.display_name || 'your current position'}</strong>.\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"sensor-notification station\">\r\n          📡 <strong>Nearest Sensor: {nearestStation?.name || 'ASIET Campus Station'}</strong> - \r\n          {locationStatus === 'found' && nearestStation?.distance ? \r\n            `You are ${nearestStation.distance.toFixed(1)}km from the monitoring station at ${userLocationName?.display_name || 'your location'}.` :\r\n            'You are viewing data from our closest monitoring station.'\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }, [dataType, nearestStation, userLocationName, locationStatus]);\r\n\r\n  // ===== METRIC CARDS =====\r\n  const metricIcons = useMemo(() => ({\r\n    pm25: '🌱', pm10: '🍃', so2: '🏭', no2: '💨',\r\n    co: '☁️', o3: '☀️', nh3: '⚗️'\r\n  }), []);\r\n\r\n  const formatValue = useCallback((value, metric) => {\r\n    const numValue = parseFloat(value) || 0;\r\n    return metric === 'co' ? numValue.toFixed(1) : Math.round(numValue);\r\n  }, []);\r\n\r\n  const MetricCards = useMemo(() => {\r\n    const parameters = ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'];\r\n    \r\n    return parameters.map((key) => {\r\n      const value = currentValues[key] || 0;\r\n      \r\n      return (\r\n        <div key={key} className=\"metric-card\">\r\n          <div className=\"metric-icon\">{metricIcons[key] || '📊'}</div>\r\n          <div className=\"metric-value\">{formatValue(value, key)}</div>\r\n          <div className=\"metric-label\">{key.toUpperCase()}</div>\r\n          <div className=\"metric-unit\">{key === 'co' ? 'mg/m³' : 'µg/m³'}</div>\r\n          {dataType === 'interpolated' && (\r\n            <div className=\"metric-badge interpolated-badge\">\r\n              🎯 Smart\r\n            </div>\r\n          )}\r\n          {dataType === 'station' && (\r\n            <div className=\"metric-badge station-badge\">\r\n              📡 Station\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  }, [currentValues, metricIcons, formatValue, dataType]);\r\n\r\n  // ===== FORECAST TABLE =====\r\n  const ForecastTable = useMemo(() => {\r\n    const forecastData = dashboardData?.forecast_data?.nearest_station || [];\r\n    \r\n    return (\r\n      <table className=\"forecast-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>📅 Day</th>\r\n            <th>📈 Max Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecastData.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{item.day}</td>\r\n              <td>{formatValue(item[`${selectedParameter}_max`] || 0, selectedParameter)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }, [dashboardData, selectedParameter, formatValue]);\r\n\r\n  // ===== EVENT HANDLERS =====\r\n  const handleParameterChange = useCallback((param) => {\r\n    setSelectedParameter(param);\r\n  }, []);\r\n\r\n  const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\r\n  \r\n  const handleLogout = useCallback(() => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  }, [navigate]);\r\n\r\n  // ===== LOADING STATE =====\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading dashboard data...</p>\r\n          <small>Getting your location and air quality information</small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ===== ERROR STATE =====\r\n  if (error && !dashboardData) {\r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-message\">\r\n            <h2>⚠️ Unable to Load Dashboard</h2>\r\n            <p>We're having trouble connecting to our servers. Please try again.</p>\r\n            <button \r\n              className=\"retry-button\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              🔄 Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ===== MAIN RENDER =====\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      {/* Real-time Status */}\r\n      <div className=\"realtime-status\">\r\n        🔴 LIVE • Updates every 30s • {locationStatus === 'found' ? 'GPS Active' : 'Default Location'}\r\n        {dataType === 'interpolated' && ' • Smart Analysis'}\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-content\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            <img src=\"/aqi.webp\" alt=\"AQM Logo\" width=\"40\" height=\"40\" style={{ marginRight: '12px' }} />\r\n            AirAware\r\n          </a>\r\n\r\n          <div className=\"menu-toggle\" onClick={toggleMenu}>☰</div>\r\n\r\n          <ul className={`nav-links ${isMenuOpen ? 'active' : ''}`}>\r\n            <li><a href=\"/\" className=\"nav-link\">🏠 Home</a></li>\r\n            <li><a href=\"/forecast\" className=\"nav-link\">📈 Forecasting</a></li>\r\n            <li><a href=\"/health-assessment\" className=\"nav-link\">📋 Health Update</a></li>\r\n            <li><a href=\"/health-report\" className=\"nav-link\">📄 Health Report</a></li>\r\n            <li><a href=\"/add-family\" className=\"nav-link\">👥 Add Family</a></li>\r\n            <li className=\"user-info\">👤 <span>{username}</span></li>\r\n            <li>\r\n              <button onClick={handleLogout} className=\"nav-link login-btn\">🚪 Logout</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Alert Banner */}\r\n      <div className={`alert-banner ${aqiStatus.class}`}>\r\n        ℹ️ <span>\r\n          {userLocationName?.display_name || 'Your Location'} AQI: {Math.round(currentAQI)} - {aqiStatus.status}\r\n          {nearestStation && nearestStation.distance && (\r\n            ` • Distance to station: ${nearestStation.distance.toFixed(1)}km`\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Main Container */}\r\n      <div className=\"main-container\">\r\n        {/* Welcome Header */}\r\n        <div className=\"welcome-header\">\r\n          <div className=\"welcome-content\">\r\n            <div className=\"welcome-info\">\r\n              <div className=\"user-avatar\">👤</div>\r\n              <div className=\"welcome-text\">\r\n                <h1>Welcome, {username}!</h1>\r\n                {LocationStatus}\r\n              </div>\r\n            </div>\r\n            <div className=\"aqi-overview\">\r\n              <div className=\"aqi-value\" style={{ color: aqiStatus.color }}>\r\n                {Math.round(currentAQI)}\r\n              </div>\r\n              <div className=\"aqi-status\">\r\n                {dataType === 'interpolated' ? 'Smart Analysis AQI' : 'Nearest Station AQI'}\r\n              </div>\r\n              <div className=\"aqi-badge\">\r\n                {userLocationName?.display_name || nearestStation?.name || 'Your Location'}\r\n              </div>\r\n              <div className=\"last-updated\">\r\n                Last updated: {new Date().toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Data Type Indicator */}\r\n        {DataTypeIndicator}\r\n\r\n        {/* Sensor Notification */}\r\n        {SensorNotification}\r\n\r\n        {/* Air Quality Metrics */}\r\n        <div className=\"metrics-section\">\r\n          <h2 className=\"section-title\">\r\n            🌬️ Current Air Quality {userLocationName?.display_name ? `at ${userLocationName.display_name}` : 'at Your Location'}\r\n            {dataType === 'interpolated' && <small> (Smart Analysis)</small>}\r\n            {dataType === 'station' && <small> (Nearest Station)</small>}\r\n          </h2>\r\n          <div className=\"metrics-grid\">\r\n            {MetricCards}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Dashboard Grid */}\r\n        <div className=\"dashboard-grid\">\r\n          {/* Interactive Map */}\r\n          <div id=\"map-section\" className=\"dashboard-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">🗺️ Interactive Sensor Map</h3>\r\n              {userLocationName && (\r\n                <div className=\"location-display\">\r\n                  📍 {userLocationName.display_name}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"map-container\">\r\n              <React.Suspense fallback={\r\n                <div style={{ height: '300px', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#f8fafc' }}>\r\n                  <div>🗺️ Loading map...</div>\r\n                </div>\r\n              }>\r\n                <LazyMap \r\n                  userLocation={userLocation} \r\n                  dashboardData={dashboardData}\r\n                  currentAQI={currentAQI}\r\n                  dataType={dataType}\r\n                />\r\n              </React.Suspense>\r\n            </div>\r\n            <div style={{ marginTop: '12px', textAlign: 'center', fontSize: '0.875rem', color: '#6b7280' }}>\r\n              📍 Blue marker: Your location • Tower markers: Monitoring stations\r\n              {dataType === 'interpolated' && ' • 🎯 Smart analysis active'}\r\n            </div>\r\n          </div>\r\n\r\n          {/* AQI Forecast */}\r\n          <div className=\"dashboard-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">📊 4-Day Air Quality Forecast</h3>\r\n              <div className=\"forecast-source\">\r\n                Data source: {nearestStation?.name || 'ASIET Campus Station'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"forecast-controls\">\r\n              {['pm25', 'pm10', 'no2', 'o3', 'so2', 'co', 'nh3'].map(param => (\r\n                <button \r\n                  key={param}\r\n                  className={`param-btn ${selectedParameter === param ? 'active' : ''}`}\r\n                  onClick={() => handleParameterChange(param)}\r\n                >\r\n                  {param.toUpperCase()}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"forecast-content\">\r\n              <React.Suspense fallback={\r\n                <div style={{ height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#f8fafc' }}>\r\n                  <div>📊 Loading chart...</div>\r\n                </div>\r\n              }>\r\n                <LazyChart \r\n                  dashboardData={dashboardData}\r\n                  selectedParameter={selectedParameter}\r\n                />\r\n              </React.Suspense>\r\n              \r\n              <div className=\"forecast-table-container\">\r\n                {ForecastTable}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Weather Information */}\r\n        <div className=\"weather-section\">\r\n          <h2 className=\"section-title\">🌤️ Weather Conditions (Live Data)</h2>\r\n          <div className=\"weather-grid\">\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">🌡️</div>\r\n              <div className=\"weather-value\">{currentValues.temp || '28'}°C</div>\r\n              <div className=\"weather-label\">Temperature</div>\r\n            </div>\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">💧</div>\r\n              <div className=\"weather-value\">{currentValues.hum || '65'}%</div>\r\n              <div className=\"weather-label\">Humidity</div>\r\n            </div>\r\n            <div className=\"weather-card\">\r\n              <div className=\"weather-icon\">📏</div>\r\n              <div className=\"weather-value\">{currentValues.pre || '1013'} hPa</div>\r\n              <div className=\"weather-label\">Atmospheric Pressure</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* System Status */}\r\n        <div className=\"disclaimer\">\r\n          <h3>⚡ System Status</h3>\r\n          <p>\r\n            <strong>🚀 Smart Analysis:</strong> This dashboard uses advanced interpolation techniques \r\n            to provide personalized air quality data based on your exact location when you're within 1km of monitoring stations.\r\n          </p>\r\n          <p>\r\n            <strong>🔄 System Status:</strong> \r\n            <span style={{ color: '#10b981', fontWeight: 600 }}> LIVE & OPTIMIZED</span> | \r\n            Location: {locationStatus === 'found' ? \r\n              `GPS Active (${userLocationName?.display_name || 'Located'})` : \r\n              'Default Area'\r\n            } | \r\n            Data Type: {dataType === 'interpolated' ? 'Smart Analysis' : 'Nearest Station'} |\r\n            {loading && <span style={{ color: '#f59e0b' }}> Updating...</span>}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          <div className=\"footer-bottom\">\r\n            <p>&copy; 2025 AirAware Kerala - Smart Air Quality Monitoring</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}