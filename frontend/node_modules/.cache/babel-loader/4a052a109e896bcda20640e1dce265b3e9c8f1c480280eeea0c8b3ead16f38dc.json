{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\n// Helper function to get AQI color\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  // ... (rest of your color logic)\n  return '#4c1d95';\n};\n\n// Helper function to get AQI status\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  // ... (rest of your status logic)\n  return 'Hazardous';\n};\nconst MapPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const navigate = useNavigate();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // --- MAP INITIALIZATION ---\n  useEffect(() => {\n    let isMounted = true;\n    if (mapRef.current && !map) {\n      const mapInstance = window.L.map(mapRef.current, {\n        zoomControl: false,\n        attributionControl: false\n      }).setView([10.176, 76.430], 15);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Â© OpenStreetMap contributors'\n      }).addTo(mapInstance);\n      if (isMounted) {\n        setMap(mapInstance);\n      }\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [map]); // Dependency on `map` ensures it only runs until map is set\n\n  // --- FETCH REAL-TIME DATA ---\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n\n  // --- FETCH FORECAST DATA ---\n  useEffect(() => {\n    if (!selectedStationId) return;\n    const fetchForecastData = async () => {\n      setIsForecastLoading(true);\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\n        if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\n        const data = await response.json();\n        setForecastData(data.forecast_data || []);\n      } catch (err) {\n        console.error(\"Forecast fetch error:\", err);\n        setForecastData([]);\n      } finally {\n        setIsForecastLoading(false);\n      }\n    };\n    fetchForecastData();\n  }, [selectedStationId, API_BASE_URL]);\n\n  // --- UPDATE MAP MARKERS ---\n  useEffect(() => {\n    if (!map || Object.keys(stations).length === 0) return;\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const markerOptions = {\n        radius: selectedStationId === id ? 12 : 8,\n        fillColor: getAQIColor(aqi),\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\n        weight: selectedStationId === id ? 3 : 1.5,\n        opacity: 1,\n        fillOpacity: 0.85\n      };\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\n      } else {\n        const marker = window.L.circleMarker([lat, lng], markerOptions).addTo(map);\n        marker.on('click', () => {\n          setSelectedStationId(id);\n          setIsPanelOpen(true);\n          map.setView([lat, lng], 16);\n        });\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [map, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle panel-toggle-closed\",\n          onClick: () => setIsPanelOpen(true),\n          title: \"Show Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-chevron-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle panel-toggle-open\",\n          onClick: () => setIsPanelOpen(false),\n          title: \"Hide Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-chevron-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.entries(stations).map(([id, station]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === id ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"station-btn-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-name\",\n                  children: station.station_info.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-aqi\",\n                  style: {\n                    color: getAQIColor(station.highest_sub_index)\n                  },\n                  children: Math.round(station.highest_sub_index) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 27\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"oqzp2EBBGKpBRrERaJSz8I1SGbs=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","MapPage","_s","map","setMap","stations","setStations","selectedStationId","setSelectedStationId","forecastData","setForecastData","isLoading","setIsLoading","isForecastLoading","setIsForecastLoading","error","setError","selectedParameter","setSelectedParameter","isPanelOpen","setIsPanelOpen","mapRef","markersRef","navigate","user","logout","API_BASE_URL","process","env","REACT_APP_API_URL","isMounted","current","mapInstance","window","L","zoomControl","attributionControl","setView","tileLayer","attribution","addTo","fetchRealtimeData","response","fetch","ok","Error","status","data","json","Object","keys","length","err","message","interval","setInterval","clearInterval","fetchForecastData","forecast_data","console","entries","forEach","id","station","lat","lng","station_info","highest_sub_index","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","setLatLng","setStyle","marker","circleMarker","on","selectedStationData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","style","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\n// Helper function to get AQI color\r\nconst getAQIColor = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return '#6b7280';\r\n  if (aqi <= 50) return '#10b981';\r\n  if (aqi <= 100) return '#f59e0b';\r\n  // ... (rest of your color logic)\r\n  return '#4c1d95';\r\n};\r\n\r\n// Helper function to get AQI status\r\nconst getAQIStatus = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return 'Unknown';\r\n  if (aqi <= 50) return 'Good';\r\n  // ... (rest of your status logic)\r\n  return 'Hazardous';\r\n};\r\n\r\nconst MapPage = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [stations, setStations] = useState({});\r\n  const [selectedStationId, setSelectedStationId] = useState(null);\r\n  const [forecastData, setForecastData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // --- MAP INITIALIZATION ---\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (mapRef.current && !map) {\r\n      const mapInstance = window.L.map(mapRef.current, {\r\n        zoomControl: false,\r\n        attributionControl: false,\r\n      }).setView([10.176, 76.430], 15);\r\n      \r\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: 'Â© OpenStreetMap contributors'\r\n      }).addTo(mapInstance);\r\n      \r\n      if (isMounted) {\r\n        setMap(mapInstance);\r\n      }\r\n    }\r\n    return () => { isMounted = false; };\r\n  }, [map]); // Dependency on `map` ensures it only runs until map is set\r\n\r\n  // --- FETCH REAL-TIME DATA ---\r\n  const fetchRealtimeData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n      const data = await response.json();\r\n      setStations(data.stations);\r\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n        setSelectedStationId(Object.keys(data.stations)[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [API_BASE_URL, selectedStationId]);\r\n\r\n  useEffect(() => {\r\n    fetchRealtimeData();\r\n    const interval = setInterval(fetchRealtimeData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchRealtimeData]);\r\n\r\n  // --- FETCH FORECAST DATA ---\r\n  useEffect(() => {\r\n    if (!selectedStationId) return;\r\n    const fetchForecastData = async () => {\r\n      setIsForecastLoading(true);\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/station/${selectedStationId}/forecast/`);\r\n        if (!response.ok) throw new Error(`Forecast error: ${response.status}`);\r\n        const data = await response.json();\r\n        setForecastData(data.forecast_data || []);\r\n      } catch (err) {\r\n        console.error(\"Forecast fetch error:\", err);\r\n        setForecastData([]);\r\n      } finally {\r\n        setIsForecastLoading(false);\r\n      }\r\n    };\r\n    fetchForecastData();\r\n  }, [selectedStationId, API_BASE_URL]);\r\n\r\n  // --- UPDATE MAP MARKERS ---\r\n  useEffect(() => {\r\n    if (!map || Object.keys(stations).length === 0) return;\r\n\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      \r\n      const markerOptions = {\r\n        radius: selectedStationId === id ? 12 : 8,\r\n        fillColor: getAQIColor(aqi),\r\n        color: selectedStationId === id ? '#ffffff' : '#1e293b',\r\n        weight: selectedStationId === id ? 3 : 1.5,\r\n        opacity: 1,\r\n        fillOpacity: 0.85\r\n      };\r\n\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\r\n      } else {\r\n        const marker = window.L.circleMarker([lat, lng], markerOptions).addTo(map);\r\n        marker.on('click', () => {\r\n          setSelectedStationId(id);\r\n          setIsPanelOpen(true);\r\n          map.setView([lat, lng], 16);\r\n        });\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [map, stations, selectedStationId]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"map-container\">\r\n          <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n          <button \r\n            className=\"panel-toggle panel-toggle-closed\"\r\n            onClick={() => setIsPanelOpen(true)}\r\n            title=\"Show Panel\"\r\n          >\r\n            <i className=\"fas fa-chevron-left\"></i>\r\n          </button>\r\n        </div>\r\n        \r\n        <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n          <button \r\n            className=\"panel-toggle panel-toggle-open\"\r\n            onClick={() => setIsPanelOpen(false)}\r\n            title=\"Hide Panel\"\r\n          >\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </button>\r\n          \r\n          <div className=\"panel-header\">\r\n            <h2 className=\"panel-title\">\r\n              <i className=\"fas fa-map-marker-alt\"></i> Monitoring Stations\r\n            </h2>\r\n            <div className=\"station-selector\">\r\n              {Object.entries(stations).map(([id, station]) => (\r\n                <button \r\n                  key={id} \r\n                  className={`station-btn ${selectedStationId === id ? 'active' : ''}`} \r\n                  onClick={() => setSelectedStationId(id)}\r\n                >\r\n                  <div className=\"station-btn-content\">\r\n                    <span className=\"station-name\">{station.station_info.name}</span>\r\n                    <span className=\"station-aqi\" style={{ color: getAQIColor(station.highest_sub_index) }}>\r\n                      {Math.round(station.highest_sub_index) || 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"panel-content\">\r\n            {/* Panel content will go here */}\r\n            {isLoading && <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div>}\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            {/* You can add back the AQI overview, pollutant metrics, and forecast sections here */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}