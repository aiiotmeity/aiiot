{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\n\n// This is the only place you need to register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {\n  if (aqi === null || aqi === undefined) return '#6b7280';\n  if (aqi <= 50) return '#10b981';\n  if (aqi <= 100) return '#f59e0b';\n  if (aqi <= 200) return '#ef4444';\n  return '#7c2d12';\n};\nconst getAQIStatus = aqi => {\n  if (aqi === null || aqi === undefined) return 'Unknown';\n  if (aqi <= 50) return 'Good';\n  if (aqi <= 100) return 'Moderate';\n  if (aqi <= 150) return 'Unhealthy';\n  if (aqi <= 200) return 'Severe';\n  if (aqi <= 300) return 'Very Severe';\n  return 'Hazardous';\n};\nconst MapPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const L = window.L;\n      const mapInstance = L.map(mapRef.current).setView([10.176, 76.430], 14);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\n      setMap(mapInstance);\n    }\n  }, [map]);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n  useEffect(() => {\n    if (!selectedStationId) return;\n    const fetchForecast = async () => {\n      setIsForecastLoading(true);\n      // Fetch forecast logic here...\n    };\n    fetchForecast();\n  }, [selectedStationId, API_BASE_URL]);\n  useEffect(() => {\n    if (!map || Object.keys(stations).length === 0) return;\n    const L = window.L;\n    Object.entries(stations).forEach(([id, station]) => {\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const markerOptions = {\n        radius: selectedStationId === id ? 12 : 8,\n        fillColor: getAQIColor(aqi),\n        color: '#ffffff',\n        weight: 2,\n        opacity: 1,\n        fillOpacity: 0.9\n      };\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\n      } else {\n        const marker = L.circleMarker([lat, lng], markerOptions).addTo(map);\n        marker.on('click', () => {\n          setSelectedStationId(id);\n          setIsPanelOpen(true);\n          map.setView([lat, lng], 16);\n        });\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [map, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen),\n          title: isPanelOpen ? \"Hide Panel\" : \"Show Panel\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-satellite-dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.entries(stations).map(([id, station]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `station-btn ${selectedStationId === id ? 'active' : ''}`,\n              onClick: () => setSelectedStationId(id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"station-btn-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-name\",\n                  children: station.station_info.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"station-aqi\",\n                  style: {\n                    color: getAQIColor(station.highest_sub_index)\n                  },\n                  children: Math.round(station.highest_sub_index) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 27\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }, this), selectedStationData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current AQI: \", Math.round(selectedStationData.highest_sub_index), \" (\", getAQIStatus(selectedStationData.highest_sub_index), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), isForecastLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading forecast...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"LXQsHsPjBAj3P6DkVsfqavEbbjg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","register","getAQIColor","aqi","undefined","getAQIStatus","MapPage","_s","map","setMap","stations","setStations","selectedStationId","setSelectedStationId","forecastData","setForecastData","isLoading","setIsLoading","isForecastLoading","setIsForecastLoading","error","setError","isPanelOpen","setIsPanelOpen","mapRef","markersRef","navigate","user","API_BASE_URL","process","env","REACT_APP_API_URL","current","L","window","mapInstance","setView","tileLayer","addTo","fetchRealtimeData","response","fetch","ok","Error","status","data","json","Object","keys","length","err","message","interval","setInterval","clearInterval","fetchForecast","entries","forEach","id","station","lat","lng","station_info","highest_sub_index","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","setLatLng","setStyle","marker","circleMarker","on","selectedStationData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","style","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\n// This is the only place you need to register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst getAQIColor = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return '#6b7280';\r\n  if (aqi <= 50) return '#10b981';\r\n  if (aqi <= 100) return '#f59e0b';\r\n  if (aqi <= 200) return '#ef4444';\r\n  return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return 'Unknown';\r\n  if (aqi <= 50) return 'Good';\r\n  if (aqi <= 100) return 'Moderate';\r\n  if (aqi <= 150) return 'Unhealthy';\r\n  if (aqi <= 200) return 'Severe';\r\n  if (aqi <= 300) return 'Very Severe';\r\n  return 'Hazardous';\r\n};\r\n\r\nconst MapPage = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [stations, setStations] = useState({});\r\n  const [selectedStationId, setSelectedStationId] = useState(null);\r\n  const [forecastData, setForecastData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isForecastLoading, setIsForecastLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      const L = window.L;\r\n      const mapInstance = L.map(mapRef.current).setView([10.176, 76.430], 14);\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance);\r\n      setMap(mapInstance);\r\n    }\r\n  }, [map]);\r\n\r\n  const fetchRealtimeData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n      const data = await response.json();\r\n      setStations(data.stations);\r\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n        setSelectedStationId(Object.keys(data.stations)[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [API_BASE_URL, selectedStationId]);\r\n\r\n  useEffect(() => {\r\n    fetchRealtimeData();\r\n    const interval = setInterval(fetchRealtimeData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchRealtimeData]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedStationId) return;\r\n    const fetchForecast = async () => {\r\n      setIsForecastLoading(true);\r\n      // Fetch forecast logic here...\r\n    };\r\n    fetchForecast();\r\n  }, [selectedStationId, API_BASE_URL]);\r\n\r\n  useEffect(() => {\r\n    if (!map || Object.keys(stations).length === 0) return;\r\n    const L = window.L;\r\n\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      \r\n      const markerOptions = {\r\n        radius: selectedStationId === id ? 12 : 8,\r\n        fillColor: getAQIColor(aqi),\r\n        color: '#ffffff',\r\n        weight: 2,\r\n        opacity: 1,\r\n        fillOpacity: 0.9\r\n      };\r\n\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setStyle(markerOptions);\r\n      } else {\r\n        const marker = L.circleMarker([lat, lng], markerOptions).addTo(map);\r\n        marker.on('click', () => {\r\n          setSelectedStationId(id);\r\n          setIsPanelOpen(true);\r\n          map.setView([lat, lng], 16);\r\n        });\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [map, stations, selectedStationId]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"map-container\">\r\n          <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n        </div>\r\n        \r\n        <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n          <button \r\n            className=\"panel-toggle\"\r\n            onClick={() => setIsPanelOpen(!isPanelOpen)}\r\n            title={isPanelOpen ? \"Hide Panel\" : \"Show Panel\"}\r\n          >\r\n            <i className={`fas ${isPanelOpen ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n          </button>\r\n          \r\n          <div className=\"panel-header\">\r\n            <h2 className=\"panel-title\">\r\n              <i className=\"fas fa-satellite-dish\"></i> Monitoring Stations\r\n            </h2>\r\n            <div className=\"station-selector\">\r\n              {Object.entries(stations).map(([id, station]) => (\r\n                <button \r\n                  key={id} \r\n                  className={`station-btn ${selectedStationId === id ? 'active' : ''}`} \r\n                  onClick={() => setSelectedStationId(id)}\r\n                >\r\n                  <div className=\"station-btn-content\">\r\n                    <span className=\"station-name\">{station.station_info.name}</span>\r\n                    <span className=\"station-aqi\" style={{ color: getAQIColor(station.highest_sub_index) }}>\r\n                      {Math.round(station.highest_sub_index) || 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"panel-content\">\r\n            {isLoading && <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div>}\r\n            {error && <div>Error: {error}</div>}\r\n            {selectedStationData && (\r\n              <div>\r\n                <h3>{selectedStationData.station_info.name}</h3>\r\n                <p>Current AQI: {Math.round(selectedStationData.highest_sub_index)} ({getAQIStatus(selectedStationData.highest_sub_index)})</p>\r\n                {isForecastLoading && <p>Loading forecast...</p>}\r\n                {/* Forecast chart would go here */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,UAAU;AACjB,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MACF,CAAC;AAED,MAAMK,WAAW,GAAIC,GAAG,IAAK;EAC3B,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE,OAAO,SAAS;EACvD,IAAID,GAAG,IAAI,EAAE,EAAE,OAAO,SAAS;EAC/B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,SAAS;EAChC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,SAAS;EAChC,OAAO,SAAS;AAClB,CAAC;AAED,MAAME,YAAY,GAAIF,GAAG,IAAK;EAC5B,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE,OAAO,SAAS;EACvD,IAAID,GAAG,IAAI,EAAE,EAAE,OAAO,MAAM;EAC5B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,UAAU;EACjC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,WAAW;EAClC,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,QAAQ;EAC/B,IAAIA,GAAG,IAAI,GAAG,EAAE,OAAO,aAAa;EACpC,OAAO,WAAW;AACpB,CAAC;AAED,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC+B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM2C,MAAM,GAAGzC,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM0C,UAAU,GAAG1C,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAM2C,QAAQ,GAAGxC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEyC;EAAK,CAAC,GAAG7B,OAAO,CAAC,CAAC;EAC1B,MAAM8B,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EAE7EjD,SAAS,CAAC,MAAM;IACd,IAAI0C,MAAM,CAACQ,OAAO,IAAI,CAACxB,GAAG,EAAE;MAC1B,MAAMyB,CAAC,GAAGC,MAAM,CAACD,CAAC;MAClB,MAAME,WAAW,GAAGF,CAAC,CAACzB,GAAG,CAACgB,MAAM,CAACQ,OAAO,CAAC,CAACI,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC;MACvEH,CAAC,CAACI,SAAS,CAAC,oDAAoD,CAAC,CAACC,KAAK,CAACH,WAAW,CAAC;MACpF1B,MAAM,CAAC0B,WAAW,CAAC;IACrB;EACF,CAAC,EAAE,CAAC3B,GAAG,CAAC,CAAC;EAET,MAAM+B,iBAAiB,GAAGvD,WAAW,CAAC,YAAY;IAChDiC,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,YAAY,oBAAoB,CAAC;MACjE,IAAI,CAACY,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCnC,WAAW,CAACkC,IAAI,CAACnC,QAAQ,CAAC;MAC1B,IAAI,CAACE,iBAAiB,IAAImC,MAAM,CAACC,IAAI,CAACH,IAAI,CAACnC,QAAQ,CAAC,CAACuC,MAAM,GAAG,CAAC,EAAE;QAC/DpC,oBAAoB,CAACkC,MAAM,CAACC,IAAI,CAACH,IAAI,CAACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD;IACF,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACZ7B,QAAQ,CAAC6B,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRlC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACW,YAAY,EAAEhB,iBAAiB,CAAC,CAAC;EAErC9B,SAAS,CAAC,MAAM;IACdyD,iBAAiB,CAAC,CAAC;IACnB,MAAMa,QAAQ,GAAGC,WAAW,CAACd,iBAAiB,EAAE,KAAK,CAAC;IACtD,OAAO,MAAMe,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,iBAAiB,CAAC,CAAC;EAEvBzD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,iBAAiB,EAAE;IACxB,MAAM2C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCpC,oBAAoB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC;IACDoC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAC3C,iBAAiB,EAAEgB,YAAY,CAAC,CAAC;EAErC9C,SAAS,CAAC,MAAM;IACd,IAAI,CAAC0B,GAAG,IAAIuC,MAAM,CAACC,IAAI,CAACtC,QAAQ,CAAC,CAACuC,MAAM,KAAK,CAAC,EAAE;IAChD,MAAMhB,CAAC,GAAGC,MAAM,CAACD,CAAC;IAElBc,MAAM,CAACS,OAAO,CAAC9C,QAAQ,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,OAAO,CAAC,KAAK;MAClD,MAAM;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGF,OAAO,CAACG,YAAY;MACzC,MAAM3D,GAAG,GAAGwD,OAAO,CAACI,iBAAiB;MAErC,MAAMC,aAAa,GAAG;QACpBC,MAAM,EAAErD,iBAAiB,KAAK8C,EAAE,GAAG,EAAE,GAAG,CAAC;QACzCQ,SAAS,EAAEhE,WAAW,CAACC,GAAG,CAAC;QAC3BgE,KAAK,EAAE,SAAS;QAChBC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE,CAAC;QACVC,WAAW,EAAE;MACf,CAAC;MAED,IAAI7C,UAAU,CAACO,OAAO,CAAC0B,EAAE,CAAC,EAAE;QAC1BjC,UAAU,CAACO,OAAO,CAAC0B,EAAE,CAAC,CAACa,SAAS,CAAC,CAACX,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACW,QAAQ,CAACR,aAAa,CAAC;MACtE,CAAC,MAAM;QACL,MAAMS,MAAM,GAAGxC,CAAC,CAACyC,YAAY,CAAC,CAACd,GAAG,EAAEC,GAAG,CAAC,EAAEG,aAAa,CAAC,CAAC1B,KAAK,CAAC9B,GAAG,CAAC;QACnEiE,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,MAAM;UACvB9D,oBAAoB,CAAC6C,EAAE,CAAC;UACxBnC,cAAc,CAAC,IAAI,CAAC;UACpBf,GAAG,CAAC4B,OAAO,CAAC,CAACwB,GAAG,EAAEC,GAAG,CAAC,EAAE,EAAE,CAAC;QAC7B,CAAC,CAAC;QACFpC,UAAU,CAACO,OAAO,CAAC0B,EAAE,CAAC,GAAGe,MAAM;MACjC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjE,GAAG,EAAEE,QAAQ,EAAEE,iBAAiB,CAAC,CAAC;EAEtC,MAAMgE,mBAAmB,GAAGlE,QAAQ,CAACE,iBAAiB,CAAC;EAEvD,oBACEZ,OAAA;IAAK6E,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB9E,OAAA;MAAK6E,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CAAC,eAE7DlF,OAAA;MAAK6E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9E,OAAA;QAAK6E,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B9E,OAAA;UAAK0D,EAAE,EAAC,KAAK;UAACyB,GAAG,EAAE3D,MAAO;UAACqD,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eAENlF,OAAA;QAAK6E,SAAS,EAAE,iBAAiBvD,WAAW,GAAG,MAAM,GAAG,EAAE,EAAG;QAAAwD,QAAA,gBAC3D9E,OAAA;UACE6E,SAAS,EAAC,cAAc;UACxBO,OAAO,EAAEA,CAAA,KAAM7D,cAAc,CAAC,CAACD,WAAW,CAAE;UAC5C+D,KAAK,EAAE/D,WAAW,GAAG,YAAY,GAAG,YAAa;UAAAwD,QAAA,eAEjD9E,OAAA;YAAG6E,SAAS,EAAE,OAAOvD,WAAW,GAAG,kBAAkB,GAAG,iBAAiB;UAAG;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eAETlF,OAAA;UAAK6E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B9E,OAAA;YAAI6E,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACzB9E,OAAA;cAAG6E,SAAS,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,wBAC3C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLlF,OAAA;YAAK6E,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9B/B,MAAM,CAACS,OAAO,CAAC9C,QAAQ,CAAC,CAACF,GAAG,CAAC,CAAC,CAACkD,EAAE,EAAEC,OAAO,CAAC,kBAC1C3D,OAAA;cAEE6E,SAAS,EAAE,eAAejE,iBAAiB,KAAK8C,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;cACrE0B,OAAO,EAAEA,CAAA,KAAMvE,oBAAoB,CAAC6C,EAAE,CAAE;cAAAoB,QAAA,eAExC9E,OAAA;gBAAK6E,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,gBAClC9E,OAAA;kBAAM6E,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEnB,OAAO,CAACG,YAAY,CAACwB;gBAAI;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACjElF,OAAA;kBAAM6E,SAAS,EAAC,aAAa;kBAACU,KAAK,EAAE;oBAAEpB,KAAK,EAAEjE,WAAW,CAACyD,OAAO,CAACI,iBAAiB;kBAAE,CAAE;kBAAAe,QAAA,EACpFU,IAAI,CAACC,KAAK,CAAC9B,OAAO,CAACI,iBAAiB,CAAC,IAAI;gBAAK;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC,GATDxB,EAAE;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUD,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENlF,OAAA;UAAK6E,SAAS,EAAC,eAAe;UAAAC,QAAA,GAC3B9D,SAAS,iBAAIhB,OAAA;YAAK6E,SAAS,EAAC,cAAc;YAAAC,QAAA,eAAC9E,OAAA;cAAK6E,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACxF9D,KAAK,iBAAIpB,OAAA;YAAA8E,QAAA,GAAK,SAAO,EAAC1D,KAAK;UAAA;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAClCN,mBAAmB,iBAClB5E,OAAA;YAAA8E,QAAA,gBACE9E,OAAA;cAAA8E,QAAA,EAAKF,mBAAmB,CAACd,YAAY,CAACwB;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChDlF,OAAA;cAAA8E,QAAA,GAAG,eAAa,EAACU,IAAI,CAACC,KAAK,CAACb,mBAAmB,CAACb,iBAAiB,CAAC,EAAC,IAAE,EAAC1D,YAAY,CAACuE,mBAAmB,CAACb,iBAAiB,CAAC,EAAC,GAAC;YAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAC9HhE,iBAAiB,iBAAIlB,OAAA;cAAA8E,QAAA,EAAG;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7C,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3E,EAAA,CAlJID,OAAO;EAAA,QAYMpB,WAAW,EACXY,OAAO;AAAA;AAAA4F,EAAA,GAbpBpF,OAAO;AAoJb,eAAeA,OAAO;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}