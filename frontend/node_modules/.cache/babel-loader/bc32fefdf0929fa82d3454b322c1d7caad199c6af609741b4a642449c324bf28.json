{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './css/MapPage.css'; // Make sure this CSS file is also updated\n\n// Helper function to get AQI color and status text\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getAQIInfo = aqi => {\n  if (aqi === null || aqi === undefined) return {\n    color: '#6b7280',\n    status: 'Unknown'\n  };\n  if (aqi <= 50) return {\n    color: '#10b981',\n    status: 'Good'\n  };\n  if (aqi <= 100) return {\n    color: '#f59e0b',\n    status: 'Moderate'\n  };\n  if (aqi <= 150) return {\n    color: '#ef4444',\n    status: 'Unhealthy'\n  };\n  if (aqi <= 200) return {\n    color: '#dc2626',\n    status: 'Severe'\n  };\n  if (aqi <= 300) return {\n    color: '#7c2d12',\n    status: 'Very Severe'\n  };\n  return {\n    color: '#4c1d95',\n    status: 'Hazardous'\n  };\n};\n\n// Main Component\nconst MapPage = () => {\n  _s();\n  var _selectedStationData$, _selectedStationData$2;\n  const [map, setMap] = React.useState(null);\n  const [stations, setStations] = React.useState({});\n  const [selectedStationId, setSelectedStationId] = React.useState('lora-v1');\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [selectedParameter, setSelectedParameter] = React.useState('pm25');\n  const mapRef = React.useRef(null);\n  const markersRef = React.useRef({});\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Effect 1: Load Leaflet library and initialize the map.\n  React.useEffect(() => {\n    let isMounted = true;\n    const initialize = async () => {\n      try {\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\n          document.head.appendChild(script);\n          const link = document.createElement('link');\n          link.rel = \"stylesheet\";\n          link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\n          document.head.appendChild(link);\n          await new Promise(resolve => script.onload = resolve);\n        }\n        if (isMounted && mapRef.current && !mapRef.current._leaflet_id) {\n          const mapInstance = window.L.map(mapRef.current).setView([10.176, 76.430], 15);\n          window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; OpenStreetMap contributors'\n          }).addTo(mapInstance);\n          setMap(mapInstance);\n        }\n      } catch (err) {\n        if (isMounted) setError(\"Failed to load map library.\");\n      }\n    };\n    initialize();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  // Effect 2: Fetch data once the map is ready.\n  React.useEffect(() => {\n    if (!map) return;\n    let isMounted = true;\n    const fetchData = async () => {\n      setError(null);\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/map/`);\n        if (!response.ok) throw new Error(`Server error: ${response.status}`);\n        const data = await response.json();\n        if (isMounted) {\n          setStations(data.stations);\n          setIsLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setError(err.message);\n          setIsLoading(false);\n        }\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 300000); // Refresh every 5 minutes\n    return () => {\n      isMounted = false;\n      clearInterval(interval);\n    };\n  }, [map, API_BASE_URL]);\n\n  // Effect 3: Update map markers when station data changes.\n  React.useEffect(() => {\n    if (!map || Object.keys(stations).length === 0) return;\n    Object.entries(stations).forEach(([id, station]) => {\n      var _station$station_info, _station$station_info2;\n      if (!(station !== null && station !== void 0 && (_station$station_info = station.station_info) !== null && _station$station_info !== void 0 && _station$station_info.lat) || !(station !== null && station !== void 0 && (_station$station_info2 = station.station_info) !== null && _station$station_info2 !== void 0 && _station$station_info2.lng)) return;\n      const {\n        lat,\n        lng\n      } = station.station_info;\n      const aqi = station.highest_sub_index;\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\n      if (markersRef.current[id]) {\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\n        markersRef.current[id].setStyle({\n          color: '#fff',\n          fillColor: getAQIInfo(aqi).color\n        });\n      } else {\n        const marker = window.L.circleMarker([lat, lng], {\n          radius: 12,\n          fillColor: getAQIInfo(aqi).color,\n          color: '#fff',\n          weight: 3,\n          opacity: 1,\n          fillOpacity: 0.9\n        }).addTo(map);\n        marker.bindPopup(popupContent).on('click', () => setSelectedStationId(id));\n        markersRef.current[id] = marker;\n      }\n    });\n  }, [map, stations]);\n  const selectedStationData = stations[selectedStationId];\n  const aqiInfo = getAQIInfo(selectedStationData === null || selectedStationData === void 0 ? void 0 : selectedStationData.highest_sub_index);\n  const forecastChartData = {\n    labels: (selectedStationData === null || selectedStationData === void 0 ? void 0 : (_selectedStationData$ = selectedStationData.forecast_data) === null || _selectedStationData$ === void 0 ? void 0 : _selectedStationData$.map(d => d.day)) || [],\n    datasets: [{\n      label: `${selectedParameter.toUpperCase()} Forecast`,\n      data: (selectedStationData === null || selectedStationData === void 0 ? void 0 : (_selectedStationData$2 = selectedStationData.forecast_data) === null || _selectedStationData$2 === void 0 ? void 0 : _selectedStationData$2.map(d => d[`${selectedParameter}_max`])) || [],\n      borderColor: '#3b82f6',\n      backgroundColor: 'rgba(59, 130, 246, 0.1)',\n      tension: 0.2,\n      borderWidth: 2,\n      pointBackgroundColor: '#3b82f6',\n      pointRadius: 4\n    }]\n  };\n  const parameterButtons = [{\n    key: 'pm25',\n    label: 'PM2.5'\n  }, {\n    key: 'pm10',\n    label: 'PM10'\n  }, {\n    key: 'nh3',\n    label: 'NH3'\n  }, {\n    key: 'so2',\n    label: 'SO2'\n  }, {\n    key: 'no2',\n    label: 'NO2'\n  }, {\n    key: 'co',\n    label: 'CO'\n  }, {\n    key: 'o3',\n    label: 'O3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        ref: mapRef,\n        className: \"map-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel open\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-loader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Station Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-loader\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-broadcast-tower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 47\n            }, this), \" Monitoring Stations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-selector\",\n            children: Object.keys(stations).map(stationId => {\n              var _stations$stationId, _stations$stationId$s;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `station-btn ${selectedStationId === stationId ? 'active' : ''}`,\n                onClick: () => setSelectedStationId(stationId),\n                children: ((_stations$stationId = stations[stationId]) === null || _stations$stationId === void 0 ? void 0 : (_stations$stationId$s = _stations$stationId.station_info) === null || _stations$stationId$s === void 0 ? void 0 : _stations$stationId$s.name) || stationId\n              }, stationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: selectedStationData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aqi-overview-card\",\n              style: {\n                borderColor: aqiInfo.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aqi-overview-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Air Quality Index (AQI)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aqi-status-badge\",\n                  style: {\n                    backgroundColor: aqiInfo.color\n                  },\n                  children: aqiInfo.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aqi-value\",\n                style: {\n                  color: aqiInfo.color\n                },\n                children: Math.round(selectedStationData.highest_sub_index) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-chart-bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 25\n              }, this), \" Real-time Pollutant Levels\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-grid\",\n              children: ['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => {\n                var _selectedStationData$3;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"metric-label\",\n                    children: key.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"metric-value\",\n                    children: (_selectedStationData$3 = selectedStationData.averages) !== null && _selectedStationData$3 !== void 0 && _selectedStationData$3[key] ? Math.round(selectedStationData.averages[key]) : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 29\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-chart-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 25\n              }, this), \" 4-Day Forecast\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parameter-controls\",\n                children: parameterButtons.map(param => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `parameter-btn ${selectedParameter === param.key ? 'active' : ''}`,\n                  onClick: () => setSelectedParameter(param.key),\n                  children: param.label\n                }, param.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this), selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  data: forecastChartData,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    legend: {\n                      display: false\n                    },\n                    scales: {\n                      yAxes: [{\n                        gridLines: {\n                          color: 'rgba(255, 255, 255, 0.05)'\n                        },\n                        ticks: {\n                          fontColor: '#94a3b8',\n                          beginAtZero: true\n                        }\n                      }],\n                      xAxes: [{\n                        gridLines: {\n                          color: 'rgba(255, 255, 255, 0.05)'\n                        },\n                        ticks: {\n                          fontColor: '#94a3b8'\n                        }\n                      }]\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"no-data-message\",\n                children: \"Forecast data is not available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\",\n            style: {\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"yEqCqBlotsqPmBShg4CYwfo2MtA=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","getAQIInfo","aqi","undefined","color","status","MapPage","_s","_selectedStationData$","_selectedStationData$2","map","setMap","useState","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","selectedParameter","setSelectedParameter","mapRef","useRef","markersRef","API_BASE_URL","process","env","REACT_APP_API_URL","useEffect","isMounted","initialize","window","L","script","document","createElement","src","head","appendChild","link","rel","href","Promise","resolve","onload","current","_leaflet_id","mapInstance","setView","tileLayer","attribution","addTo","err","fetchData","response","fetch","ok","Error","data","json","message","interval","setInterval","clearInterval","Object","keys","length","entries","forEach","id","station","_station$station_info","_station$station_info2","station_info","lat","lng","highest_sub_index","popupContent","name","Math","round","setLatLng","setPopupContent","setStyle","fillColor","marker","circleMarker","radius","weight","opacity","fillOpacity","bindPopup","on","selectedStationData","aqiInfo","forecastChartData","labels","forecast_data","d","day","datasets","label","toUpperCase","borderColor","backgroundColor","tension","borderWidth","pointBackgroundColor","pointRadius","parameterButtons","key","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","stationId","_stations$stationId","_stations$stationId$s","onClick","style","_selectedStationData$3","averages","param","options","responsive","maintainAspectRatio","legend","display","scales","yAxes","gridLines","ticks","fontColor","beginAtZero","xAxes","margin","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './css/MapPage.css'; // Make sure this CSS file is also updated\r\n\r\n// Helper function to get AQI color and status text\r\nconst getAQIInfo = (aqi) => {\r\n  if (aqi === null || aqi === undefined) return { color: '#6b7280', status: 'Unknown' };\r\n  if (aqi <= 50) return { color: '#10b981', status: 'Good' };\r\n  if (aqi <= 100) return { color: '#f59e0b', status: 'Moderate' };\r\n  if (aqi <= 150) return { color: '#ef4444', status: 'Unhealthy' };\r\n  if (aqi <= 200) return { color: '#dc2626', status: 'Severe' };\r\n  if (aqi <= 300) return { color: '#7c2d12', status: 'Very Severe' };\r\n  return { color: '#4c1d95', status: 'Hazardous' };\r\n};\r\n\r\n// Main Component\r\nconst MapPage = () => {\r\n  const [map, setMap] = React.useState(null);\r\n  const [stations, setStations] = React.useState({});\r\n  const [selectedStationId, setSelectedStationId] = React.useState('lora-v1');\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(null);\r\n  const [selectedParameter, setSelectedParameter] = React.useState('pm25');\r\n\r\n  const mapRef = React.useRef(null);\r\n  const markersRef = React.useRef({});\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  // Effect 1: Load Leaflet library and initialize the map.\r\n  React.useEffect(() => {\r\n    let isMounted = true;\r\n    const initialize = async () => {\r\n      try {\r\n        if (!window.L) {\r\n          const script = document.createElement('script');\r\n          script.src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\r\n          document.head.appendChild(script);\r\n          const link = document.createElement('link');\r\n          link.rel = \"stylesheet\";\r\n          link.href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\";\r\n          document.head.appendChild(link);\r\n          await new Promise(resolve => script.onload = resolve);\r\n        }\r\n        if (isMounted && mapRef.current && !mapRef.current._leaflet_id) {\r\n          const mapInstance = window.L.map(mapRef.current).setView([10.176, 76.430], 15);\r\n          window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n              attribution: '&copy; OpenStreetMap contributors'\r\n          }).addTo(mapInstance);\r\n          setMap(mapInstance);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) setError(\"Failed to load map library.\");\r\n      }\r\n    };\r\n    initialize();\r\n    return () => { isMounted = false; };\r\n  }, []);\r\n\r\n  // Effect 2: Fetch data once the map is ready.\r\n  React.useEffect(() => {\r\n    if (!map) return;\r\n    let isMounted = true;\r\n    const fetchData = async () => {\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/map/`);\r\n        if (!response.ok) throw new Error(`Server error: ${response.status}`);\r\n        const data = await response.json();\r\n        if (isMounted) {\r\n            setStations(data.stations);\r\n            setIsLoading(false);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 300000); // Refresh every 5 minutes\r\n    return () => { isMounted = false; clearInterval(interval); };\r\n  }, [map, API_BASE_URL]);\r\n\r\n  // Effect 3: Update map markers when station data changes.\r\n  React.useEffect(() => {\r\n    if (!map || Object.keys(stations).length === 0) return;\r\n    Object.entries(stations).forEach(([id, station]) => {\r\n      if (!station?.station_info?.lat || !station?.station_info?.lng) return;\r\n      const { lat, lng } = station.station_info;\r\n      const aqi = station.highest_sub_index;\r\n      const popupContent = `<b>${station.station_info.name}</b><br>AQI: ${aqi ? Math.round(aqi) : 'N/A'}`;\r\n      if (markersRef.current[id]) {\r\n        markersRef.current[id].setLatLng([lat, lng]).setPopupContent(popupContent);\r\n        markersRef.current[id].setStyle({ color: '#fff', fillColor: getAQIInfo(aqi).color });\r\n      } else {\r\n        const marker = window.L.circleMarker([lat, lng], { radius: 12, fillColor: getAQIInfo(aqi).color, color: '#fff', weight: 3, opacity: 1, fillOpacity: 0.9 }).addTo(map);\r\n        marker.bindPopup(popupContent).on('click', () => setSelectedStationId(id));\r\n        markersRef.current[id] = marker;\r\n      }\r\n    });\r\n  }, [map, stations]);\r\n\r\n  const selectedStationData = stations[selectedStationId];\r\n  const aqiInfo = getAQIInfo(selectedStationData?.highest_sub_index);\r\n\r\n  const forecastChartData = {\r\n      labels: selectedStationData?.forecast_data?.map(d => d.day) || [],\r\n      datasets: [{\r\n          label: `${selectedParameter.toUpperCase()} Forecast`,\r\n          data: selectedStationData?.forecast_data?.map(d => d[`${selectedParameter}_max`]) || [],\r\n          borderColor: '#3b82f6',\r\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n          tension: 0.2,\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#3b82f6',\r\n          pointRadius: 4,\r\n      }]\r\n  };\r\n  \r\n  const parameterButtons = [\r\n      { key: 'pm25', label: 'PM2.5' }, { key: 'pm10', label: 'PM10' }, { key: 'nh3', label: 'NH3' },\r\n      { key: 'so2', label: 'SO2' }, { key: 'no2', label: 'NO2' }, { key: 'co', label: 'CO' }, { key: 'o3', label: 'O3' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"map-page\">\r\n      <div className=\"map-container\">\r\n        <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n      </div>\r\n      <div className=\"details-panel open\">\r\n        {isLoading ? (\r\n            <div className=\"panel-loader\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Loading Station Data...</p>\r\n            </div>\r\n        ) : error ? (\r\n            <div className=\"panel-loader\">\r\n                <p className=\"error-message\">{error}</p>\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <div className=\"panel-header\">\r\n                  <h2 className=\"panel-title\"><i className=\"fas fa-broadcast-tower\"></i> Monitoring Stations</h2>\r\n                  <div className=\"station-selector\">\r\n                      {Object.keys(stations).map(stationId => (\r\n                        <button\r\n                          key={stationId}\r\n                          className={`station-btn ${selectedStationId === stationId ? 'active' : ''}`}\r\n                          onClick={() => setSelectedStationId(stationId)}\r\n                        >\r\n                          {stations[stationId]?.station_info?.name || stationId}\r\n                        </button>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-content\">\r\n                  {selectedStationData ? (\r\n                    <>\r\n                      <div className=\"aqi-overview-card\" style={{borderColor: aqiInfo.color}}>\r\n                        <div className=\"aqi-overview-header\">\r\n                            <h3>Air Quality Index (AQI)</h3>\r\n                            <span className=\"aqi-status-badge\" style={{backgroundColor: aqiInfo.color}}>{aqiInfo.status}</span>\r\n                        </div>\r\n                        <div className=\"aqi-value\" style={{ color: aqiInfo.color }}>\r\n                          {Math.round(selectedStationData.highest_sub_index) || 'N/A'}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"section-title\">\r\n                        <i className=\"fas fa-chart-bar\"></i> Real-time Pollutant Levels\r\n                      </div>\r\n                      <div className=\"metrics-grid\">\r\n                        {['pm25', 'pm10', 'so2', 'no2', 'co', 'o3', 'nh3'].map(key => (\r\n                          <div key={key} className=\"metric-card\">\r\n                            <div className=\"metric-label\">{key.toUpperCase()}</div>\r\n                            <div className=\"metric-value\">{selectedStationData.averages?.[key] ? Math.round(selectedStationData.averages[key]) : '--'}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n\r\n                      <div className=\"section-title\">\r\n                        <i className=\"fas fa-chart-line\"></i> 4-Day Forecast\r\n                      </div>\r\n                      <div className=\"forecast-section\">\r\n                        <div className=\"parameter-controls\">\r\n                            {parameterButtons.map(param => (\r\n                                <button\r\n                                    key={param.key}\r\n                                    className={`parameter-btn ${selectedParameter === param.key ? 'active' : ''}`}\r\n                                    onClick={() => setSelectedParameter(param.key)}\r\n                                >\r\n                                    {param.label}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                        {selectedStationData.forecast_data && selectedStationData.forecast_data.length > 0 ? (\r\n                          <div className=\"chart-container\">\r\n                            <Line\r\n                              data={forecastChartData}\r\n                              options={{\r\n                                responsive: true, maintainAspectRatio: false, legend: { display: false },\r\n                                scales: {\r\n                                  yAxes: [{ gridLines: { color: 'rgba(255, 255, 255, 0.05)' }, ticks: { fontColor: '#94a3b8', beginAtZero: true } }],\r\n                                  xAxes: [{ gridLines: { color: 'rgba(255, 255, 255, 0.05)' }, ticks: { fontColor: '#94a3b8' } }]\r\n                                }\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <p className=\"no-data-message\">Forecast data is not available.</p>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"loading-spinner\" style={{ margin: 'auto' }}></div>\r\n                  )}\r\n                </div>\r\n            </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}