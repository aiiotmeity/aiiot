{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arathy\\\\React_django\\\\my-django-react-app\\\\frontend\\\\src\\\\components\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { useAuth } from '../App';\nimport './css/MapPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst getAQIColor = aqi => {/* ... color function ... */};\nconst getAQIStatus = aqi => {/* ... status function ... */};\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nconst createAqiIcon = aqi => {\n  const color = getAQIColor(aqi);\n  const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\n  return window.L.divIcon({\n    html: iconHtml,\n    className: 'custom-div-icon',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32]\n  });\n};\nconst MapPage = () => {\n  _s();\n  var _stations$nearestStat, _stations$nearestStat2, _stations$nearestStat3;\n  const [mapInstance, setMapInstance] = useState(null);\n  const [stations, setStations] = useState({});\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(true);\n\n  // State for User Location\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestStation, setNearestStation] = useState(null);\n  const [isLocating, setIsLocating] = useState(false);\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const userLocationMarkerRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    let map;\n    if (mapRef.current && !mapRef.current._leaflet_id) {\n      map = window.L.map(mapRef.current, {\n        zoomControl: false\n      }).setView([10.176, 76.430], 13);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      window.L.control.zoom({\n        position: 'topleft'\n      }).addTo(map);\n      setMapInstance(map);\n    }\n    return () => {\n      if (map) map.remove();\n    };\n  }, []);\n  const trackUserLocation = useCallback(() => {\n    setIsLocating(true);\n    setNearestStation(null); // Reset previous results\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const loc = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(loc);\n        if (mapInstance) {\n          mapInstance.setView(loc, 14);\n          if (userLocationMarkerRef.current) {\n            userLocationMarkerRef.current.setLatLng(loc);\n          } else {\n            userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\n          }\n        }\n        setIsLocating(false);\n      }, err => {\n        alert(\"Could not get your location. Please enable location services.\");\n        setIsLocating(false);\n      });\n    }\n  }, [mapInstance]);\n  const fetchRealtimeData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\n      const data = await response.json();\n      setStations(data.stations);\n      if (!selectedStationId && Object.keys(data.stations).length > 0) {\n        setSelectedStationId(Object.keys(data.stations)[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_BASE_URL, selectedStationId]);\n  useEffect(() => {\n    fetchRealtimeData();\n    const interval = setInterval(fetchRealtimeData, 60000);\n    return () => clearInterval(interval);\n  }, [fetchRealtimeData]);\n\n  // Effect to calculate nearest station after location is found\n  useEffect(() => {\n    if (userLocation && Object.keys(stations).length > 0) {\n      let nearestDist = Infinity,\n        nearestId = null;\n      Object.entries(stations).forEach(([id, station]) => {\n        const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestId = id;\n        }\n      });\n      setNearestStation({\n        id: nearestId,\n        distance: nearestDist\n      });\n    }\n  }, [userLocation, stations]);\n  useEffect(() => {\n    if (!mapInstance || Object.keys(stations).length === 0) return;\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n    Object.entries(stations).forEach(([id, station]) => {\n      const marker = window.L.marker([station.station_info.lat, station.station_info.lng], {\n        icon: createAqiIcon(station.highest_sub_index)\n      }).addTo(mapInstance);\n      marker.on('click', () => {\n        setSelectedStationId(id);\n        setIsPanelOpen(true);\n        mapInstance.setView([station.station_info.lat, station.station_info.lng], 15);\n      });\n      markersRef.current[id] = marker;\n    });\n  }, [mapInstance, stations, selectedStationId]);\n  const selectedStationData = stations[selectedStationId];\n  // ... (Your forecast chart logic and other constants can remain here)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          ref: mapRef,\n          className: \"map-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: trackUserLocation,\n          className: \"my-location-btn\",\n          title: \"Find My Location\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `details-panel ${isPanelOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setIsPanelOpen(!isPanelOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-content\",\n          children: [isLocating && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Locating...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 113\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 30\n          }, this), nearestStation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-location-panel\",\n            children: nearestStation.distance < 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-street-view\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AQI at Your Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 117\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-aqi-value\",\n                  children: (_stations$nearestStat = stations[nearestStation.id]) === null || _stations$nearestStat === void 0 ? void 0 : _stations$nearestStat.highest_sub_index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-location-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Using data from nearest station\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 93\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [(_stations$nearestStat2 = stations[nearestStation.id]) === null || _stations$nearestStat2 === void 0 ? void 0 : _stations$nearestStat2.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-exclamation-triangle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Location Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 126\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You are not within 1km of the nearest sensor station, so a precise AQI for your location cannot be provided.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-location-details\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Nearest: \", (_stations$nearestStat3 = stations[nearestStation.id]) === null || _stations$nearestStat3 === void 0 ? void 0 : _stations$nearestStat3.station_info.name, \" (\", nearestStation.distance.toFixed(1), \" km away)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-loader\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 38\n          }, this) : selectedStationData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStationData.station_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"n0IR4AByrZDNsQppyzt4rc1mi1k=\", false, function () {\n  return [useAuth];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Link","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","register","getAQIColor","aqi","getAQIStatus","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","createAqiIcon","color","iconHtml","round","window","L","divIcon","html","className","iconSize","iconAnchor","MapPage","_s","_stations$nearestStat","_stations$nearestStat2","_stations$nearestStat3","mapInstance","setMapInstance","stations","setStations","selectedStationId","setSelectedStationId","isLoading","setIsLoading","error","setError","isPanelOpen","setIsPanelOpen","userLocation","setUserLocation","nearestStation","setNearestStation","isLocating","setIsLocating","mapRef","markersRef","userLocationMarkerRef","user","API_BASE_URL","process","env","REACT_APP_API_URL","map","current","_leaflet_id","zoomControl","setView","tileLayer","addTo","control","zoom","position","remove","trackUserLocation","navigator","geolocation","getCurrentPosition","loc","lat","coords","latitude","lng","longitude","setLatLng","marker","err","alert","fetchRealtimeData","response","fetch","data","json","Object","keys","length","message","interval","setInterval","clearInterval","nearestDist","Infinity","nearestId","entries","forEach","id","station","dist","station_info","distance","values","icon","highest_sub_index","on","selectedStationData","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","name","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/arathy/React_django/my-django-react-app/frontend/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { useAuth } from '../App';\r\nimport './css/MapPage.css';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst getAQIColor = (aqi) => { /* ... color function ... */ };\r\nconst getAQIStatus = (aqi) => { /* ... status function ... */ };\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\nconst createAqiIcon = (aqi) => {\r\n    const color = getAQIColor(aqi);\r\n    const iconHtml = `<div style=\"background-color: ${color};\" class=\"aqi-marker-icon\"><div class=\"aqi-marker-icon-inner\">${Math.round(aqi) || 'N/A'}</div></div>`;\r\n    return window.L.divIcon({ html: iconHtml, className: 'custom-div-icon', iconSize: [32, 32], iconAnchor: [16, 32] });\r\n};\r\n\r\nconst MapPage = () => {\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n    const [stations, setStations] = useState({});\r\n    const [selectedStationId, setSelectedStationId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(true);\r\n    \r\n    // State for User Location\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [isLocating, setIsLocating] = useState(false);\r\n\r\n    const mapRef = useRef(null);\r\n    const markersRef = useRef({});\r\n    const userLocationMarkerRef = useRef(null);\r\n    const { user } = useAuth();\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    useEffect(() => {\r\n        let map;\r\n        if (mapRef.current && !mapRef.current._leaflet_id) {\r\n            map = window.L.map(mapRef.current, { zoomControl: false }).setView([10.176, 76.430], 13);\r\n            window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n            window.L.control.zoom({ position: 'topleft' }).addTo(map);\r\n            setMapInstance(map);\r\n        }\r\n        return () => { if (map) map.remove(); };\r\n    }, []);\r\n    \r\n    const trackUserLocation = useCallback(() => {\r\n        setIsLocating(true);\r\n        setNearestStation(null); // Reset previous results\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const loc = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setUserLocation(loc);\r\n                    if (mapInstance) {\r\n                        mapInstance.setView(loc, 14);\r\n                        if (userLocationMarkerRef.current) {\r\n                            userLocationMarkerRef.current.setLatLng(loc);\r\n                        } else {\r\n                            userLocationMarkerRef.current = window.L.marker(loc).addTo(mapInstance);\r\n                        }\r\n                    }\r\n                    setIsLocating(false);\r\n                },\r\n                (err) => {\r\n                    alert(\"Could not get your location. Please enable location services.\");\r\n                    setIsLocating(false);\r\n                }\r\n            );\r\n        }\r\n    }, [mapInstance]);\r\n\r\n    const fetchRealtimeData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/map/realtime/`);\r\n            const data = await response.json();\r\n            setStations(data.stations);\r\n            if (!selectedStationId && Object.keys(data.stations).length > 0) {\r\n                setSelectedStationId(Object.keys(data.stations)[0]);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [API_BASE_URL, selectedStationId]);\r\n\r\n    useEffect(() => {\r\n        fetchRealtimeData();\r\n        const interval = setInterval(fetchRealtimeData, 60000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchRealtimeData]);\r\n\r\n    // Effect to calculate nearest station after location is found\r\n    useEffect(() => {\r\n        if (userLocation && Object.keys(stations).length > 0) {\r\n            let nearestDist = Infinity, nearestId = null;\r\n            Object.entries(stations).forEach(([id, station]) => {\r\n                const dist = calculateDistance(userLocation.lat, userLocation.lng, station.station_info.lat, station.station_info.lng);\r\n                if (dist < nearestDist) { nearestDist = dist; nearestId = id; }\r\n            });\r\n            setNearestStation({ id: nearestId, distance: nearestDist });\r\n        }\r\n    }, [userLocation, stations]);\r\n    \r\n    useEffect(() => {\r\n        if (!mapInstance || Object.keys(stations).length === 0) return;\r\n        Object.values(markersRef.current).forEach(marker => marker.remove());\r\n        markersRef.current = {};\r\n        Object.entries(stations).forEach(([id, station]) => {\r\n            const marker = window.L.marker([station.station_info.lat, station.station_info.lng], { icon: createAqiIcon(station.highest_sub_index) }).addTo(mapInstance);\r\n            marker.on('click', () => {\r\n                setSelectedStationId(id);\r\n                setIsPanelOpen(true);\r\n                mapInstance.setView([station.station_info.lat, station.station_info.lng], 15);\r\n            });\r\n            markersRef.current[id] = marker;\r\n        });\r\n    }, [mapInstance, stations, selectedStationId]);\r\n\r\n    const selectedStationData = stations[selectedStationId];\r\n    // ... (Your forecast chart logic and other constants can remain here)\r\n\r\n    return (\r\n        <div className=\"map-page\">\r\n            <nav className=\"navbar\">{/* ... your navbar JSX ... */}</nav>\r\n            <div className=\"main-content\">\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" ref={mapRef} className=\"map-element\"></div>\r\n                    <button onClick={trackUserLocation} className=\"my-location-btn\" title=\"Find My Location\">\r\n                        <i className=\"fas fa-crosshairs\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className={`details-panel ${isPanelOpen ? 'open' : ''}`}>\r\n                    <button className=\"panel-toggle\" onClick={() => setIsPanelOpen(!isPanelOpen)}>{/* ... */}</button>\r\n                    <div className=\"panel-header\">{/* ... your station selector ... */}</div>\r\n                    <div className=\"panel-content\">\r\n                        {/* --- NEW, CORRECTED User Location Panel Logic --- */}\r\n                        {isLocating && (\r\n                             <div className=\"user-location-panel\">\r\n                                <div className=\"user-location-header\"><i className=\"fas fa-spinner fa-spin\"></i><span>Locating...</span></div>\r\n                             </div>\r\n                        )}\r\n                        {nearestStation && (\r\n                            <div className=\"user-location-panel\">\r\n                                {nearestStation.distance < 1 ? (\r\n                                    <>\r\n                                        <div className=\"user-location-header\"><i className=\"fas fa-street-view\"></i><span>AQI at Your Location</span></div>\r\n                                        <div className=\"user-location-body\">\r\n                                            <div className=\"user-aqi-value\">{stations[nearestStation.id]?.highest_sub_index}</div>\r\n                                            <div className=\"user-location-details\">\r\n                                                <span>Using data from nearest station</span><br />\r\n                                                <span>{stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km)</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <div className=\"user-location-header\"><i className=\"fas fa-exclamation-triangle\"></i><span>Location Status</span></div>\r\n                                        <p>You are not within 1km of the nearest sensor station, so a precise AQI for your location cannot be provided.</p>\r\n                                        <div className=\"user-location-details\">\r\n                                            <span>Nearest: {stations[nearestStation.id]?.station_info.name} ({nearestStation.distance.toFixed(1)} km away)</span>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n\r\n                        {isLoading ? <div className=\"panel-loader\"><div className=\"loading-spinner\"></div></div> :\r\n                        selectedStationData ? (\r\n                            <div>\r\n                                <h3>{selectedStationData.station_info.name}</h3>\r\n                                {/* ... Your existing station details, pollutant metrics, and forecast chart ... */}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}