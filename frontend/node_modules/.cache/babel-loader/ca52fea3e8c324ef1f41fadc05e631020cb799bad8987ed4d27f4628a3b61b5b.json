{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo,Suspense}from'react';import{useNavigate,Link}from'react-router-dom';import{useAuth}from'../App';import'./css/HealthReport.css';import logoImage from'../assets/aqi.webp';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LazyChart=/*#__PURE__*/React.lazy(()=>import('./LazyChart'));// --- Helper Functions ---\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// km\nconst dLat=(lat2-lat1)*Math.PI/180,dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};const getAQIColor=aqi=>{if(aqi<=50)return'#10b981';if(aqi<=100)return'#f59e0b';if(aqi<=150)return'#ef4444';return'#7c2d12';};const getAQIStatus=aqi=>{if(aqi<=50)return'Good';if(aqi<=100)return'Moderate';if(aqi<=150)return'Unhealthy';return'Hazardous';};// --- CORRECTED: IDW Interpolation Function ---\nconst calculateIDWInterpolation=(userLocation,stations)=>{console.log('🔍 Health Report: Starting IDW calculation...');if(!userLocation||!stations||Object.keys(stations).length===0){console.warn('⚠️ Health Report: No valid data for interpolation');return{interpolated_values:{},interpolated_aqi:50,stations_used:0,method:'fallback'};}// Use real stations only\nconst realStationIds=['lora-v1','loradev2'];const realStations={};realStationIds.forEach(id=>{if(stations[id]){realStations[id]=stations[id];}});console.log('📊 Health Report: Real stations for interpolation:',Object.keys(realStations));if(Object.keys(realStations).length===0){console.warn('⚠️ Health Report: No real stations available for interpolation');return{interpolated_values:{},interpolated_aqi:50,stations_used:0,method:'fallback'};}let totalWeight=0;const weightedValues={pm25:0,pm10:0,so2:0,no2:0,co:0,o3:0,nh3:0,temp:0,hum:0,pre:0};let weightedAqi=0;Object.entries(realStations).forEach(_ref=>{let[stationId,station]=_ref;const distance=calculateDistance(userLocation.lat,userLocation.lng,station.station_info.lat,station.station_info.lng);console.log(`📍 Health Report: Station ${stationId}: ${distance.toFixed(2)}km away`);const safeDistance=Math.max(distance,0.001);const weight=1.0/safeDistance**2;totalWeight+=weight;const averages=station.averages||{};Object.keys(weightedValues).forEach(param=>{if(averages[param]!==undefined){weightedValues[param]+=averages[param]*weight;}});weightedAqi+=(station.highest_sub_index||0)*weight;});const interpolated_values={};Object.keys(weightedValues).forEach(param=>{interpolated_values[param]=totalWeight>0?Math.round(weightedValues[param]/totalWeight*100)/100:0;});const interpolated_aqi=totalWeight>0?Math.round(weightedAqi/totalWeight):50;console.log('✅ Health Report: IDW Result:',{interpolated_aqi,stations_used:Object.keys(realStations).length});return{interpolated_values,interpolated_aqi,stations_used:Object.keys(realStations).length,method:'idw'};};// --- Get User Location Function ---\nconst getUserLocation=()=>{return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('Geolocation not supported'));return;}navigator.geolocation.getCurrentPosition(position=>{const location={lat:position.coords.latitude,lng:position.coords.longitude,accuracy:position.coords.accuracy,source:'gps',timestamp:Date.now()};if(isNaN(location.lat)||isNaN(location.lng)){reject(new Error('Invalid GPS coordinates'));return;}resolve(location);},error=>{reject(error);},{enableHighAccuracy:true,timeout:10000,maximumAge:300000});});};// Health Recommendations based on AQI and Health Risk Level\nconst getHealthRecommendations=(aqi,healthRiskLevel)=>{const baseRecommendations={good:{general:['🌟 Perfect air quality - enjoy all outdoor activities','🚶‍♂️ Great time for outdoor exercise and sports','🪟 Open windows to let fresh air in','👶 Safe conditions for children to play outside'],sensitive:['✅ Excellent conditions for people with respiratory issues','🏃‍♀️ No restrictions on outdoor activities','💨 Breathe easy - air quality is optimal']},moderate:{general:['⚠️ Air quality is acceptable for most people','🏃‍♂️ Reduce prolonged outdoor exertion if sensitive','😷 Consider wearing a mask during heavy traffic hours','🌅 Best outdoor times: early morning and late evening'],sensitive:['⚠️ Limit prolonged outdoor activities','😷 Wear N95 mask when going outside','🏠 Stay indoors during peak pollution hours','💊 Keep rescue medications readily available']},unhealthy:{general:['🚨 Avoid prolonged outdoor activities','🏠 Stay indoors as much as possible','😷 Wear N95 mask if you must go outside','🪟 Keep windows and doors closed'],sensitive:['🚨 URGENT: Stay indoors immediately','🏥 Seek medical attention if experiencing symptoms','😷 Mandatory N95 mask for any outdoor exposure','📞 Contact doctor if breathing difficulties occur']},hazardous:{general:['🚨 EMERGENCY: Avoid all outdoor activities','🏠 Remain indoors with air purification','😷 N95 mask mandatory for any exposure','🏥 Seek immediate medical help for symptoms'],sensitive:['🚨 HEALTH EMERGENCY: Immediate indoor shelter','🏥 Seek emergency medical attention','📞 Call emergency services if severe symptoms','🚗 Consider relocation to cleaner air area']}};// Determine category\nlet category='good';if(aqi>150)category='hazardous';else if(aqi>100)category='unhealthy';else if(aqi>50)category='moderate';// Determine if user is sensitive based on health risk level\nconst isSensitive=healthRiskLevel==='High'||healthRiskLevel==='Critical';return{recommendations:isSensitive?baseRecommendations[category].sensitive:baseRecommendations[category].general,isSensitive,category,isEmergency:category==='hazardous'||category==='unhealthy'&&isSensitive};};// Emergency contacts based on AQI level\nconst getEmergencyContacts=aqi=>{if(aqi<=100)return null;return{primary:{name:'Kerala Pollution Control Board',number:'0471-2418566',description:'24/7 Air Quality Emergency Hotline'},medical:{name:'Medical Emergency',number:'108',description:'Immediate medical assistance'},poison:aqi>150?{name:'Poison Control',number:'1066',description:'Pollution-related health emergencies'}:null};};function HealthReport(){var _currentDataInfo$dist,_currentDataInfo$dist2;const{user}=useAuth();const[username]=useState((user===null||user===void 0?void 0:user.name)||null);const[reportData,setReportData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isMenuOpen,setIsMenuOpen]=useState(false);const[currentTime,setCurrentTime]=useState(new Date());// --- State for location and interpolation ---\nconst[userLocation,setUserLocation]=useState(null);const[nearestStation,setNearestStation]=useState(null);const[interpolatedData,setInterpolatedData]=useState(null);const[locationStatus,setLocationStatus]=useState('initializing');const[currentDataInfo,setCurrentDataInfo]=useState(null);const[isMobileView,setIsMobileView]=useState(window.innerWidth<=768);// --- Forecast parameter selection ---\nconst[selectedParameter,setSelectedParameter]=useState('pm25');const navigate=useNavigate();const API_BASE_URL=process.env.NODE_ENV==='production'?'https://airaware-app-gcw7.onrender.com':'http://localhost:8000';// Update time every minute\nuseEffect(()=>{const timer=setInterval(()=>setCurrentTime(new Date()),60000);return()=>clearInterval(timer);},[]);useEffect(()=>{const handleResize=()=>{setIsMobileView(window.innerWidth<=768);};window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);};},[]);const fetchReportData=useCallback(async()=>{if(!username){navigate('/login');return;}setLoading(true);try{const url=`${API_BASE_URL}/api/health-report/?username=${username}`;const response=await fetch(url);if(!response.ok){const errData=await response.json();if(errData.redirect_to)navigate(errData.redirect_to);throw new Error(errData.error);}const data=await response.json();setReportData(data);}catch(err){setError(err.message);}finally{setLoading(false);}},[username,navigate,API_BASE_URL]);// --- Get user location ---\nconst getUserLocationForReport=useCallback(async()=>{try{setLocationStatus('detecting');const location=await getUserLocation();setUserLocation(location);setLocationStatus('gps_detected');console.log('📍 Health Report: Location obtained:',location);}catch(error){console.log('📍 Health Report: Location detection failed:',error);setLocationStatus('failed');}},[]);useEffect(()=>{fetchReportData();getUserLocationForReport();},[fetchReportData,getUserLocationForReport]);// --- Process location and interpolation ---\nuseEffect(()=>{if(userLocation&&reportData!==null&&reportData!==void 0&&reportData.stations){console.log('🔄 Health Report: Processing location and stations data...');const stations=reportData.stations;// Use real stations only for calculations\nconst realStationIds=['lora-v1','loradev2'];const realStations={};realStationIds.forEach(id=>{if(stations[id]){realStations[id]=stations[id];}});if(Object.keys(realStations).length===0){console.warn('⚠️ Health Report: No real stations available');return;}// Find nearest real station - FIXED NULL CHECK\nlet nearestDist=Infinity,nearestId=null;Object.entries(realStations).forEach(_ref2=>{let[id,station]=_ref2;if(station&&station.station_info){const dist=calculateDistance(userLocation.lat,userLocation.lng,station.station_info.lat,station.station_info.lng);if(dist<nearestDist){nearestDist=dist;nearestId=id;}}});if(nearestId&&realStations[nearestId]){setNearestStation({id:nearestId,distance:nearestDist,station:realStations[nearestId]});console.log(`📍 Health Report: Nearest real station: ${nearestId} at ${nearestDist.toFixed(2)}km`);// Check if user is within 1km of any real station\nconst isWithinSensorRange=nearestDist<=1.0;if(isWithinSensorRange){// User is within 1km - use interpolation\nconst idwResult=calculateIDWInterpolation(userLocation,realStations);setInterpolatedData({aqi:idwResult.interpolated_aqi,values:idwResult.interpolated_values});setCurrentDataInfo({method:'location_interpolation',source:'interpolated',explanation:`You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Showing calculated air quality for your exact location using data from the 2 real monitoring stations only.`,values:idwResult.interpolated_values,aqi:idwResult.interpolated_aqi,station_name:`Your Location (Calculated from Real Stations)`,is_interpolated:true,distance:nearestDist,data_type:'Your Location Data (Real Sensor Interpolation)',stations_used_for_calculation:Object.keys(realStations)});console.log('✅ Health Report: Using interpolated data from real stations - AQI:',idwResult.interpolated_aqi);}else{// User is >1km away - use nearest real station\nconst nearestStationData=realStations[nearestId];setCurrentDataInfo({method:'nearest_station',source:'nearest_station',explanation:`You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Too far for accurate interpolation - showing data from ${nearestStationData.station_info.name} (nearest real monitoring station).`,values:nearestStationData.averages||{},aqi:nearestStationData.highest_sub_index||50,station_name:nearestStationData.station_info.name,is_interpolated:false,distance:nearestDist,data_type:'Nearest Real Station Data',distance_warning:nearestDist>1.0?`You are ${nearestDist.toFixed(1)}km away from real sensors, so you cannot get interpolated values for your exact location.`:null});console.log('✅ Health Report: Using nearest real station data - AQI:',nearestStationData.highest_sub_index);}}}else if(reportData!==null&&reportData!==void 0&&reportData.stations){var _defaultStation$stati;// No location - use default station (prefer real station)\nconst stations=reportData.stations;const defaultStation=stations['lora-v1']||stations['loradev2']||stations[Object.keys(stations)[0]]||{};setCurrentDataInfo({method:'default_station',source:'default',explanation:'Location not available. Showing data from default real monitoring station.',values:defaultStation.averages||{},aqi:defaultStation.highest_sub_index||50,station_name:((_defaultStation$stati=defaultStation.station_info)===null||_defaultStation$stati===void 0?void 0:_defaultStation$stati.name)||'ASIET Campus Station',is_interpolated:false,distance:null,data_type:'Default Real Station Data'});console.log('✅ Health Report: Using default real station data');}},[userLocation,reportData]);// --- Memoized calculations ---\nconst displayAqi=useMemo(()=>{if(currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated&&interpolatedData){return interpolatedData.aqi;}else if(currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.aqi){return currentDataInfo.aqi;}else{var _Object$values$;return((_Object$values$=Object.values((reportData===null||reportData===void 0?void 0:reportData.stations)||{})[0])===null||_Object$values$===void 0?void 0:_Object$values$.highest_sub_index)||0;}},[currentDataInfo,interpolatedData,reportData]);const healthRecommendations=useMemo(()=>{if(!(reportData!==null&&reportData!==void 0&&reportData.health_assessment))return null;return getHealthRecommendations(displayAqi,reportData.health_assessment.risk_level);},[displayAqi,reportData]);const emergencyContacts=useMemo(()=>{return getEmergencyContacts(displayAqi);},[displayAqi]);const aqiStatus=useMemo(()=>{const status=getAQIStatus(displayAqi);const color=getAQIColor(displayAqi);return{status,color};},[displayAqi]);// --- FIXED: Format forecast data with proper date handling ---\nconst forecastData=useMemo(()=>{if(!nearestStation||!(reportData!==null&&reportData!==void 0&&reportData.forecasts))return[];const forecast=reportData.forecasts[nearestStation.id];if(!forecast||!forecast.data)return[];// Add proper date formatting\nreturn forecast.data.map((item,index)=>({...item,displayDay:index===0?'Today':index===1?'Tomorrow':`Day ${index+1}`,formattedDate:item.day?new Date(item.day).toLocaleDateString('en-IN',{month:'short',day:'numeric'}):`Day ${index+1}`}));},[nearestStation,reportData]);// Event handlers\nconst toggleMenu=useCallback(()=>setIsMenuOpen(prev=>!prev),[]);const handleLogout=useCallback(()=>{localStorage.clear();navigate('/login');},[navigate]);const handleRefresh=useCallback(()=>{fetchReportData();getUserLocationForReport();},[fetchReportData,getUserLocationForReport]);const handlePrint=useCallback(()=>{window.print();},[]);const handleParameterChange=useCallback(param=>{setSelectedParameter(param);},[]);if(loading)return/*#__PURE__*/_jsxs(\"div\",{className:\"panel-loader\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFE5 Generating Your Health Report...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})]});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u26A0\\uFE0F Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard'),className:\"retry-btn\",children:\"\\uD83D\\uDCCA Go to Dashboard\"})]});if(!reportData)return/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCA No Report Data\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Unable to generate your health report at this time.\"})]});// --- FIX [START]: Add a loading check for currentDataInfo ---\n// This ensures derived data is ready before rendering the report body.\nif(!currentDataInfo){return/*#__PURE__*/_jsxs(\"div\",{className:\"panel-loader\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD04 Processing Location Data...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})]});}// --- FIX [END] ---\nconst{health_assessment,stations,forecasts}=reportData;return/*#__PURE__*/_jsxs(\"div\",{className:\"report-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"realtime-status\",children:[\"\\uD83D\\uDD34 LIVE HEALTH REPORT \\u2022 Updated: \",currentTime.toLocaleTimeString('en-IN'),\" \\u2022\",currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?' Smart Real Sensor Analysis':' Government Standards Applied']}),/*#__PURE__*/_jsx(\"nav\",{className:\"navbar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/\",className:\"navbar-brand\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"AQM Logo\",width:isMobileView?\"32\":\"40\",height:isMobileView?\"32\":\"40\"}),\"AirAware\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"menu-toggle\",onClick:toggleMenu,children:\"\\u2630\"}),/*#__PURE__*/_jsxs(\"ul\",{className:`nav-links ${isMenuOpen?'active':''}`,children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-link\",children:\"\\uD83C\\uDFE0 Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"nav-link\",children:\"Profile\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/health-assessment\",className:\"nav-link\",children:\"\\uD83D\\uDCCB Health Update\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/add-family\",className:\"nav-link\",children:\"\\uD83D\\uDC65 Add Family\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/map\",className:\"nav-link\",children:\"\\uD83D\\uDDFA\\uFE0F Live Map\"})}),/*#__PURE__*/_jsxs(\"li\",{className:\"user-info\",children:[\"\\uD83D\\uDC64 \",/*#__PURE__*/_jsx(\"span\",{children:username})]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"nav-link login-btn\",children:\"\\uD83D\\uDEAA Logout\"})})]})]})}),(healthRecommendations===null||healthRecommendations===void 0?void 0:healthRecommendations.isEmergency)&&/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-alert-banner\",children:[\"\\uD83D\\uDEA8 \",/*#__PURE__*/_jsx(\"strong\",{children:\"HEALTH EMERGENCY ALERT:\"}),\"AQI \",Math.round(displayAqi),\" - \",aqiStatus.status,\" conditions detected.\",healthRecommendations.isSensitive&&' High-risk individual - immediate action required!']}),/*#__PURE__*/_jsxs(\"div\",{className:`alert-banner ${aqiStatus.status.toLowerCase()}`,style:{backgroundColor:getAQIColor(displayAqi)+'20',borderBottom:`3px solid ${getAQIColor(displayAqi)}`},children:[\"\\u2139\\uFE0F \",/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"CURRENT AIR QUALITY:\"}),currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?' Your Location (Real Sensors)':' Nearest Real Station',\" AQI is \",Math.round(displayAqi),\" - \",aqiStatus.status,(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.distance)&&` • Distance: ${currentDataInfo.distance.toFixed(1)}km from nearest real sensor`,(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.distance_warning)&&/*#__PURE__*/_jsxs(\"div\",{className:\"distance-warning-inline\",children:[\"\\u26A0\\uFE0F \",currentDataInfo.distance_warning]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"official-seal\",children:\"\\uD83C\\uDFDB\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"government-badge\",children:\"Air Quality Monitoring\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"document-id\",children:[\"DOC-ID: HR-\",username,\"-\",new Date().getFullYear(),String(new Date().getMonth()+1).padStart(2,'0'),String(new Date().getDate()).padStart(2,'0')]}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFE5 Official Air Quality Health Report\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Personalized health assessment based on your location's air quality and personal health profile.\",(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.is_interpolated)&&' Using advanced spatial interpolation from real sensors only for precise location analysis.']}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-metadata\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Generated:\"}),\" \",new Date().toLocaleString('en-IN')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",username]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Location:\"}),\" \",currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?'Your Current Location':'Nearest Real Station Data']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"executive-summary\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"\\uD83D\\uDCCB Executive Health Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overview-card health-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDC64 Your Health Profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-score\",children:health_assessment.score}),/*#__PURE__*/_jsxs(\"div\",{className:`risk-level ${health_assessment.risk_level.toLowerCase()}`,children:[health_assessment.risk_level,\" Risk\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"health-description\",children:[health_assessment.risk_level==='Low'&&'You have minimal risk from air pollution effects',health_assessment.risk_level==='Moderate'&&'You have moderate susceptibility to air pollution',health_assessment.risk_level==='High'&&'You are at high risk from air pollution effects',health_assessment.risk_level==='Critical'&&'You are at critical risk and need immediate precautions']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-card aqi-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83C\\uDF2C\\uFE0F Current Air Quality\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"station-name\",children:[currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?'🎯 Your Location (Real Sensors)':`📍 ${(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.station_name)||'Default Station'}`,(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.distance)&&/*#__PURE__*/_jsxs(\"div\",{className:\"distance-info\",children:[\"Distance: \",currentDataInfo.distance.toFixed(1),\"km from nearest real sensor\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"station-aqi\",style:{color:aqiStatus.color},children:Math.round(displayAqi)}),/*#__PURE__*/_jsx(\"div\",{className:\"aqi-status-badge\",style:{backgroundColor:aqiStatus.color+'20',color:aqiStatus.color,border:`2px solid ${aqiStatus.color}`},children:aqiStatus.status}),(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.is_interpolated)&&/*#__PURE__*/_jsx(\"div\",{className:\"interpolation-badge\",children:\"\\uD83C\\uDFAF Calculated for Your Location (Real Sensors Only)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-card summary-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2695\\uFE0F Health Risk Assessment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"risk-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"risk-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:`risk-dot ${health_assessment.risk_level.toLowerCase()}`}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Based on your health profile and current air quality, you are classified as \",/*#__PURE__*/_jsxs(\"strong\",{children:[health_assessment.risk_level,\" Risk\"]})]})]}),(healthRecommendations===null||healthRecommendations===void 0?void 0:healthRecommendations.isSensitive)&&/*#__PURE__*/_jsx(\"div\",{className:\"sensitive-warning\",children:\"\\u26A0\\uFE0F You are in a sensitive group - please follow enhanced precautions\"})]})]})]})]}),(healthRecommendations===null||healthRecommendations===void 0?void 0:healthRecommendations.isEmergency)&&/*#__PURE__*/_jsxs(\"div\",{className:\"critical-health-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"emergency-icon\",children:\"\\uD83D\\uDEA8\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"IMMEDIATE HEALTH PRECAUTIONS REQUIRED\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-reason\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Air Quality Emergency:\"}),\" Current AQI of \",Math.round(displayAqi),\" poses immediate health risks.\"]}),healthRecommendations.isSensitive&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"High-Risk Individual:\"}),\" Your health profile indicates increased vulnerability.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-actions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEA8 IMMEDIATE ACTIONS:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"emergency-list\",children:healthRecommendations.recommendations.map((rec,index)=>/*#__PURE__*/_jsx(\"li\",{children:rec},index))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendations-section\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"section-title\",children:[\"\\uD83D\\uDCA1 Personalized Health Recommendations\",(healthRecommendations===null||healthRecommendations===void 0?void 0:healthRecommendations.isSensitive)&&/*#__PURE__*/_jsx(\"span\",{className:\"sensitive-badge\",children:\"Sensitive Group\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"guidelines-banner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"guidelines-icon\",children:\"\\uD83C\\uDFDB\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"guidelines-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Official Government Guidelines:\"}),\" Based on Central Pollution Control Board (CPCB) standards and Kerala State Health Department recommendations for air quality health protection.\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendations-grid\",children:healthRecommendations===null||healthRecommendations===void 0?void 0:healthRecommendations.recommendations.map((action,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`recommendation-card ${healthRecommendations.category} ${healthRecommendations.isSensitive?'sensitive':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"rec-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:healthRecommendations.isEmergency?\"fas fa-exclamation-triangle\":\"fas fa-check-circle\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"rec-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rec-priority\",children:healthRecommendations.isEmergency?'URGENT':healthRecommendations.category.toUpperCase()}),/*#__PURE__*/_jsx(\"div\",{className:\"rec-text\",children:action})]})]},index))}),health_assessment.priority_actions&&health_assessment.priority_actions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"additional-recommendations\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Additional Health Recommendations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"additional-grid\",children:health_assessment.priority_actions.map((action,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"additional-rec-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"additional-rec-icon\",children:\"\\uD83D\\uDC8A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"additional-rec-text\",children:action})]},index))})]})]}),emergencyContacts&&/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-contacts-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"\\uD83C\\uDD98 Emergency Health Contacts\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-contacts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-contact-card primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-icon\",children:\"\\uD83D\\uDCDE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-name\",children:emergencyContacts.primary.name}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-number\",children:emergencyContacts.primary.number}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-desc\",children:emergencyContacts.primary.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-contact-card medical\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-icon\",children:\"\\uD83C\\uDFE5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-name\",children:emergencyContacts.medical.name}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-number\",children:emergencyContacts.medical.number}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-desc\",children:emergencyContacts.medical.description})]})]}),emergencyContacts.poison&&/*#__PURE__*/_jsxs(\"div\",{className:\"emergency-contact-card poison\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-icon\",children:\"\\u2622\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contact-name\",children:emergencyContacts.poison.name}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-number\",children:emergencyContacts.poison.number}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-desc\",children:emergencyContacts.poison.description})]})]})]})]}),currentDataInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"location-context-banner\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"location-context-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-icon-section\",style:{color:currentDataInfo.is_interpolated?'#10b981':'#3b82f6'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"location-icon-large\",children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${currentDataInfo.is_interpolated?'fa-crosshairs':'fa-map-marker-alt'}`})}),/*#__PURE__*/_jsx(\"div\",{className:\"location-badge-large\",children:currentDataInfo.is_interpolated?'🎯 Your Location Data (Real Sensors)':'📍 Nearest Real Station Data'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"location-details-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-primary-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentDataInfo.explanation}),locationStatus==='gps_detected'&&currentDataInfo.distance&&/*#__PURE__*/_jsxs(\"p\",{className:\"distance-info\",children:[\"\\uD83D\\uDCCD You are \",currentDataInfo.distance.toFixed(1),\"km from the nearest real monitoring station\"]}),locationStatus==='failed'&&/*#__PURE__*/_jsx(\"p\",{className:\"location-warning\",children:\"\\u26A0\\uFE0F Location detection failed - Using default real station data for health recommendations\"}),currentDataInfo.distance_warning&&/*#__PURE__*/_jsxs(\"p\",{className:\"distance-warning\",children:[\"\\u26A0\\uFE0F \",currentDataInfo.distance_warning]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"location-method-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"method-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Data Method:\"}),\" \",currentDataInfo.is_interpolated?'Smart Interpolation (Real Sensors Only)':'Direct Real Sensor Reading']}),/*#__PURE__*/_jsxs(\"div\",{className:\"method-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Source:\"}),\" \",currentDataInfo.station_name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"method-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Accuracy:\"}),\" \",currentDataInfo.is_interpolated?'Calculated for your exact location using only real sensor data':'Direct from real monitoring station']}),currentDataInfo.stations_used_for_calculation&&/*#__PURE__*/_jsxs(\"div\",{className:\"method-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Real Stations Used:\"}),\" \",currentDataInfo.stations_used_for_calculation.join(', ')]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card forecast-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA 4-Day Air Quality Forecast\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-source\",children:[\"Data from: \",(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.station_name)||'ASIET Campus Station']}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-update\",children:[\"Last updated: \",currentTime.toLocaleTimeString()]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"forecast-controls-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"forecast-controls\",children:['pm25','pm10','no2','o3','so2','co','nh3'].map(param=>/*#__PURE__*/_jsx(\"button\",{className:`param-btn ${selectedParameter===param?'active':''}`,onClick:()=>handleParameterChange(param),title:`View ${param.toUpperCase()} forecast`,children:param.toUpperCase()},param))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-section\",children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{className:\"panel-loader\",children:\"\\uD83D\\uDCCA Loading forecast chart...\"}),children:/*#__PURE__*/_jsx(LazyChart,{forecastData:forecastData,selectedParameter:selectedParameter})})}),/*#__PURE__*/_jsx(\"div\",{className:\"forecast-table-section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"forecast-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"forecast-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uD83D\\uDCC5 Day\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"\\uD83D\\uDCC8 Max \",selectedParameter.toUpperCase()]}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD83D\\uDCCA Unit\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD83D\\uDCCD Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:forecastData&&forecastData.length>0?forecastData.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"day-cell\",children:/*#__PURE__*/_jsx(\"div\",{className:\"day-label\",children:item.displayDay})}),/*#__PURE__*/_jsx(\"td\",{className:\"value-cell\",children:/*#__PURE__*/_jsx(\"div\",{className:\"value-display\",children:item[`${selectedParameter}_max`]?selectedParameter==='co'?parseFloat(item[`${selectedParameter}_max`]).toFixed(1):Math.round(item[`${selectedParameter}_max`]):'N/A'})}),/*#__PURE__*/_jsx(\"td\",{className:\"unit-cell\",children:/*#__PURE__*/_jsx(\"div\",{className:\"unit-display\",children:selectedParameter==='co'?'mg/m³':'µg/m³'})}),/*#__PURE__*/_jsx(\"td\",{className:\"date-cell\",children:/*#__PURE__*/_jsx(\"div\",{className:\"date-display\",children:item.formattedDate})})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",className:\"no-data-cell\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-data-message\",children:[\"\\uD83D\\uDCCA Forecast data not available for \",(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.station_name)||'this station']})})})})]})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card health-details-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Your Health Profile Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-details-list\",children:Object.entries(health_assessment.details).map(_ref3=>{let[key,value]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"health-detail-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-label\",children:[key,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"detail-value\",children:Array.isArray(value)?value.join(', '):value})]},key);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"health-tips\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCA1 Health Improvement Tips\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"health-tips-list\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"health-tip\",children:\"\\uD83E\\uDEC1 Practice deep breathing exercises indoors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-tip\",children:\"\\uD83D\\uDCA7 Stay hydrated - drink 8-10 glasses of water daily\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-tip\",children:\"\\uD83E\\uDD57 Eat antioxidant-rich foods (fruits, vegetables)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-tip\",children:\"\\uD83D\\uDEBF Shower after being outdoors to remove pollutants\"}),/*#__PURE__*/_jsx(\"div\",{className:\"health-tip\",children:\"\\uD83C\\uDF31 Keep indoor air-purifying plants\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,className:\"action-btn primary\",children:\"\\uD83D\\uDD04 Refresh Report & Location Data\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePrint,className:\"action-btn secondary\",children:\"\\uD83D\\uDDA8\\uFE0F Print Report\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/health-assessment'),className:\"action-btn secondary\",children:\"\\uD83D\\uDCCB Update Health Profile\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard'),className:\"action-btn secondary\",children:\"\\uD83D\\uDCCA View Dashboard\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u26A1 Report Data Source & Methodology\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-source-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-icon\",children:\"\\uD83D\\uDCCD\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-title\",children:\"Location Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"source-desc\",children:locationStatus==='gps_detected'?currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?`Smart interpolation used - you are ${(_currentDataInfo$dist=currentDataInfo.distance)===null||_currentDataInfo$dist===void 0?void 0:_currentDataInfo$dist.toFixed(1)}km from nearest real sensor`:`Using data from nearest real monitoring station (${(_currentDataInfo$dist2=currentDataInfo.distance)===null||_currentDataInfo$dist2===void 0?void 0:_currentDataInfo$dist2.toFixed(1)}km away)`:locationStatus==='detecting'?'Detecting your location for personalized air quality analysis...':locationStatus==='failed'?'Location detection failed - using default real station data':'Initializing location services...'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-icon\",children:\"\\uD83C\\uDFE5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-title\",children:\"Health Data\"}),/*#__PURE__*/_jsx(\"div\",{className:\"source-desc\",children:\"Based on your personal health assessment and risk factors\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-icon\",children:\"\\uD83C\\uDFDB\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-title\",children:\"Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"source-desc\",children:\"Following CPCB standards and Kerala Health Department protocols\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-icon\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"source-title\",children:\"AQI Calculation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"source-desc\",children:currentDataInfo!==null&&currentDataInfo!==void 0&&currentDataInfo.is_interpolated?'Personalized AQI calculated using Inverse Distance Weighting (IDW) from real sensors only (lora-v1, loradev2)':'Direct AQI reading from nearest real monitoring station'})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"disclaimer-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC4 Official Disclaimer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"disclaimer-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFDB\\uFE0F Data Authority:\"}),\" Air quality data sourced from Government of Kerala real monitoring stations operated under Central Pollution Control Board (CPCB) guidelines.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2695\\uFE0F Health Advisory:\"}),\" Recommendations are based on standard government health guidelines. Consult healthcare professionals for personalized medical advice.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCA Data Accuracy:\"}),\" Air quality readings are updated every 30 seconds from certified real monitoring equipment. \",(currentDataInfo===null||currentDataInfo===void 0?void 0:currentDataInfo.is_interpolated)&&'Enhanced spatial interpolation uses only real sensor data for location-specific calculations.']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDD04 Updates:\"}),\" This report reflects current conditions. Air quality can change rapidly - check live updates frequently.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDE Emergency:\"}),\" In case of severe health symptoms related to air pollution, immediately contact medical emergency services (108) or Kerala Pollution Control Board (0471-2418566).\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD Location Services:\"}),\" \",locationStatus==='gps_detected'?'Your location has been detected and used for personalized air quality calculations using real sensor data only.':'Enable location services for more accurate, personalized health recommendations based on real sensor data.']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFAF Sensor Network:\"}),\" Calculations use only real monitoring stations (lora-v1: ASIET Campus, loradev2: Mattoor Junction) for maximum accuracy. Simulated stations are excluded from health calculations.\"]})]})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"footer-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"AirAware Kerala\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Smart Air Quality Monitoring System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Real-time data \\u2022 Personalized insights \\u2022 Health-focused\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"social-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"social-link\",children:\"\\uD83D\\uDCD8\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"social-link\",children:\"\\uD83D\\uDC26\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"social-link\",children:\"\\uD83D\\uDCBC\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"social-link\",children:\"\\uD83D\\uDCF7\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Quick Links\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"\\uD83C\\uDFE0 Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/health-report\",children:\"\\uD83D\\uDCC4 Health Report\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/add-family\",children:\"\\uD83D\\uDC65 Add Family\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Data Sources\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"ASIET Campus Station (Real Sensor)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Mattoor Junction Station (Real Sensor)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Advanced spatial interpolation algorithms (Real Data Only)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Weather integration\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Contact Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Adi Shankara Institute of Engineering and Technology\",/*#__PURE__*/_jsx(\"br\",{}),\"Kalady 683574, Ernakulam\",/*#__PURE__*/_jsx(\"br\",{}),\"Kerala, India\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" aiiot@adishankara.ac.in\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Phone:\"}),\" 0484 246 3825\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-bottom\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2025 AirAware Kerala - Smart Air Quality Monitoring System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Powered by real sensor data \\u2022 Advanced interpolation \\u2022 Government approved\"})]})]})})]});}export default HealthReport;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Suspense","useNavigate","Link","useAuth","logoImage","jsx","_jsx","jsxs","_jsxs","LazyChart","lazy","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","getAQIColor","aqi","getAQIStatus","calculateIDWInterpolation","userLocation","stations","console","log","Object","keys","length","warn","interpolated_values","interpolated_aqi","stations_used","method","realStationIds","realStations","forEach","id","totalWeight","weightedValues","pm25","pm10","so2","no2","co","o3","nh3","temp","hum","pre","weightedAqi","entries","_ref","stationId","station","distance","lat","lng","station_info","toFixed","safeDistance","max","weight","averages","param","undefined","highest_sub_index","round","getUserLocation","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","position","location","coords","latitude","longitude","accuracy","source","timestamp","Date","now","isNaN","error","enableHighAccuracy","timeout","maximumAge","getHealthRecommendations","healthRiskLevel","baseRecommendations","good","general","sensitive","moderate","unhealthy","hazardous","category","isSensitive","recommendations","isEmergency","getEmergencyContacts","primary","name","number","description","medical","poison","HealthReport","_currentDataInfo$dist","_currentDataInfo$dist2","user","username","reportData","setReportData","loading","setLoading","setError","isMenuOpen","setIsMenuOpen","currentTime","setCurrentTime","setUserLocation","nearestStation","setNearestStation","interpolatedData","setInterpolatedData","locationStatus","setLocationStatus","currentDataInfo","setCurrentDataInfo","isMobileView","setIsMobileView","window","innerWidth","selectedParameter","setSelectedParameter","navigate","API_BASE_URL","process","env","NODE_ENV","timer","setInterval","clearInterval","handleResize","addEventListener","removeEventListener","fetchReportData","url","response","fetch","ok","errData","json","redirect_to","data","err","message","getUserLocationForReport","nearestDist","Infinity","nearestId","_ref2","dist","isWithinSensorRange","idwResult","values","explanation","station_name","is_interpolated","data_type","stations_used_for_calculation","nearestStationData","distance_warning","_defaultStation$stati","defaultStation","displayAqi","_Object$values$","healthRecommendations","health_assessment","risk_level","emergencyContacts","aqiStatus","status","color","forecastData","forecasts","forecast","map","item","index","displayDay","formattedDate","day","toLocaleDateString","month","toggleMenu","prev","handleLogout","localStorage","clear","handleRefresh","handlePrint","print","handleParameterChange","className","children","onClick","toLocaleTimeString","to","src","alt","width","height","toLowerCase","style","backgroundColor","borderBottom","getFullYear","String","getMonth","padStart","getDate","toLocaleString","score","border","rec","action","toUpperCase","priority_actions","join","title","fallback","parseFloat","colSpan","details","_ref3","key","value","Array","isArray","href"],"sources":["C:/React/my-django-react-app/frontend/src/components/HealthReport.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport './css/HealthReport.css';\r\nimport logoImage from '../assets/aqi.webp';\r\n\r\nconst LazyChart = React.lazy(() => import('./LazyChart'));\r\n\r\n// --- Helper Functions ---\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180, dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\n\r\nconst getAQIColor = (aqi) => {\r\n    if (aqi <= 50) return '#10b981';\r\n    if (aqi <= 100) return '#f59e0b';\r\n    if (aqi <= 150) return '#ef4444';\r\n    return '#7c2d12';\r\n};\r\n\r\nconst getAQIStatus = (aqi) => {\r\n    if (aqi <= 50) return 'Good';\r\n    if (aqi <= 100) return 'Moderate';\r\n    if (aqi <= 150) return 'Unhealthy';\r\n    return 'Hazardous';\r\n};\r\n\r\n// --- CORRECTED: IDW Interpolation Function ---\r\nconst calculateIDWInterpolation = (userLocation, stations) => {\r\n    console.log('🔍 Health Report: Starting IDW calculation...');\r\n    \r\n    if (!userLocation || !stations || Object.keys(stations).length === 0) {\r\n        console.warn('⚠️ Health Report: No valid data for interpolation');\r\n        return {\r\n            interpolated_values: {},\r\n            interpolated_aqi: 50,\r\n            stations_used: 0,\r\n            method: 'fallback'\r\n        };\r\n    }\r\n    \r\n    // Use real stations only\r\n    const realStationIds = ['lora-v1', 'loradev2'];\r\n    const realStations = {};\r\n    \r\n    realStationIds.forEach(id => {\r\n        if (stations[id]) {\r\n            realStations[id] = stations[id];\r\n        }\r\n    });\r\n    \r\n    console.log('📊 Health Report: Real stations for interpolation:', Object.keys(realStations));\r\n    \r\n    if (Object.keys(realStations).length === 0) {\r\n        console.warn('⚠️ Health Report: No real stations available for interpolation');\r\n        return {\r\n            interpolated_values: {},\r\n            interpolated_aqi: 50,\r\n            stations_used: 0,\r\n            method: 'fallback'\r\n        };\r\n    }\r\n    \r\n    let totalWeight = 0;\r\n    const weightedValues = {\r\n        pm25: 0, pm10: 0, so2: 0, no2: 0, \r\n        co: 0, o3: 0, nh3: 0, temp: 0, hum: 0, pre: 0\r\n    };\r\n    let weightedAqi = 0;\r\n\r\n    Object.entries(realStations).forEach(([stationId, station]) => {\r\n        const distance = calculateDistance(\r\n            userLocation.lat,\r\n            userLocation.lng,\r\n            station.station_info.lat,\r\n            station.station_info.lng\r\n        );\r\n\r\n        console.log(`📍 Health Report: Station ${stationId}: ${distance.toFixed(2)}km away`);\r\n\r\n        const safeDistance = Math.max(distance, 0.001);\r\n        const weight = 1.0 / (safeDistance ** 2);\r\n        totalWeight += weight;\r\n\r\n        const averages = station.averages || {};\r\n        Object.keys(weightedValues).forEach(param => {\r\n            if (averages[param] !== undefined) {\r\n                weightedValues[param] += averages[param] * weight;\r\n            }\r\n        });\r\n\r\n        weightedAqi += (station.highest_sub_index || 0) * weight;\r\n    });\r\n\r\n    const interpolated_values = {};\r\n    Object.keys(weightedValues).forEach(param => {\r\n        interpolated_values[param] = totalWeight > 0 ? \r\n            Math.round((weightedValues[param] / totalWeight) * 100) / 100 : 0;\r\n    });\r\n\r\n    const interpolated_aqi = totalWeight > 0 ? \r\n        Math.round(weightedAqi / totalWeight) : 50;\r\n\r\n    console.log('✅ Health Report: IDW Result:', {\r\n        interpolated_aqi,\r\n        stations_used: Object.keys(realStations).length\r\n    });\r\n\r\n    return {\r\n        interpolated_values,\r\n        interpolated_aqi,\r\n        stations_used: Object.keys(realStations).length,\r\n        method: 'idw'\r\n    };\r\n};\r\n\r\n// --- Get User Location Function ---\r\nconst getUserLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n        if (!navigator.geolocation) {\r\n            reject(new Error('Geolocation not supported'));\r\n            return;\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const location = {\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                    accuracy: position.coords.accuracy,\r\n                    source: 'gps',\r\n                    timestamp: Date.now()\r\n                };\r\n                \r\n                if (isNaN(location.lat) || isNaN(location.lng)) {\r\n                    reject(new Error('Invalid GPS coordinates'));\r\n                    return;\r\n                }\r\n                \r\n                resolve(location);\r\n            },\r\n            (error) => {\r\n                reject(error);\r\n            },\r\n            { \r\n                enableHighAccuracy: true, \r\n                timeout: 10000, \r\n                maximumAge: 300000\r\n            }\r\n        );\r\n    });\r\n};\r\n\r\n// Health Recommendations based on AQI and Health Risk Level\r\nconst getHealthRecommendations = (aqi, healthRiskLevel) => {\r\n    const baseRecommendations = {\r\n        good: {\r\n            general: [\r\n                '🌟 Perfect air quality - enjoy all outdoor activities',\r\n                '🚶‍♂️ Great time for outdoor exercise and sports',\r\n                '🪟 Open windows to let fresh air in',\r\n                '👶 Safe conditions for children to play outside'\r\n            ],\r\n            sensitive: [\r\n                '✅ Excellent conditions for people with respiratory issues',\r\n                '🏃‍♀️ No restrictions on outdoor activities',\r\n                '💨 Breathe easy - air quality is optimal'\r\n            ]\r\n        },\r\n        moderate: {\r\n            general: [\r\n                '⚠️ Air quality is acceptable for most people',\r\n                '🏃‍♂️ Reduce prolonged outdoor exertion if sensitive',\r\n                '😷 Consider wearing a mask during heavy traffic hours',\r\n                '🌅 Best outdoor times: early morning and late evening'\r\n            ],\r\n            sensitive: [\r\n                '⚠️ Limit prolonged outdoor activities',\r\n                '😷 Wear N95 mask when going outside',\r\n                '🏠 Stay indoors during peak pollution hours',\r\n                '💊 Keep rescue medications readily available'\r\n            ]\r\n        },\r\n        unhealthy: {\r\n            general: [\r\n                '🚨 Avoid prolonged outdoor activities',\r\n                '🏠 Stay indoors as much as possible',\r\n                '😷 Wear N95 mask if you must go outside',\r\n                '🪟 Keep windows and doors closed'\r\n            ],\r\n            sensitive: [\r\n                '🚨 URGENT: Stay indoors immediately',\r\n                '🏥 Seek medical attention if experiencing symptoms',\r\n                '😷 Mandatory N95 mask for any outdoor exposure',\r\n                '📞 Contact doctor if breathing difficulties occur'\r\n            ]\r\n        },\r\n        hazardous: {\r\n            general: [\r\n                '🚨 EMERGENCY: Avoid all outdoor activities',\r\n                '🏠 Remain indoors with air purification',\r\n                '😷 N95 mask mandatory for any exposure',\r\n                '🏥 Seek immediate medical help for symptoms'\r\n            ],\r\n            sensitive: [\r\n                '🚨 HEALTH EMERGENCY: Immediate indoor shelter',\r\n                '🏥 Seek emergency medical attention',\r\n                '📞 Call emergency services if severe symptoms',\r\n                '🚗 Consider relocation to cleaner air area'\r\n            ]\r\n        }\r\n    };\r\n\r\n    // Determine category\r\n    let category = 'good';\r\n    if (aqi > 150) category = 'hazardous';\r\n    else if (aqi > 100) category = 'unhealthy'; \r\n    else if (aqi > 50) category = 'moderate';\r\n\r\n    // Determine if user is sensitive based on health risk level\r\n    const isSensitive = healthRiskLevel === 'High' || healthRiskLevel === 'Critical';\r\n    \r\n    return {\r\n        recommendations: isSensitive ? baseRecommendations[category].sensitive : baseRecommendations[category].general,\r\n        isSensitive,\r\n        category,\r\n        isEmergency: category === 'hazardous' || (category === 'unhealthy' && isSensitive)\r\n    };\r\n};\r\n\r\n// Emergency contacts based on AQI level\r\nconst getEmergencyContacts = (aqi) => {\r\n    if (aqi <= 100) return null;\r\n    \r\n    return {\r\n        primary: {\r\n            name: 'Kerala Pollution Control Board',\r\n            number: '0471-2418566',\r\n            description: '24/7 Air Quality Emergency Hotline'\r\n        },\r\n        medical: {\r\n            name: 'Medical Emergency',\r\n            number: '108',\r\n            description: 'Immediate medical assistance'\r\n        },\r\n        poison: aqi > 150 ? {\r\n            name: 'Poison Control',\r\n            number: '1066',\r\n            description: 'Pollution-related health emergencies'\r\n        } : null\r\n    };\r\n};\r\n\r\nfunction HealthReport() {\r\n    const { user } = useAuth();\r\n    const [username] = useState(user?.name || null);\r\n    const [reportData, setReportData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(new Date());\r\n    \r\n    // --- State for location and interpolation ---\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [nearestStation, setNearestStation] = useState(null);\r\n    const [interpolatedData, setInterpolatedData] = useState(null);\r\n    const [locationStatus, setLocationStatus] = useState('initializing');\r\n    const [currentDataInfo, setCurrentDataInfo] = useState(null);\r\n    const [isMobileView, setIsMobileView] = useState(window.innerWidth <= 768);\r\n    // --- Forecast parameter selection ---\r\n    const [selectedParameter, setSelectedParameter] = useState('pm25');\r\n\r\n    const navigate = useNavigate();\r\n    const API_BASE_URL = process.env.NODE_ENV === 'production' \r\n    ? 'https://airaware-app-gcw7.onrender.com' \r\n    : 'http://localhost:8000';\r\n\r\n    // Update time every minute\r\n    useEffect(() => {\r\n        const timer = setInterval(() => setCurrentTime(new Date()), 60000);\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobileView(window.innerWidth <= 768);\r\n        };\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n        }, []);\r\n\r\n    const fetchReportData = useCallback(async () => {\r\n        if (!username) { navigate('/login'); return; }\r\n        setLoading(true);\r\n        try {\r\n            const url = `${API_BASE_URL}/api/health-report/?username=${username}`;\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                if (errData.redirect_to) navigate(errData.redirect_to);\r\n                throw new Error(errData.error);\r\n            }\r\n            const data = await response.json();\r\n            setReportData(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [username, navigate, API_BASE_URL]);\r\n\r\n    // --- Get user location ---\r\n    const getUserLocationForReport = useCallback(async () => {\r\n        try {\r\n            setLocationStatus('detecting');\r\n            const location = await getUserLocation();\r\n            setUserLocation(location);\r\n            setLocationStatus('gps_detected');\r\n            console.log('📍 Health Report: Location obtained:', location);\r\n        } catch (error) {\r\n            console.log('📍 Health Report: Location detection failed:', error);\r\n            setLocationStatus('failed');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchReportData();\r\n        getUserLocationForReport();\r\n    }, [fetchReportData, getUserLocationForReport]);\r\n\r\n    // --- Process location and interpolation ---\r\n    useEffect(() => {\r\n        if (userLocation && reportData?.stations) {\r\n            console.log('🔄 Health Report: Processing location and stations data...');\r\n            \r\n            const stations = reportData.stations;\r\n            \r\n            // Use real stations only for calculations\r\n            const realStationIds = ['lora-v1', 'loradev2'];\r\n            const realStations = {};\r\n            \r\n            realStationIds.forEach(id => {\r\n                if (stations[id]) {\r\n                    realStations[id] = stations[id];\r\n                }\r\n            });\r\n            \r\n            if (Object.keys(realStations).length === 0) {\r\n                console.warn('⚠️ Health Report: No real stations available');\r\n                return;\r\n            }\r\n            \r\n            // Find nearest real station - FIXED NULL CHECK\r\n            let nearestDist = Infinity, nearestId = null;\r\n            Object.entries(realStations).forEach(([id, station]) => {\r\n                if (station && station.station_info) {\r\n                    const dist = calculateDistance(\r\n                        userLocation.lat, \r\n                        userLocation.lng, \r\n                        station.station_info.lat, \r\n                        station.station_info.lng\r\n                    );\r\n                    if (dist < nearestDist) { \r\n                        nearestDist = dist; \r\n                        nearestId = id; \r\n                    }\r\n                }\r\n            });\r\n            \r\n            if (nearestId && realStations[nearestId]) {\r\n                setNearestStation({ \r\n                    id: nearestId, \r\n                    distance: nearestDist,\r\n                    station: realStations[nearestId]\r\n                });\r\n\r\n                console.log(`📍 Health Report: Nearest real station: ${nearestId} at ${nearestDist.toFixed(2)}km`);\r\n\r\n                // Check if user is within 1km of any real station\r\n                const isWithinSensorRange = nearestDist <= 1.0;\r\n                \r\n                if (isWithinSensorRange) {\r\n                    // User is within 1km - use interpolation\r\n                    const idwResult = calculateIDWInterpolation(userLocation, realStations);\r\n                    \r\n                    setInterpolatedData({ \r\n                        aqi: idwResult.interpolated_aqi,\r\n                        values: idwResult.interpolated_values\r\n                    });\r\n                    \r\n                    setCurrentDataInfo({\r\n                        method: 'location_interpolation',\r\n                        source: 'interpolated',\r\n                        explanation: `You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Showing calculated air quality for your exact location using data from the 2 real monitoring stations only.`,\r\n                        values: idwResult.interpolated_values,\r\n                        aqi: idwResult.interpolated_aqi,\r\n                        station_name: `Your Location (Calculated from Real Stations)`,\r\n                        is_interpolated: true,\r\n                        distance: nearestDist,\r\n                        data_type: 'Your Location Data (Real Sensor Interpolation)',\r\n                        stations_used_for_calculation: Object.keys(realStations)\r\n                    });\r\n                    \r\n                    console.log('✅ Health Report: Using interpolated data from real stations - AQI:', idwResult.interpolated_aqi);\r\n                } else {\r\n                    // User is >1km away - use nearest real station\r\n                    const nearestStationData = realStations[nearestId];\r\n                    \r\n                    setCurrentDataInfo({\r\n                        method: 'nearest_station',\r\n                        source: 'nearest_station',\r\n                        explanation: `You are ${nearestDist.toFixed(1)}km from the nearest real sensor. Too far for accurate interpolation - showing data from ${nearestStationData.station_info.name} (nearest real monitoring station).`,\r\n                        values: nearestStationData.averages || {},\r\n                        aqi: nearestStationData.highest_sub_index || 50,\r\n                        station_name: nearestStationData.station_info.name,\r\n                        is_interpolated: false,\r\n                        distance: nearestDist,\r\n                        data_type: 'Nearest Real Station Data',\r\n                        distance_warning: nearestDist > 1.0 ? `You are ${nearestDist.toFixed(1)}km away from real sensors, so you cannot get interpolated values for your exact location.` : null\r\n                    });\r\n                    \r\n                    console.log('✅ Health Report: Using nearest real station data - AQI:', nearestStationData.highest_sub_index);\r\n                }\r\n            }\r\n        } else if (reportData?.stations) {\r\n            // No location - use default station (prefer real station)\r\n            const stations = reportData.stations;\r\n            const defaultStation = stations['lora-v1'] || stations['loradev2'] || stations[Object.keys(stations)[0]] || {};\r\n            \r\n            setCurrentDataInfo({\r\n                method: 'default_station',\r\n                source: 'default',\r\n                explanation: 'Location not available. Showing data from default real monitoring station.',\r\n                values: defaultStation.averages || {},\r\n                aqi: defaultStation.highest_sub_index || 50,\r\n                station_name: defaultStation.station_info?.name || 'ASIET Campus Station',\r\n                is_interpolated: false,\r\n                distance: null,\r\n                data_type: 'Default Real Station Data'\r\n            });\r\n            \r\n            console.log('✅ Health Report: Using default real station data');\r\n        }\r\n    }, [userLocation, reportData]);\r\n\r\n    // --- Memoized calculations ---\r\n    const displayAqi = useMemo(() => {\r\n        if (currentDataInfo?.is_interpolated && interpolatedData) {\r\n            return interpolatedData.aqi;\r\n        } else if (currentDataInfo?.aqi) {\r\n            return currentDataInfo.aqi;\r\n        } else {\r\n            return Object.values(reportData?.stations || {})[0]?.highest_sub_index || 0;\r\n        }\r\n    }, [currentDataInfo, interpolatedData, reportData]);\r\n\r\n    const healthRecommendations = useMemo(() => {\r\n        if (!reportData?.health_assessment) return null;\r\n        return getHealthRecommendations(displayAqi, reportData.health_assessment.risk_level);\r\n    }, [displayAqi, reportData]);\r\n\r\n    const emergencyContacts = useMemo(() => {\r\n        return getEmergencyContacts(displayAqi);\r\n    }, [displayAqi]);\r\n\r\n    const aqiStatus = useMemo(() => {\r\n        const status = getAQIStatus(displayAqi);\r\n        const color = getAQIColor(displayAqi);\r\n        return { status, color };\r\n    }, [displayAqi]);\r\n\r\n    // --- FIXED: Format forecast data with proper date handling ---\r\n    const forecastData = useMemo(() => {\r\n        if (!nearestStation || !reportData?.forecasts) return [];\r\n        \r\n        const forecast = reportData.forecasts[nearestStation.id];\r\n        if (!forecast || !forecast.data) return [];\r\n        \r\n        // Add proper date formatting\r\n        return forecast.data.map((item, index) => ({\r\n            ...item,\r\n            displayDay: index === 0 ? 'Today' : \r\n                      index === 1 ? 'Tomorrow' : \r\n                      `Day ${index + 1}`,\r\n            formattedDate: item.day ? new Date(item.day).toLocaleDateString('en-IN', { \r\n                month: 'short', \r\n                day: 'numeric' \r\n            }) : `Day ${index + 1}`\r\n        }));\r\n    }, [nearestStation, reportData]);\r\n\r\n    // Event handlers\r\n    const toggleMenu = useCallback(() => setIsMenuOpen(prev => !prev), []);\r\n    const handleLogout = useCallback(() => {\r\n        localStorage.clear();\r\n        navigate('/login');\r\n    }, [navigate]);\r\n\r\n    const handleRefresh = useCallback(() => {\r\n        fetchReportData();\r\n        getUserLocationForReport();\r\n    }, [fetchReportData, getUserLocationForReport]);\r\n\r\n\r\n    const handlePrint = useCallback(() => {\r\n        window.print();\r\n    }, []);\r\n\r\n    const handleParameterChange = useCallback((param) => {\r\n        setSelectedParameter(param);\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"panel-loader\"><h2>🏥 Generating Your Health Report...</h2><div className=\"loading-spinner\"></div></div>;\r\n\r\n    if (error) return (\r\n      <div className=\"error-message\">\r\n        <h2>⚠️ Error</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => navigate('/dashboard')} className=\"retry-btn\">\r\n          📊 Go to Dashboard\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    if (!reportData) return <div className=\"error-message\"><h2>📊 No Report Data</h2><p>Unable to generate your health report at this time.</p></div>;\r\n\r\n    // --- FIX [START]: Add a loading check for currentDataInfo ---\r\n    // This ensures derived data is ready before rendering the report body.\r\n    if (!currentDataInfo) {\r\n        return (\r\n            <div className=\"panel-loader\">\r\n                <h2>🔄 Processing Location Data...</h2>\r\n                <div className=\"loading-spinner\"></div>\r\n            </div>\r\n        );\r\n    }\r\n    // --- FIX [END] ---\r\n\r\n    const { health_assessment, stations, forecasts } = reportData;\r\n\r\n    return (\r\n        <div className=\"report-page\">\r\n            {/* Real-time Status Bar */}\r\n            <div className=\"realtime-status\">\r\n                🔴 LIVE HEALTH REPORT • Updated: {currentTime.toLocaleTimeString('en-IN')} • \r\n                {currentDataInfo?.is_interpolated ? ' Smart Real Sensor Analysis' : ' Government Standards Applied'}\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-content\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                                {/* 2. USE THE IMPORTED VARIABLE */}\r\n                                <img src={logoImage} alt=\"AQM Logo\" width={isMobileView ? \"32\" : \"40\"} height={isMobileView ? \"32\" : \"40\"} />\r\n                                AirAware\r\n                              </Link>\r\n\r\n                    <div className=\"menu-toggle\" onClick={toggleMenu}>☰</div>\r\n\r\n                    <ul className={`nav-links ${isMenuOpen ? 'active' : ''}`}>\r\n                        <li><Link to=\"/\" className=\"nav-link\">🏠 Home</Link></li>\r\n                        <li><Link to=\"/dashboard\" className=\"nav-link\">Profile</Link></li>\r\n                        <li><Link to=\"/health-assessment\" className=\"nav-link\">📋 Health Update</Link></li>\r\n                        <li><Link to=\"/add-family\" className=\"nav-link\">👥 Add Family</Link></li>\r\n                        <li><Link to=\"/map\" className=\"nav-link\">🗺️ Live Map</Link></li>\r\n                        <li className=\"user-info\">👤 <span>{username}</span></li>\r\n                        <li>\r\n                            <button onClick={handleLogout} className=\"nav-link login-btn\">🚪 Logout</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            {/* Health Alert Banner */}\r\n            {healthRecommendations?.isEmergency && (\r\n                <div className=\"emergency-alert-banner\">\r\n                    🚨 <strong>HEALTH EMERGENCY ALERT:</strong> \r\n                    AQI {Math.round(displayAqi)} - {aqiStatus.status} conditions detected.\r\n                    {healthRecommendations.isSensitive && ' High-risk individual - immediate action required!'}\r\n                </div>\r\n            )}\r\n\r\n            {/* Alert Banner */}\r\n            <div className={`alert-banner ${aqiStatus.status.toLowerCase()}`} style={{ backgroundColor: getAQIColor(displayAqi) + '20', borderBottom: `3px solid ${getAQIColor(displayAqi)}` }}>\r\n                ℹ️ <span>\r\n                    <strong>CURRENT AIR QUALITY:</strong> \r\n                    {currentDataInfo?.is_interpolated ? ' Your Location (Real Sensors)' : ' Nearest Real Station'} AQI is {Math.round(displayAqi)} - {aqiStatus.status}\r\n                    {currentDataInfo?.distance && ` • Distance: ${currentDataInfo.distance.toFixed(1)}km from nearest real sensor`}\r\n                    {currentDataInfo?.distance_warning && (\r\n                        <div className=\"distance-warning-inline\">\r\n                            ⚠️ {currentDataInfo.distance_warning}\r\n                        </div>\r\n                    )}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"report-container\">\r\n                {/* Enhanced Header Section */}\r\n                <div className=\"header-section\">\r\n                    <div className=\"official-seal\">🏛️</div>\r\n                    <div className=\"government-badge\">\r\n                        Air Quality Monitoring\r\n                    </div>\r\n                    <div className=\"document-id\">\r\n                        DOC-ID: HR-{username}-{new Date().getFullYear()}{String(new Date().getMonth() + 1).padStart(2, '0')}{String(new Date().getDate()).padStart(2, '0')}\r\n                    </div>\r\n                    <h1>🏥 Official Air Quality Health Report</h1>\r\n                    <p>\r\n                        Personalized health assessment based on your location's air quality and personal health profile.\r\n                        {currentDataInfo?.is_interpolated && ' Using advanced spatial interpolation from real sensors only for precise location analysis.'}\r\n                    </p>\r\n                    <div className=\"report-metadata\">\r\n                        <div className=\"metadata-item\">\r\n                            <strong>Generated:</strong> {new Date().toLocaleString('en-IN')}\r\n                        </div>\r\n                        <div className=\"metadata-item\">\r\n                            <strong>Name:</strong> {username}\r\n                        </div>\r\n                        <div className=\"metadata-item\">\r\n                            <strong>Location:</strong> {currentDataInfo?.is_interpolated ? 'Your Current Location' : 'Nearest Real Station Data'}\r\n                        </div>\r\n                        {/*}\r\n                        {currentDataInfo?.stations_used_for_calculation && (\r\n                            <div className=\"metadata-item\">\r\n                                <strong>Calculation Method:</strong> Interpolated from {currentDataInfo.stations_used_for_calculation.join(', ')}\r\n                            </div>\r\n                        )}*/}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Executive Summary */}\r\n                <div className=\"executive-summary\">\r\n                    <h2 className=\"section-title\">📋 Executive Health Summary</h2>\r\n                    <div className=\"overview-grid\">\r\n                        <div className=\"overview-card health-card\">\r\n                            <h4>👤 Your Health Profile</h4>\r\n                            <div className=\"health-score\">{health_assessment.score}</div>\r\n                            <div className={`risk-level ${health_assessment.risk_level.toLowerCase()}`}>\r\n                                {health_assessment.risk_level} Risk\r\n                            </div>\r\n                            <div className=\"health-description\">\r\n                                {health_assessment.risk_level === 'Low' && 'You have minimal risk from air pollution effects'}\r\n                                {health_assessment.risk_level === 'Moderate' && 'You have moderate susceptibility to air pollution'}\r\n                                {health_assessment.risk_level === 'High' && 'You are at high risk from air pollution effects'}\r\n                                {health_assessment.risk_level === 'Critical' && 'You are at critical risk and need immediate precautions'}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"overview-card aqi-card\">\r\n                            <h4>🌬️ Current Air Quality</h4>\r\n                            <div className=\"station-name\">\r\n                                {currentDataInfo?.is_interpolated ? '🎯 Your Location (Real Sensors)' : `📍 ${currentDataInfo?.station_name || 'Default Station'}`}\r\n                                {currentDataInfo?.distance && (\r\n                                    <div className=\"distance-info\">\r\n                                        Distance: {currentDataInfo.distance.toFixed(1)}km from nearest real sensor\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"station-aqi\" style={{ color: aqiStatus.color }}>\r\n                                {Math.round(displayAqi)}\r\n                            </div>\r\n                            <div className=\"aqi-status-badge\" style={{ \r\n                                backgroundColor: aqiStatus.color + '20', \r\n                                color: aqiStatus.color,\r\n                                border: `2px solid ${aqiStatus.color}`\r\n                            }}>\r\n                                {aqiStatus.status}\r\n                            </div>\r\n                            {currentDataInfo?.is_interpolated && (\r\n                                <div className=\"interpolation-badge\">\r\n                                    🎯 Calculated for Your Location (Real Sensors Only)\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"overview-card summary-card\">\r\n                            <h4>⚕️ Health Risk Assessment</h4>\r\n                            <div className=\"risk-summary\">\r\n                                <div className=\"risk-indicator\">\r\n                                    <div className={`risk-dot ${health_assessment.risk_level.toLowerCase()}`}></div>\r\n                                    <span>Based on your health profile and current air quality, you are classified as <strong>{health_assessment.risk_level} Risk</strong></span>\r\n                                </div>\r\n                                {healthRecommendations?.isSensitive && (\r\n                                    <div className=\"sensitive-warning\">\r\n                                        ⚠️ You are in a sensitive group - please follow enhanced precautions\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Critical Health Alerts */}\r\n                {healthRecommendations?.isEmergency && (\r\n                    <div className=\"critical-health-section\">\r\n                        <div className=\"emergency-header\">\r\n                            <div className=\"emergency-icon\">🚨</div>\r\n                            <h2>IMMEDIATE HEALTH PRECAUTIONS REQUIRED</h2>\r\n                        </div>\r\n                        <div className=\"emergency-content\">\r\n                            <div className=\"emergency-reason\">\r\n                                <p><strong>Air Quality Emergency:</strong> Current AQI of {Math.round(displayAqi)} poses immediate health risks.</p>\r\n                                {healthRecommendations.isSensitive && (\r\n                                    <p><strong>High-Risk Individual:</strong> Your health profile indicates increased vulnerability.</p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"emergency-actions\">\r\n                                <h3>🚨 IMMEDIATE ACTIONS:</h3>\r\n                                <ul className=\"emergency-list\">\r\n                                    {healthRecommendations.recommendations.map((rec, index) => (\r\n                                        <li key={index}>{rec}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Health Recommendations Section */}\r\n                <div className=\"recommendations-section\">\r\n                    <h2 className=\"section-title\">\r\n                        💡 Personalized Health Recommendations\r\n                        {healthRecommendations?.isSensitive && <span className=\"sensitive-badge\">Sensitive Group</span>}\r\n                    </h2>\r\n                    \r\n                    {/* Government Guidelines */}\r\n                    <div className=\"guidelines-banner\">\r\n                        <div className=\"guidelines-icon\">🏛️</div>\r\n                        <div className=\"guidelines-text\">\r\n                            <strong>Official Government Guidelines:</strong> Based on Central Pollution Control Board (CPCB) standards \r\n                            and Kerala State Health Department recommendations for air quality health protection.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"recommendations-grid\">\r\n                        {healthRecommendations?.recommendations.map((action, index) => (\r\n                            <div key={index} className={`recommendation-card ${healthRecommendations.category} ${healthRecommendations.isSensitive ? 'sensitive' : ''}`}>\r\n                                <div className=\"rec-icon\">\r\n                                    <i className={healthRecommendations.isEmergency ? \"fas fa-exclamation-triangle\" : \"fas fa-check-circle\"}></i>\r\n                                </div>\r\n                                <div className=\"rec-content\">\r\n                                    <div className=\"rec-priority\">\r\n                                        {healthRecommendations.isEmergency ? 'URGENT' : healthRecommendations.category.toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"rec-text\">{action}</div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Additional Recommendations from Health Assessment */}\r\n                    {health_assessment.priority_actions && health_assessment.priority_actions.length > 0 && (\r\n                        <div className=\"additional-recommendations\">\r\n                            <h3>📋 Additional Health Recommendations</h3>\r\n                            <div className=\"additional-grid\">\r\n                                {health_assessment.priority_actions.map((action, index) => (\r\n                                    <div key={index} className=\"additional-rec-card\">\r\n                                        <div className=\"additional-rec-icon\">💊</div>\r\n                                        <div className=\"additional-rec-text\">{action}</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Emergency Contacts */}\r\n                {emergencyContacts && (\r\n                    <div className=\"emergency-contacts-section\">\r\n                        <h2 className=\"section-title\">🆘 Emergency Health Contacts</h2>\r\n                        <div className=\"emergency-contacts-grid\">\r\n                            <div className=\"emergency-contact-card primary\">\r\n                                <div className=\"contact-icon\">📞</div>\r\n                                <div className=\"contact-info\">\r\n                                    <div className=\"contact-name\">{emergencyContacts.primary.name}</div>\r\n                                    <div className=\"contact-number\">{emergencyContacts.primary.number}</div>\r\n                                    <div className=\"contact-desc\">{emergencyContacts.primary.description}</div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"emergency-contact-card medical\">\r\n                                <div className=\"contact-icon\">🏥</div>\r\n                                <div className=\"contact-info\">\r\n                                    <div className=\"contact-name\">{emergencyContacts.medical.name}</div>\r\n                                    <div className=\"contact-number\">{emergencyContacts.medical.number}</div>\r\n                                    <div className=\"contact-desc\">{emergencyContacts.medical.description}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {emergencyContacts.poison && (\r\n                                <div className=\"emergency-contact-card poison\">\r\n                                    <div className=\"contact-icon\">☢️</div>\r\n                                    <div className=\"contact-info\">\r\n                                        <div className=\"contact-name\">{emergencyContacts.poison.name}</div>\r\n                                        <div className=\"contact-number\">{emergencyContacts.poison.number}</div>\r\n                                        <div className=\"contact-desc\">{emergencyContacts.poison.description}</div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {/* Location Context Banner */}\r\n                {currentDataInfo && (\r\n                    <div className=\"location-context-banner\">\r\n                        <div className=\"location-context-content\">\r\n                            <div className=\"location-icon-section\" style={{ color: currentDataInfo.is_interpolated ? '#10b981' : '#3b82f6' }}>\r\n                                <div className=\"location-icon-large\">\r\n                                    <i className={`fas ${currentDataInfo.is_interpolated ? 'fa-crosshairs' : 'fa-map-marker-alt'}`}></i>\r\n                                </div>\r\n                                <div className=\"location-badge-large\">\r\n                                    {currentDataInfo.is_interpolated ? '🎯 Your Location Data (Real Sensors)' : '📍 Nearest Real Station Data'}\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"location-details-section\">\r\n                                <div className=\"location-primary-info\">\r\n                                    <h3>{currentDataInfo.explanation}</h3>\r\n                                    {locationStatus === 'gps_detected' && currentDataInfo.distance && (\r\n                                        <p className=\"distance-info\">\r\n                                            📍 You are {currentDataInfo.distance.toFixed(1)}km from the nearest real monitoring station\r\n                                        </p>\r\n                                    )}\r\n                                    {locationStatus === 'failed' && (\r\n                                        <p className=\"location-warning\">\r\n                                            ⚠️ Location detection failed - Using default real station data for health recommendations\r\n                                        </p>\r\n                                    )}\r\n                                    {currentDataInfo.distance_warning && (\r\n                                        <p className=\"distance-warning\">\r\n                                            ⚠️ {currentDataInfo.distance_warning}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                                \r\n                                <div className=\"location-method-info\">\r\n                                    <div className=\"method-item\">\r\n                                        <strong>Data Method:</strong> {currentDataInfo.is_interpolated ? 'Smart Interpolation (Real Sensors Only)' : 'Direct Real Sensor Reading'}\r\n                                    </div>\r\n                                    <div className=\"method-item\">\r\n                                        <strong>Source:</strong> {currentDataInfo.station_name}\r\n                                    </div>\r\n                                    <div className=\"method-item\">\r\n                                        <strong>Accuracy:</strong> {currentDataInfo.is_interpolated ? 'Calculated for your exact location using only real sensor data' : 'Direct from real monitoring station'}\r\n                                    </div>\r\n                                    {currentDataInfo.stations_used_for_calculation && (\r\n                                        <div className=\"method-item\">\r\n                                            <strong>Real Stations Used:</strong> {currentDataInfo.stations_used_for_calculation.join(', ')}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {/* FIXED: Dashboard Grid with Mobile-Optimized Forecast */}\r\n                <div className=\"dashboard-grid\">\r\n                    <div className=\"dashboard-card forecast-card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>📊 4-Day Air Quality Forecast</h3>\r\n                            <div className=\"forecast-info\">\r\n                                <div className=\"forecast-source\">\r\n                                    Data from: {currentDataInfo?.station_name || 'ASIET Campus Station'}\r\n                                </div>\r\n                                <div className=\"forecast-update\">\r\n                                    Last updated: {currentTime.toLocaleTimeString()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* IMPROVED: Horizontal Scrollable Parameter Selection */}\r\n                        <div className=\"forecast-controls-wrapper\">\r\n                            <div className=\"forecast-controls\">\r\n                                {['pm25', 'pm10', 'no2', 'o3', 'so2', 'co', 'nh3'].map(param => (\r\n                                    <button \r\n                                        key={param}\r\n                                        className={`param-btn ${selectedParameter === param ? 'active' : ''}`}\r\n                                        onClick={() => handleParameterChange(param)}\r\n                                        title={`View ${param.toUpperCase()} forecast`}\r\n                                    >\r\n                                        {param.toUpperCase()}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* FIXED: Chart and Table Section */}\r\n                        <div className=\"forecast-content\">\r\n                            <div className=\"chart-section\">\r\n                                <Suspense fallback={<div className=\"panel-loader\">📊 Loading forecast chart...</div>}>\r\n                                    <LazyChart \r\n                                        forecastData={forecastData}\r\n                                        selectedParameter={selectedParameter}\r\n                                    />\r\n                                </Suspense>\r\n                            </div>\r\n                            \r\n                            {/* FIXED: Forecast Data Table with Proper Dates */}\r\n                            <div className=\"forecast-table-section\">\r\n                                <div className=\"forecast-table-container\">\r\n                                    <table className=\"forecast-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>📅 Day</th>\r\n                                                <th>📈 Max {selectedParameter.toUpperCase()}</th>\r\n                                                <th>📊 Unit</th>\r\n                                                <th>📍 Date</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {forecastData && forecastData.length > 0 ? (\r\n                                                forecastData.map((item, index) => (\r\n                                                    <tr key={index}>\r\n                                                        <td className=\"day-cell\">\r\n                                                            <div className=\"day-label\">{item.displayDay}</div>\r\n                                                        </td>\r\n                                                        <td className=\"value-cell\">\r\n                                                            <div className=\"value-display\">\r\n                                                                {item[`${selectedParameter}_max`] ? \r\n                                                                    (selectedParameter === 'co' ? \r\n                                                                        parseFloat(item[`${selectedParameter}_max`]).toFixed(1) : \r\n                                                                        Math.round(item[`${selectedParameter}_max`])\r\n                                                                    ) : 'N/A'\r\n                                                                }\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"unit-cell\">\r\n                                                            <div className=\"unit-display\">\r\n                                                                {selectedParameter === 'co' ? 'mg/m³' : 'µg/m³'}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"date-cell\">\r\n                                                            <div className=\"date-display\">\r\n                                                                {item.formattedDate}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            ) : (\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\" className=\"no-data-cell\">\r\n                                                        <div className=\"no-data-message\">\r\n                                                            📊 Forecast data not available for {currentDataInfo?.station_name || 'this station'}\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"dashboard-card health-details-card\">\r\n                        <h3>📋 Your Health Profile Details</h3>\r\n                        <div className=\"health-details-list\">\r\n                            {Object.entries(health_assessment.details).map(([key, value]) => (\r\n                                <div key={key} className=\"health-detail-item\">\r\n                                    <div className=\"detail-label\">{key}:</div>\r\n                                    <div className=\"detail-value\">\r\n                                        {Array.isArray(value) ? value.join(', ') : value}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        \r\n                        {/* Health Improvement Tips */}\r\n                        <div className=\"health-tips\">\r\n                            <h4>💡 Health Improvement Tips</h4>\r\n                            <div className=\"health-tips-list\">\r\n                                <div className=\"health-tip\">🫁 Practice deep breathing exercises indoors</div>\r\n                                <div className=\"health-tip\">💧 Stay hydrated - drink 8-10 glasses of water daily</div>\r\n                                <div className=\"health-tip\">🥗 Eat antioxidant-rich foods (fruits, vegetables)</div>\r\n                                <div className=\"health-tip\">🚿 Shower after being outdoors to remove pollutants</div>\r\n                                <div className=\"health-tip\">🌱 Keep indoor air-purifying plants</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"action-buttons\">\r\n                    <button onClick={handleRefresh} className=\"action-btn primary\">\r\n                        🔄 Refresh Report & Location Data\r\n                    </button>\r\n                    <button onClick={handlePrint} className=\"action-btn secondary\">\r\n                        🖨️ Print Report\r\n                    </button>\r\n                    <button onClick={() => navigate('/health-assessment')} className=\"action-btn secondary\">\r\n                        📋 Update Health Profile\r\n                    </button>\r\n                    <button onClick={() => navigate('/dashboard')} className=\"action-btn secondary\">\r\n                        📊 View Dashboard\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Data Source Information */}\r\n                <div className=\"data-source-section\">\r\n                    <h3>⚡ Report Data Source & Methodology</h3>\r\n                    <div className=\"data-source-info\">\r\n                        <div className=\"source-item\">\r\n                            <div className=\"source-icon\">📍</div>\r\n                            <div className=\"source-content\">\r\n                                <div className=\"source-title\">Location Analysis</div>\r\n                                <div className=\"source-desc\">\r\n                                    {locationStatus === 'gps_detected' ? (\r\n                                        currentDataInfo?.is_interpolated ? \r\n                                        `Smart interpolation used - you are ${currentDataInfo.distance?.toFixed(1)}km from nearest real sensor` :\r\n                                        `Using data from nearest real monitoring station (${currentDataInfo.distance?.toFixed(1)}km away)`\r\n                                    ) : locationStatus === 'detecting' ? (\r\n                                        'Detecting your location for personalized air quality analysis...'\r\n                                    ) : locationStatus === 'failed' ? (\r\n                                        'Location detection failed - using default real station data'\r\n                                    ) : (\r\n                                        'Initializing location services...'\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"source-item\">\r\n                            <div className=\"source-icon\">🏥</div>\r\n                            <div className=\"source-content\">\r\n                                <div className=\"source-title\">Health Data</div>\r\n                                <div className=\"source-desc\">Based on your personal health assessment and risk factors</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"source-item\">\r\n                            <div className=\"source-icon\">🏛️</div>\r\n                            <div className=\"source-content\">\r\n                                <div className=\"source-title\">Guidelines</div>\r\n                                <div className=\"source-desc\">Following CPCB standards and Kerala Health Department protocols</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"source-item\">\r\n                            <div className=\"source-icon\">🎯</div>\r\n                            <div className=\"source-content\">\r\n                                <div className=\"source-title\">AQI Calculation</div>\r\n                                <div className=\"source-desc\">\r\n                                    {currentDataInfo?.is_interpolated ? \r\n                                        'Personalized AQI calculated using Inverse Distance Weighting (IDW) from real sensors only (lora-v1, loradev2)' :\r\n                                        'Direct AQI reading from nearest real monitoring station'\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Government Disclaimer */}\r\n                <div className=\"disclaimer-section\">\r\n                    <h3>📄 Official Disclaimer</h3>\r\n                    <div className=\"disclaimer-content\">\r\n                        <p><strong>🏛️ Data Authority:</strong> Air quality data sourced from Government of Kerala real monitoring stations operated under Central Pollution Control Board (CPCB) guidelines.</p>\r\n                        <p><strong>⚕️ Health Advisory:</strong> Recommendations are based on standard government health guidelines. Consult healthcare professionals for personalized medical advice.</p>\r\n                        <p><strong>📊 Data Accuracy:</strong> Air quality readings are updated every 30 seconds from certified real monitoring equipment. {currentDataInfo?.is_interpolated && 'Enhanced spatial interpolation uses only real sensor data for location-specific calculations.'}</p>\r\n                        <p><strong>🔄 Updates:</strong> This report reflects current conditions. Air quality can change rapidly - check live updates frequently.</p>\r\n                        <p><strong>📞 Emergency:</strong> In case of severe health symptoms related to air pollution, immediately contact medical emergency services (108) or Kerala Pollution Control Board (0471-2418566).</p>\r\n                        <p><strong>📍 Location Services:</strong> {locationStatus === 'gps_detected' ? 'Your location has been detected and used for personalized air quality calculations using real sensor data only.' : 'Enable location services for more accurate, personalized health recommendations based on real sensor data.'}</p>\r\n                        <p><strong>🎯 Sensor Network:</strong> Calculations use only real monitoring stations (lora-v1: ASIET Campus, loradev2: Mattoor Junction) for maximum accuracy. Simulated stations are excluded from health calculations.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n             {/* Footer */}\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          <div className=\"footer-content\">\r\n            <div className=\"footer-section\">\r\n              <h4>AirAware Kerala</h4>\r\n              <p>Smart Air Quality Monitoring System</p>\r\n              <p>Real-time data • Personalized insights • Health-focused</p>\r\n              <div className=\"social-links\">\r\n                <a href=\"#\" className=\"social-link\">📘</a>\r\n                <a href=\"#\" className=\"social-link\">🐦</a>\r\n                <a href=\"#\" className=\"social-link\">💼</a>\r\n                <a href=\"#\" className=\"social-link\">📷</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-section\">\r\n              <h4>Quick Links</h4>\r\n              <ul>\r\n                <li><a href=\"/\">🏠 Home</a></li>\r\n                <li><a href=\"/health-report\">📄 Health Report</a></li>\r\n                <li><a href=\"/add-family\">👥 Add Family</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"footer-section\">\r\n              <h4>Data Sources</h4>\r\n              <ul>\r\n                <li>ASIET Campus Station (Real Sensor)</li>\r\n                <li>Mattoor Junction Station (Real Sensor)</li>\r\n                <li>Advanced spatial interpolation algorithms (Real Data Only)</li>\r\n                <li>Weather integration</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"footer-section\">\r\n              <h4>Contact Information</h4>\r\n              <p>\r\n                Adi Shankara Institute of Engineering and Technology<br/>\r\n                Kalady 683574, Ernakulam<br/>\r\n                Kerala, India\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong> aiiot@adishankara.ac.in<br/>\r\n                <strong>Phone:</strong> 0484 246 3825\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-bottom\">\r\n            <p>&copy; 2025 AirAware Kerala - Smart Air Quality Monitoring System</p>\r\n            <p>Powered by real sensor data • Advanced interpolation • Government approved</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}